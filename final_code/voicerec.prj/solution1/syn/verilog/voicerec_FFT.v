// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module voicerec_FFT (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        c_address0,
        c_ce0,
        c_we0,
        c_d0,
        c_q0,
        c_address1,
        c_ce1,
        c_we1,
        c_d1,
        c_q1
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 42'b1;
parameter    ap_ST_st2_fsm_1 = 42'b10;
parameter    ap_ST_st3_fsm_2 = 42'b100;
parameter    ap_ST_st4_fsm_3 = 42'b1000;
parameter    ap_ST_st5_fsm_4 = 42'b10000;
parameter    ap_ST_st6_fsm_5 = 42'b100000;
parameter    ap_ST_st7_fsm_6 = 42'b1000000;
parameter    ap_ST_st8_fsm_7 = 42'b10000000;
parameter    ap_ST_st9_fsm_8 = 42'b100000000;
parameter    ap_ST_st10_fsm_9 = 42'b1000000000;
parameter    ap_ST_st11_fsm_10 = 42'b10000000000;
parameter    ap_ST_st12_fsm_11 = 42'b100000000000;
parameter    ap_ST_st13_fsm_12 = 42'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 42'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 42'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 42'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 42'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 42'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 42'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 42'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 42'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 42'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 42'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 42'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 42'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 42'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 42'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 42'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 42'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 42'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 42'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 42'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 42'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 42'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 42'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 42'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 42'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 42'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 42'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 42'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 42'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 42'b100000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_80 = 32'b10000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv39_0 = 39'b000000000000000000000000000000000000000;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv9_100 = 9'b100000000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv32_101 = 32'b100000001;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_100 = 32'b100000000;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv8_80 = 8'b10000000;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] c_address0;
output   c_ce0;
output   c_we0;
output  [31:0] c_d0;
input  [31:0] c_q0;
output  [8:0] c_address1;
output   c_ce1;
output   c_we1;
output  [31:0] c_d1;
input  [31:0] c_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] c_address0;
reg c_ce0;
reg c_we0;
reg[31:0] c_d0;
reg[8:0] c_address1;
reg c_ce1;
reg c_we1;
reg[31:0] c_d1;
(* fsm_encoding = "none" *) reg   [41:0] ap_CS_fsm = 42'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_60;
wire   [7:0] cosVec_address0;
reg    cosVec_ce0;
wire   [31:0] cosVec_q0;
wire   [7:0] sinVec_address0;
reg    sinVec_ce0;
wire   [31:0] sinVec_q0;
reg   [31:0] reg_339;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_98;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_bdd_105;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_bdd_113;
reg   [31:0] reg_348;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_bdd_122;
wire   [31:0] grp_fu_303_p2;
reg   [31:0] reg_357;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_bdd_132;
reg    ap_sig_cseq_ST_st38_fsm_37;
reg    ap_sig_bdd_140;
wire   [31:0] grp_fu_307_p2;
reg   [31:0] reg_365;
wire   [8:0] k_3_fu_382_p2;
reg   [8:0] k_3_reg_704;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_153;
wire   [0:0] tmp_fu_388_p2;
reg   [0:0] tmp_reg_709;
wire   [0:0] exitcond3_fu_376_p2;
reg   [8:0] c_addr_reg_713;
reg   [8:0] c_addr_1_reg_718;
reg   [8:0] c_addr_2_reg_723;
reg   [8:0] c_addr_3_reg_728;
wire   [3:0] q_1_fu_444_p2;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_180;
wire   [31:0] j_2_fu_504_p3;
wire   [0:0] exitcond2_fu_438_p2;
wire   [31:0] n_1_fu_512_p3;
wire   [31:0] j_4_fu_520_p2;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_bdd_200;
reg   [31:0] wr_reg_769;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_bdd_210;
wire    grp_fu_532_ap_done;
reg   [31:0] wi_reg_775;
wire   [31:0] grp_fu_532_p2;
reg   [31:0] nb_reg_781;
reg   [30:0] tmp_3_reg_786;
wire   [31:0] n_fu_560_p2;
reg   [31:0] n_reg_791;
wire   [10:0] tmp_7_fu_566_p1;
reg   [10:0] tmp_7_reg_797;
wire   [7:0] j_5_fu_580_p2;
reg   [7:0] j_5_reg_805;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_bdd_232;
wire   [7:0] k_4_fu_601_p2;
reg   [7:0] k_4_reg_816;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_bdd_241;
reg   [8:0] c_addr_4_reg_825;
wire   [0:0] exitcond_fu_595_p2;
wire   [0:0] tmp_31_fu_607_p2;
reg   [8:0] c_addr_5_reg_830;
reg   [8:0] c_addr_6_reg_835;
reg   [8:0] c_addr_7_reg_840;
wire   [31:0] grp_fu_311_p2;
reg   [31:0] tmp_42_reg_845;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_bdd_265;
wire   [31:0] grp_fu_316_p2;
reg   [31:0] tmp_43_reg_850;
wire   [31:0] grp_fu_321_p2;
reg   [31:0] tmp_44_reg_855;
wire   [31:0] grp_fu_326_p2;
reg   [31:0] tmp_45_reg_860;
reg   [31:0] tmp_34_reg_865;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_bdd_279;
reg   [31:0] tmp_35_reg_870;
reg   [31:0] tmp_36_reg_875;
reg   [31:0] tmp_37_reg_880;
reg   [31:0] wrk_reg_885;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_bdd_290;
reg   [31:0] wik_1_reg_890;
reg   [31:0] tmp_40_reg_895;
wire  signed [38:0] cp_addr_rec_fu_695_p2;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_bdd_301;
reg   [8:0] k_reg_159;
reg   [31:0] j_reg_170;
reg   [3:0] q_reg_182;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_319;
reg   [31:0] j_1_reg_193;
reg   [31:0] n3_reg_203;
reg   [31:0] n_2_reg_214;
wire   [0:0] exitcond1_fu_574_p2;
reg   [7:0] j_3_reg_226;
reg   [38:0] cp_rec_reg_237;
reg   [31:0] d_reg_249;
wire   [0:0] tmp_30_fu_586_p2;
reg    ap_sig_cseq_ST_st41_fsm_40;
reg    ap_sig_bdd_353;
reg   [31:0] wik_reg_264;
reg   [7:0] k_1_reg_279;
reg   [31:0] cp_s_reg_292;
wire   [63:0] tmp_24_fu_400_p1;
wire   [63:0] tmp_26_fu_411_p1;
wire  signed [63:0] tmp_27_fu_422_p1;
wire  signed [63:0] tmp_29_fu_433_p1;
wire  signed [63:0] tmp_23_fu_544_p1;
wire   [63:0] cp_sum_cast_fu_632_p1;
wire   [63:0] cp_sum9_cast_fu_653_p1;
wire   [63:0] cp_sum1_cast_fu_669_p1;
wire   [63:0] cp_sum2_cast_fu_686_p1;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_382;
reg    ap_sig_cseq_ST_st40_fsm_39;
reg    ap_sig_bdd_396;
reg    ap_sig_cseq_ST_st39_fsm_38;
reg    ap_sig_bdd_410;
reg   [31:0] grp_fu_303_p0;
reg   [31:0] grp_fu_303_p1;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_bdd_426;
reg    ap_sig_cseq_ST_st34_fsm_33;
reg    ap_sig_bdd_433;
reg   [31:0] grp_fu_307_p0;
reg   [31:0] grp_fu_307_p1;
reg   [31:0] grp_fu_311_p0;
reg   [31:0] grp_fu_311_p1;
reg   [31:0] grp_fu_316_p0;
reg   [31:0] grp_fu_316_p1;
reg   [31:0] grp_fu_321_p0;
reg   [31:0] grp_fu_321_p1;
reg   [31:0] grp_fu_326_p0;
reg   [31:0] grp_fu_326_p1;
wire   [31:0] k_cast3_fu_372_p1;
wire   [8:0] i0_fu_394_p2;
wire   [8:0] tmp_25_fu_405_p2;
wire   [31:0] i1_fu_416_p2;
wire   [31:0] tmp_28_fu_427_p2;
wire   [0:0] slt_fu_450_p2;
wire   [30:0] tmp_10_fu_462_p4;
wire   [0:0] rev5_fu_456_p2;
wire   [0:0] icmp_fu_472_p2;
wire   [30:0] tmp_5_fu_490_p4;
wire   [0:0] or_cond_fu_478_p2;
wire   [31:0] j_6_fu_484_p2;
wire   [31:0] n_3_fu_500_p1;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_519;
wire   [10:0] grp_fu_532_p0;
wire   [31:0] grp_fu_532_p1;
wire  signed [31:0] tmp_22_fu_538_p2;
wire   [31:0] j_3_cast2_fu_570_p1;
wire   [30:0] k_1_cast1_fu_591_p1;
wire   [7:0] i0_1_fu_612_p2;
wire   [10:0] tmp_12_fu_622_p1;
wire   [10:0] tmp_32_fu_618_p1;
wire   [10:0] cp_sum_fu_626_p2;
wire   [7:0] tmp_33_fu_637_p2;
wire   [10:0] tmp_37_cast_fu_643_p1;
wire   [10:0] cp_sum9_fu_647_p2;
wire   [10:0] tmp_38_cast_fu_658_p2;
wire   [10:0] cp_sum1_fu_663_p2;
wire   [10:0] tmp_40_cast_fu_674_p2;
wire   [10:0] cp_sum2_fu_680_p2;
wire  signed [38:0] cp_cast_fu_691_p1;
reg   [1:0] grp_fu_303_opcode;
wire    grp_fu_303_ce;
reg   [1:0] grp_fu_307_opcode;
wire    grp_fu_307_ce;
wire    grp_fu_311_ce;
wire    grp_fu_316_ce;
wire    grp_fu_321_ce;
wire    grp_fu_326_ce;
wire   [0:0] tmp_s_fu_526_p2;
reg    grp_fu_532_ap_start;
wire    grp_fu_532_ce;
reg   [41:0] ap_NS_fsm;


voicerec_FFT_cosVec #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
cosVec_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( cosVec_address0 ),
    .ce0( cosVec_ce0 ),
    .q0( cosVec_q0 )
);

voicerec_FFT_sinVec #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
sinVec_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( sinVec_address0 ),
    .ce0( sinVec_ce0 ),
    .q0( sinVec_q0 )
);

voicerec_faddfsub_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_faddfsub_32ns_32ns_32_5_full_dsp_U6(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_303_p0 ),
    .din1( grp_fu_303_p1 ),
    .opcode( grp_fu_303_opcode ),
    .ce( grp_fu_303_ce ),
    .dout( grp_fu_303_p2 )
);

voicerec_faddfsub_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_faddfsub_32ns_32ns_32_5_full_dsp_U7(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_307_p0 ),
    .din1( grp_fu_307_p1 ),
    .opcode( grp_fu_307_opcode ),
    .ce( grp_fu_307_ce ),
    .dout( grp_fu_307_p2 )
);

voicerec_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_fmul_32ns_32ns_32_4_max_dsp_U8(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_311_p0 ),
    .din1( grp_fu_311_p1 ),
    .ce( grp_fu_311_ce ),
    .dout( grp_fu_311_p2 )
);

voicerec_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_fmul_32ns_32ns_32_4_max_dsp_U9(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_316_p0 ),
    .din1( grp_fu_316_p1 ),
    .ce( grp_fu_316_ce ),
    .dout( grp_fu_316_p2 )
);

voicerec_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_fmul_32ns_32ns_32_4_max_dsp_U10(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_321_p0 ),
    .din1( grp_fu_321_p1 ),
    .ce( grp_fu_321_ce ),
    .dout( grp_fu_321_p2 )
);

voicerec_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_fmul_32ns_32ns_32_4_max_dsp_U11(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_326_p0 ),
    .din1( grp_fu_326_p1 ),
    .ce( grp_fu_326_ce ),
    .dout( grp_fu_326_p2 )
);

voicerec_sdiv_11ns_32ns_32_15_seq #(
    .ID( 1 ),
    .NUM_STAGE( 15 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_sdiv_11ns_32ns_32_15_seq_U12(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .start( grp_fu_532_ap_start ),
    .done( grp_fu_532_ap_done ),
    .din0( grp_fu_532_p0 ),
    .din1( grp_fu_532_p1 ),
    .ce( grp_fu_532_ce ),
    .dout( grp_fu_532_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        cp_rec_reg_237 <= cp_addr_rec_fu_695_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) & ~(ap_const_logic_0 == grp_fu_532_ap_done))) begin
        cp_rec_reg_237 <= ap_const_lv39_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) & ~(ap_const_lv1_0 == exitcond_fu_595_p2))) begin
                cp_s_reg_292[31 : 2] <= n_reg_791[31 : 2];
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & (ap_const_lv1_0 == exitcond1_fu_574_p2) & (ap_const_lv1_0 == tmp_30_fu_586_p2))) begin
        cp_s_reg_292[2] <= 1'b0;
        cp_s_reg_292[3] <= 1'b0;
        cp_s_reg_292[4] <= 1'b0;
        cp_s_reg_292[5] <= 1'b0;
        cp_s_reg_292[6] <= 1'b0;
        cp_s_reg_292[7] <= 1'b0;
        cp_s_reg_292[8] <= 1'b0;
        cp_s_reg_292[9] <= 1'b0;
        cp_s_reg_292[10] <= 1'b0;
        cp_s_reg_292[11] <= 1'b0;
        cp_s_reg_292[12] <= 1'b0;
        cp_s_reg_292[13] <= 1'b0;
        cp_s_reg_292[14] <= 1'b0;
        cp_s_reg_292[15] <= 1'b0;
        cp_s_reg_292[16] <= 1'b0;
        cp_s_reg_292[17] <= 1'b0;
        cp_s_reg_292[18] <= 1'b0;
        cp_s_reg_292[19] <= 1'b0;
        cp_s_reg_292[20] <= 1'b0;
        cp_s_reg_292[21] <= 1'b0;
        cp_s_reg_292[22] <= 1'b0;
        cp_s_reg_292[23] <= 1'b0;
        cp_s_reg_292[24] <= 1'b0;
        cp_s_reg_292[25] <= 1'b0;
        cp_s_reg_292[26] <= 1'b0;
        cp_s_reg_292[27] <= 1'b0;
        cp_s_reg_292[28] <= 1'b0;
        cp_s_reg_292[29] <= 1'b0;
        cp_s_reg_292[30] <= 1'b0;
        cp_s_reg_292[31] <= 1'b0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) & (ap_const_lv1_0 == exitcond_fu_595_p2) & (ap_const_lv1_0 == tmp_31_fu_607_p2))) begin
        d_reg_249 <= d_reg_249;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        d_reg_249 <= wrk_reg_885;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & (ap_const_lv1_0 == exitcond1_fu_574_p2) & ~(ap_const_lv1_0 == tmp_30_fu_586_p2))) begin
        d_reg_249 <= ap_const_lv32_3F800000;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == exitcond2_fu_438_p2))) begin
        j_1_reg_193 <= j_2_fu_504_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        j_1_reg_193 <= j_reg_170;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        j_3_reg_226 <= j_5_reg_805;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) & ~(ap_const_logic_0 == grp_fu_532_ap_done))) begin
        j_3_reg_226 <= ap_const_lv8_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == exitcond2_fu_438_p2))) begin
        j_reg_170 <= j_4_fu_520_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        j_reg_170 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) & (ap_const_lv1_0 == exitcond_fu_595_p2) & (ap_const_lv1_0 == tmp_31_fu_607_p2))) begin
        k_1_reg_279 <= k_4_fu_601_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        k_1_reg_279 <= k_4_reg_816;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & (ap_const_lv1_0 == exitcond1_fu_574_p2) & ~(ap_const_lv1_0 == tmp_30_fu_586_p2))) begin
        k_1_reg_279 <= ap_const_lv8_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == exitcond2_fu_438_p2))) begin
        k_reg_159 <= k_3_reg_704;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        k_reg_159 <= ap_const_lv9_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == exitcond2_fu_438_p2))) begin
        n3_reg_203 <= n_1_fu_512_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        n3_reg_203 <= ap_const_lv32_80;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & ~(ap_const_lv1_0 == exitcond1_fu_574_p2))) begin
                n_2_reg_214[31 : 1] <= n_reg_791[31 : 1];
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond3_fu_376_p2 == ap_const_lv1_0))) begin
        n_2_reg_214[1] <= 1'b1;
        n_2_reg_214[2] <= 1'b0;
        n_2_reg_214[3] <= 1'b0;
        n_2_reg_214[4] <= 1'b0;
        n_2_reg_214[5] <= 1'b0;
        n_2_reg_214[6] <= 1'b0;
        n_2_reg_214[7] <= 1'b0;
        n_2_reg_214[8] <= 1'b0;
        n_2_reg_214[9] <= 1'b0;
        n_2_reg_214[10] <= 1'b0;
        n_2_reg_214[11] <= 1'b0;
        n_2_reg_214[12] <= 1'b0;
        n_2_reg_214[13] <= 1'b0;
        n_2_reg_214[14] <= 1'b0;
        n_2_reg_214[15] <= 1'b0;
        n_2_reg_214[16] <= 1'b0;
        n_2_reg_214[17] <= 1'b0;
        n_2_reg_214[18] <= 1'b0;
        n_2_reg_214[19] <= 1'b0;
        n_2_reg_214[20] <= 1'b0;
        n_2_reg_214[21] <= 1'b0;
        n_2_reg_214[22] <= 1'b0;
        n_2_reg_214[23] <= 1'b0;
        n_2_reg_214[24] <= 1'b0;
        n_2_reg_214[25] <= 1'b0;
        n_2_reg_214[26] <= 1'b0;
        n_2_reg_214[27] <= 1'b0;
        n_2_reg_214[28] <= 1'b0;
        n_2_reg_214[29] <= 1'b0;
        n_2_reg_214[30] <= 1'b0;
        n_2_reg_214[31] <= 1'b0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == exitcond2_fu_438_p2))) begin
        q_reg_182 <= q_1_fu_444_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        q_reg_182 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) & (ap_const_lv1_0 == exitcond_fu_595_p2) & (ap_const_lv1_0 == tmp_31_fu_607_p2))) begin
        wik_reg_264 <= wik_reg_264;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        wik_reg_264 <= wik_1_reg_890;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & (ap_const_lv1_0 == exitcond1_fu_574_p2) & ~(ap_const_lv1_0 == tmp_30_fu_586_p2))) begin
        wik_reg_264 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond3_fu_376_p2 == ap_const_lv1_0) & ~(tmp_fu_388_p2 == ap_const_lv1_0))) begin
        c_addr_1_reg_718[8 : 1] <= tmp_26_fu_411_p1[8 : 1];
        c_addr_reg_713[8 : 1] <= tmp_24_fu_400_p1[8 : 1];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        c_addr_2_reg_723[8 : 1] <= tmp_27_fu_422_p1[8 : 1];
        c_addr_3_reg_728[8 : 1] <= tmp_29_fu_433_p1[8 : 1];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) & (ap_const_lv1_0 == exitcond_fu_595_p2) & ~(ap_const_lv1_0 == tmp_31_fu_607_p2))) begin
        c_addr_4_reg_825 <= cp_sum_cast_fu_632_p1;
        c_addr_5_reg_830 <= cp_sum9_cast_fu_653_p1;
        c_addr_6_reg_835 <= cp_sum1_cast_fu_669_p1;
        c_addr_7_reg_840 <= cp_sum2_cast_fu_686_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        j_5_reg_805 <= j_5_fu_580_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        k_3_reg_704 <= k_3_fu_382_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        k_4_reg_816 <= k_4_fu_601_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) & ~(ap_const_logic_0 == grp_fu_532_ap_done))) begin
        n_reg_791[31 : 2] <= n_fu_560_p2[31 : 2];
        nb_reg_781 <= grp_fu_532_p2;
        tmp_3_reg_786 <= {{n_2_reg_214[ap_const_lv32_1F : ap_const_lv32_1]}};
        tmp_7_reg_797[10 : 1] <= tmp_7_fu_566_p1[10 : 1];
        wi_reg_775 <= sinVec_q0;
        wr_reg_769 <= cosVec_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31))) begin
        reg_339 <= c_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32))) begin
        reg_348 <= c_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) | (ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36) | (ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37))) begin
        reg_357 <= grp_fu_303_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) | (ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37))) begin
        reg_365 <= grp_fu_307_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        tmp_34_reg_865 <= grp_fu_311_p2;
        tmp_35_reg_870 <= grp_fu_316_p2;
        tmp_36_reg_875 <= grp_fu_321_p2;
        tmp_37_reg_880 <= grp_fu_326_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        tmp_40_reg_895 <= grp_fu_307_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        tmp_42_reg_845 <= grp_fu_311_p2;
        tmp_43_reg_850 <= grp_fu_316_p2;
        tmp_44_reg_855 <= grp_fu_321_p2;
        tmp_45_reg_860 <= grp_fu_326_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond3_fu_376_p2 == ap_const_lv1_0))) begin
        tmp_reg_709 <= tmp_fu_388_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        wik_1_reg_890 <= grp_fu_307_p2;
        wrk_reg_885 <= grp_fu_303_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st7_fsm_6 or tmp_s_fu_526_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & (ap_const_lv1_0 == tmp_s_fu_526_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or tmp_s_fu_526_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & (ap_const_lv1_0 == tmp_s_fu_526_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_60)
begin
    if (ap_sig_bdd_60) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st20_fsm_19 assign process. ///
always @ (ap_sig_bdd_200)
begin
    if (ap_sig_bdd_200) begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st21_fsm_20 assign process. ///
always @ (ap_sig_bdd_210)
begin
    if (ap_sig_bdd_210) begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st22_fsm_21 assign process. ///
always @ (ap_sig_bdd_232)
begin
    if (ap_sig_bdd_232) begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st23_fsm_22 assign process. ///
always @ (ap_sig_bdd_241)
begin
    if (ap_sig_bdd_241) begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st24_fsm_23 assign process. ///
always @ (ap_sig_bdd_105)
begin
    if (ap_sig_bdd_105) begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st26_fsm_25 assign process. ///
always @ (ap_sig_bdd_265)
begin
    if (ap_sig_bdd_265) begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st27_fsm_26 assign process. ///
always @ (ap_sig_bdd_279)
begin
    if (ap_sig_bdd_279) begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st28_fsm_27 assign process. ///
always @ (ap_sig_bdd_426)
begin
    if (ap_sig_bdd_426) begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_153)
begin
    if (ap_sig_bdd_153) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st31_fsm_30 assign process. ///
always @ (ap_sig_bdd_290)
begin
    if (ap_sig_bdd_290) begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st32_fsm_31 assign process. ///
always @ (ap_sig_bdd_113)
begin
    if (ap_sig_bdd_113) begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st33_fsm_32 assign process. ///
always @ (ap_sig_bdd_122)
begin
    if (ap_sig_bdd_122) begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st34_fsm_33 assign process. ///
always @ (ap_sig_bdd_433)
begin
    if (ap_sig_bdd_433) begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st37_fsm_36 assign process. ///
always @ (ap_sig_bdd_132)
begin
    if (ap_sig_bdd_132) begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st38_fsm_37 assign process. ///
always @ (ap_sig_bdd_140)
begin
    if (ap_sig_bdd_140) begin
        ap_sig_cseq_ST_st38_fsm_37 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st38_fsm_37 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st39_fsm_38 assign process. ///
always @ (ap_sig_bdd_410)
begin
    if (ap_sig_bdd_410) begin
        ap_sig_cseq_ST_st39_fsm_38 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st39_fsm_38 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_98)
begin
    if (ap_sig_bdd_98) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st40_fsm_39 assign process. ///
always @ (ap_sig_bdd_396)
begin
    if (ap_sig_bdd_396) begin
        ap_sig_cseq_ST_st40_fsm_39 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st40_fsm_39 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st41_fsm_40 assign process. ///
always @ (ap_sig_bdd_353)
begin
    if (ap_sig_bdd_353) begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st42_fsm_41 assign process. ///
always @ (ap_sig_bdd_301)
begin
    if (ap_sig_bdd_301) begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_382)
begin
    if (ap_sig_bdd_382) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_319)
begin
    if (ap_sig_bdd_319) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_180)
begin
    if (ap_sig_bdd_180) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_519)
begin
    if (ap_sig_bdd_519) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// c_address0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st38_fsm_37 or ap_sig_cseq_ST_st2_fsm_1 or c_addr_reg_713 or c_addr_2_reg_723 or ap_sig_cseq_ST_st23_fsm_22 or c_addr_4_reg_825 or c_addr_6_reg_835 or ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st5_fsm_4 or tmp_24_fu_400_p1 or tmp_27_fu_422_p1 or cp_sum1_cast_fu_669_p1 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st40_fsm_39)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_39)) begin
        c_address0 = c_addr_6_reg_835;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        c_address0 = c_addr_2_reg_723;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c_address0 = c_addr_reg_713;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37) | (ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30))) begin
        c_address0 = c_addr_4_reg_825;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        c_address0 = cp_sum1_cast_fu_669_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        c_address0 = tmp_27_fu_422_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        c_address0 = tmp_24_fu_400_p1;
    end else begin
        c_address0 = 'bx;
    end
end

/// c_address1 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st32_fsm_31 or ap_sig_cseq_ST_st2_fsm_1 or c_addr_1_reg_718 or c_addr_3_reg_728 or ap_sig_cseq_ST_st23_fsm_22 or c_addr_5_reg_830 or c_addr_7_reg_840 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st41_fsm_40 or tmp_26_fu_411_p1 or tmp_29_fu_433_p1 or cp_sum2_cast_fu_686_p1 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st39_fsm_38)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        c_address1 = c_addr_7_reg_840;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        c_address1 = c_addr_3_reg_728;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c_address1 = c_addr_1_reg_718;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) | (ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_38))) begin
        c_address1 = c_addr_5_reg_830;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        c_address1 = cp_sum2_cast_fu_686_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        c_address1 = tmp_29_fu_433_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        c_address1 = tmp_26_fu_411_p1;
    end else begin
        c_address1 = 'bx;
    end
end

/// c_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st38_fsm_37 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st23_fsm_22 or ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st40_fsm_39)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37) | (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) | (ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_39))) begin
        c_ce0 = ap_const_logic_1;
    end else begin
        c_ce0 = ap_const_logic_0;
    end
end

/// c_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st32_fsm_31 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st23_fsm_22 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st41_fsm_40 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st39_fsm_38)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) | (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_38))) begin
        c_ce1 = ap_const_logic_1;
    end else begin
        c_ce1 = ap_const_logic_0;
    end
end

/// c_d0 assign process. ///
always @ (c_q0 or reg_339 or reg_357 or ap_sig_cseq_ST_st38_fsm_37 or tmp_40_reg_895 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st40_fsm_39)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_39)) begin
        c_d0 = tmp_40_reg_895;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37)) begin
        c_d0 = reg_357;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        c_d0 = reg_339;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c_d0 = c_q0;
    end else begin
        c_d0 = 'bx;
    end
end

/// c_d1 assign process. ///
always @ (c_q1 or reg_348 or reg_357 or reg_365 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st41_fsm_40 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st39_fsm_38)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        c_d1 = reg_365;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_38)) begin
        c_d1 = reg_357;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        c_d1 = reg_348;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c_d1 = c_q1;
    end else begin
        c_d1 = 'bx;
    end
end

/// c_we0 assign process. ///
always @ (ap_sig_cseq_ST_st38_fsm_37 or tmp_reg_709 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st40_fsm_39)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~(tmp_reg_709 == ap_const_lv1_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_39))) begin
        c_we0 = ap_const_logic_1;
    end else begin
        c_we0 = ap_const_logic_0;
    end
end

/// c_we1 assign process. ///
always @ (tmp_reg_709 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st41_fsm_40 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st39_fsm_38)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~(tmp_reg_709 == ap_const_lv1_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_38))) begin
        c_we1 = ap_const_logic_1;
    end else begin
        c_we1 = ap_const_logic_0;
    end
end

/// cosVec_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st20_fsm_19)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        cosVec_ce0 = ap_const_logic_1;
    end else begin
        cosVec_ce0 = ap_const_logic_0;
    end
end

/// grp_fu_303_opcode assign process. ///
always @ (ap_sig_cseq_ST_st33_fsm_32 or ap_sig_cseq_ST_st27_fsm_26 or ap_sig_cseq_ST_st28_fsm_27 or ap_sig_cseq_ST_st34_fsm_33)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26) | (ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27))) begin
        grp_fu_303_opcode = ap_const_lv2_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) | (ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33))) begin
        grp_fu_303_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_303_opcode = 'bx;
    end
end

/// grp_fu_303_p0 assign process. ///
always @ (reg_339 or reg_348 or ap_sig_cseq_ST_st33_fsm_32 or tmp_42_reg_845 or tmp_34_reg_865 or ap_sig_cseq_ST_st27_fsm_26 or ap_sig_cseq_ST_st28_fsm_27 or ap_sig_cseq_ST_st34_fsm_33)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        grp_fu_303_p0 = reg_348;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_fu_303_p0 = reg_339;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        grp_fu_303_p0 = tmp_34_reg_865;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        grp_fu_303_p0 = tmp_42_reg_845;
    end else begin
        grp_fu_303_p0 = 'bx;
    end
end

/// grp_fu_303_p1 assign process. ///
always @ (ap_sig_cseq_ST_st33_fsm_32 or reg_357 or reg_365 or tmp_43_reg_850 or ap_sig_cseq_ST_st27_fsm_26 or tmp_35_reg_870 or ap_sig_cseq_ST_st28_fsm_27 or ap_sig_cseq_ST_st34_fsm_33)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        grp_fu_303_p1 = reg_365;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_fu_303_p1 = reg_357;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        grp_fu_303_p1 = tmp_35_reg_870;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        grp_fu_303_p1 = tmp_43_reg_850;
    end else begin
        grp_fu_303_p1 = 'bx;
    end
end

/// grp_fu_307_opcode assign process. ///
always @ (ap_sig_cseq_ST_st33_fsm_32 or ap_sig_cseq_ST_st27_fsm_26 or ap_sig_cseq_ST_st28_fsm_27 or ap_sig_cseq_ST_st34_fsm_33)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) | (ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33))) begin
        grp_fu_307_opcode = ap_const_lv2_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26) | (ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27))) begin
        grp_fu_307_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_307_opcode = 'bx;
    end
end

/// grp_fu_307_p0 assign process. ///
always @ (reg_339 or reg_348 or ap_sig_cseq_ST_st33_fsm_32 or tmp_44_reg_855 or ap_sig_cseq_ST_st27_fsm_26 or tmp_36_reg_875 or ap_sig_cseq_ST_st28_fsm_27 or ap_sig_cseq_ST_st34_fsm_33)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        grp_fu_307_p0 = reg_348;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_fu_307_p0 = reg_339;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        grp_fu_307_p0 = tmp_36_reg_875;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        grp_fu_307_p0 = tmp_44_reg_855;
    end else begin
        grp_fu_307_p0 = 'bx;
    end
end

/// grp_fu_307_p1 assign process. ///
always @ (ap_sig_cseq_ST_st33_fsm_32 or reg_357 or reg_365 or tmp_45_reg_860 or ap_sig_cseq_ST_st27_fsm_26 or tmp_37_reg_880 or ap_sig_cseq_ST_st28_fsm_27 or ap_sig_cseq_ST_st34_fsm_33)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        grp_fu_307_p1 = reg_365;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_fu_307_p1 = reg_357;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        grp_fu_307_p1 = tmp_37_reg_880;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        grp_fu_307_p1 = tmp_45_reg_860;
    end else begin
        grp_fu_307_p1 = 'bx;
    end
end

/// grp_fu_311_p0 assign process. ///
always @ (ap_sig_cseq_ST_st24_fsm_23 or wr_reg_769 or ap_sig_cseq_ST_st23_fsm_22 or d_reg_249)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_311_p0 = d_reg_249;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_311_p0 = wr_reg_769;
    end else begin
        grp_fu_311_p0 = 'bx;
    end
end

/// grp_fu_311_p1 assign process. ///
always @ (c_q0 or ap_sig_cseq_ST_st24_fsm_23 or ap_sig_cseq_ST_st23_fsm_22 or d_reg_249)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_311_p1 = c_q0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_311_p1 = d_reg_249;
    end else begin
        grp_fu_311_p1 = 'bx;
    end
end

/// grp_fu_316_p0 assign process. ///
always @ (ap_sig_cseq_ST_st24_fsm_23 or wi_reg_775 or ap_sig_cseq_ST_st23_fsm_22 or wik_reg_264)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_316_p0 = wik_reg_264;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_316_p0 = wi_reg_775;
    end else begin
        grp_fu_316_p0 = 'bx;
    end
end

/// grp_fu_316_p1 assign process. ///
always @ (c_q1 or ap_sig_cseq_ST_st24_fsm_23 or ap_sig_cseq_ST_st23_fsm_22 or wik_reg_264)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_316_p1 = c_q1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_316_p1 = wik_reg_264;
    end else begin
        grp_fu_316_p1 = 'bx;
    end
end

/// grp_fu_321_p0 assign process. ///
always @ (ap_sig_cseq_ST_st24_fsm_23 or wr_reg_769 or ap_sig_cseq_ST_st23_fsm_22 or d_reg_249)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_321_p0 = d_reg_249;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_321_p0 = wr_reg_769;
    end else begin
        grp_fu_321_p0 = 'bx;
    end
end

/// grp_fu_321_p1 assign process. ///
always @ (c_q1 or ap_sig_cseq_ST_st24_fsm_23 or ap_sig_cseq_ST_st23_fsm_22 or wik_reg_264)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_321_p1 = c_q1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_321_p1 = wik_reg_264;
    end else begin
        grp_fu_321_p1 = 'bx;
    end
end

/// grp_fu_326_p0 assign process. ///
always @ (ap_sig_cseq_ST_st24_fsm_23 or wi_reg_775 or ap_sig_cseq_ST_st23_fsm_22 or wik_reg_264)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_326_p0 = wik_reg_264;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_326_p0 = wi_reg_775;
    end else begin
        grp_fu_326_p0 = 'bx;
    end
end

/// grp_fu_326_p1 assign process. ///
always @ (c_q0 or ap_sig_cseq_ST_st24_fsm_23 or ap_sig_cseq_ST_st23_fsm_22 or d_reg_249)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_326_p1 = c_q0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_326_p1 = d_reg_249;
    end else begin
        grp_fu_326_p1 = 'bx;
    end
end

/// grp_fu_532_ap_start assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or tmp_s_fu_526_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & ~(ap_const_lv1_0 == tmp_s_fu_526_p2))) begin
        grp_fu_532_ap_start = ap_const_logic_1;
    end else begin
        grp_fu_532_ap_start = ap_const_logic_0;
    end
end

/// sinVec_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st20_fsm_19)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        sinVec_ce0 = ap_const_logic_1;
    end else begin
        sinVec_ce0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or tmp_fu_388_p2 or exitcond3_fu_376_p2 or exitcond2_fu_438_p2 or grp_fu_532_ap_done or exitcond_fu_595_p2 or tmp_31_fu_607_p2 or exitcond1_fu_574_p2 or tmp_30_fu_586_p2 or tmp_s_fu_526_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (((exitcond3_fu_376_p2 == ap_const_lv1_0) & (tmp_fu_388_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else if (((exitcond3_fu_376_p2 == ap_const_lv1_0) & ~(tmp_fu_388_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            if (~(ap_const_lv1_0 == exitcond2_fu_438_p2)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st7_fsm_6 : 
        begin
            if ((ap_const_lv1_0 == tmp_s_fu_526_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            if (~(ap_const_logic_0 == grp_fu_532_ap_done)) begin
                ap_NS_fsm = ap_ST_st22_fsm_21;
            end else begin
                ap_NS_fsm = ap_ST_st21_fsm_20;
            end
        end
        ap_ST_st22_fsm_21 : 
        begin
            if (((ap_const_lv1_0 == exitcond1_fu_574_p2) & (ap_const_lv1_0 == tmp_30_fu_586_p2))) begin
                ap_NS_fsm = ap_ST_st42_fsm_41;
            end else if (((ap_const_lv1_0 == exitcond1_fu_574_p2) & ~(ap_const_lv1_0 == tmp_30_fu_586_p2))) begin
                ap_NS_fsm = ap_ST_st23_fsm_22;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st23_fsm_22 : 
        begin
            if (((ap_const_lv1_0 == exitcond_fu_595_p2) & ~(ap_const_lv1_0 == tmp_31_fu_607_p2))) begin
                ap_NS_fsm = ap_ST_st24_fsm_23;
            end else if (((ap_const_lv1_0 == exitcond_fu_595_p2) & (ap_const_lv1_0 == tmp_31_fu_607_p2))) begin
                ap_NS_fsm = ap_ST_st23_fsm_22;
            end else begin
                ap_NS_fsm = ap_ST_st42_fsm_41;
            end
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st42_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_105 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_105 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end

/// ap_sig_bdd_113 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_113 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1F]);
end

/// ap_sig_bdd_122 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_122 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_20]);
end

/// ap_sig_bdd_132 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_132 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_24]);
end

/// ap_sig_bdd_140 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_140 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_25]);
end

/// ap_sig_bdd_153 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_153 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_180 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_180 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_200 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_200 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end

/// ap_sig_bdd_210 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_210 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end

/// ap_sig_bdd_232 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_232 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_15]);
end

/// ap_sig_bdd_241 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_241 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_16]);
end

/// ap_sig_bdd_265 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_265 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_19]);
end

/// ap_sig_bdd_279 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_279 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end

/// ap_sig_bdd_290 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_290 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1E]);
end

/// ap_sig_bdd_301 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_301 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_29]);
end

/// ap_sig_bdd_319 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_319 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_353 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_353 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_28]);
end

/// ap_sig_bdd_382 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_382 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_396 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_396 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_27]);
end

/// ap_sig_bdd_410 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_410 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_26]);
end

/// ap_sig_bdd_426 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_426 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1B]);
end

/// ap_sig_bdd_433 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_433 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_21]);
end

/// ap_sig_bdd_519 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_519 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_60 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_60 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_98 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_98 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end
assign cosVec_address0 = tmp_23_fu_544_p1;
assign cp_addr_rec_fu_695_p2 = ($signed(cp_cast_fu_691_p1) + $signed(cp_rec_reg_237));
assign cp_cast_fu_691_p1 = $signed(cp_s_reg_292);
assign cp_sum1_cast_fu_669_p1 = cp_sum1_fu_663_p2;
assign cp_sum1_fu_663_p2 = (tmp_12_fu_622_p1 + tmp_38_cast_fu_658_p2);
assign cp_sum2_cast_fu_686_p1 = cp_sum2_fu_680_p2;
assign cp_sum2_fu_680_p2 = (tmp_12_fu_622_p1 + tmp_40_cast_fu_674_p2);
assign cp_sum9_cast_fu_653_p1 = cp_sum9_fu_647_p2;
assign cp_sum9_fu_647_p2 = (tmp_12_fu_622_p1 + tmp_37_cast_fu_643_p1);
assign cp_sum_cast_fu_632_p1 = cp_sum_fu_626_p2;
assign cp_sum_fu_626_p2 = (tmp_12_fu_622_p1 + tmp_32_fu_618_p1);
assign exitcond1_fu_574_p2 = (j_3_reg_226 == ap_const_lv8_80? 1'b1: 1'b0);
assign exitcond2_fu_438_p2 = (q_reg_182 == ap_const_lv4_8? 1'b1: 1'b0);
assign exitcond3_fu_376_p2 = (k_reg_159 == ap_const_lv9_100? 1'b1: 1'b0);
assign exitcond_fu_595_p2 = (k_1_reg_279 == ap_const_lv8_80? 1'b1: 1'b0);
assign grp_fu_303_ce = ap_const_logic_1;
assign grp_fu_307_ce = ap_const_logic_1;
assign grp_fu_311_ce = ap_const_logic_1;
assign grp_fu_316_ce = ap_const_logic_1;
assign grp_fu_321_ce = ap_const_logic_1;
assign grp_fu_326_ce = ap_const_logic_1;
assign grp_fu_532_ce = ap_const_logic_1;
assign grp_fu_532_p0 = ap_const_lv32_100;
assign grp_fu_532_p1 = n_2_reg_214;
assign i0_1_fu_612_p2 = k_1_reg_279 << ap_const_lv8_1;
assign i0_fu_394_p2 = k_reg_159 << ap_const_lv9_1;
assign i1_fu_416_p2 = j_reg_170 << ap_const_lv32_1;
assign icmp_fu_472_p2 = ($signed(tmp_10_fu_462_p4) > $signed(31'b0000000000000000000000000000000)? 1'b1: 1'b0);
assign j_2_fu_504_p3 = ((or_cond_fu_478_p2[0:0]===1'b1)? j_6_fu_484_p2: j_1_reg_193);
assign j_3_cast2_fu_570_p1 = j_3_reg_226;
assign j_4_fu_520_p2 = (j_1_reg_193 + n3_reg_203);
assign j_5_fu_580_p2 = (j_3_reg_226 + ap_const_lv8_1);
assign j_6_fu_484_p2 = (j_1_reg_193 - n3_reg_203);
assign k_1_cast1_fu_591_p1 = k_1_reg_279;
assign k_3_fu_382_p2 = (k_reg_159 + ap_const_lv9_1);
assign k_4_fu_601_p2 = (k_1_reg_279 + ap_const_lv8_1);
assign k_cast3_fu_372_p1 = k_reg_159;
assign n_1_fu_512_p3 = ((or_cond_fu_478_p2[0:0]===1'b1)? n_3_fu_500_p1: n3_reg_203);
assign n_3_fu_500_p1 = tmp_5_fu_490_p4;
assign n_fu_560_p2 = n_2_reg_214 << ap_const_lv32_1;
assign or_cond_fu_478_p2 = (rev5_fu_456_p2 & icmp_fu_472_p2);
assign q_1_fu_444_p2 = (q_reg_182 + ap_const_lv4_1);
assign rev5_fu_456_p2 = (slt_fu_450_p2 ^ ap_const_lv1_1);
assign sinVec_address0 = tmp_23_fu_544_p1;
assign slt_fu_450_p2 = ($signed(j_1_reg_193) < $signed(n3_reg_203)? 1'b1: 1'b0);
assign tmp_10_fu_462_p4 = {{n3_reg_203[ap_const_lv32_1F : ap_const_lv32_1]}};
assign tmp_12_fu_622_p1 = cp_rec_reg_237[10:0];
assign tmp_22_fu_538_p2 = ($signed(ap_const_lv32_FFFFFFFF) + $signed(n_2_reg_214));
assign tmp_23_fu_544_p1 = tmp_22_fu_538_p2;
assign tmp_24_fu_400_p1 = i0_fu_394_p2;
assign tmp_25_fu_405_p2 = (i0_fu_394_p2 | ap_const_lv9_1);
assign tmp_26_fu_411_p1 = tmp_25_fu_405_p2;
assign tmp_27_fu_422_p1 = $signed(i1_fu_416_p2);
assign tmp_28_fu_427_p2 = (i1_fu_416_p2 | ap_const_lv32_1);
assign tmp_29_fu_433_p1 = $signed(tmp_28_fu_427_p2);
assign tmp_30_fu_586_p2 = ($signed(j_3_cast2_fu_570_p1) < $signed(nb_reg_781)? 1'b1: 1'b0);
assign tmp_31_fu_607_p2 = ($signed(k_1_cast1_fu_591_p1) < $signed(tmp_3_reg_786)? 1'b1: 1'b0);
assign tmp_32_fu_618_p1 = i0_1_fu_612_p2;
assign tmp_33_fu_637_p2 = (i0_1_fu_612_p2 | ap_const_lv8_1);
assign tmp_37_cast_fu_643_p1 = tmp_33_fu_637_p2;
assign tmp_38_cast_fu_658_p2 = (tmp_7_reg_797 + tmp_32_fu_618_p1);
assign tmp_40_cast_fu_674_p2 = (tmp_38_cast_fu_658_p2 | ap_const_lv11_1);
assign tmp_5_fu_490_p4 = {{n3_reg_203[ap_const_lv32_1F : ap_const_lv32_1]}};
assign tmp_7_fu_566_p1 = n_2_reg_214[10:0];
assign tmp_fu_388_p2 = ($signed(k_cast3_fu_372_p1) < $signed(j_reg_170)? 1'b1: 1'b0);
assign tmp_s_fu_526_p2 = ($signed(n_2_reg_214) < $signed(32'b100000001)? 1'b1: 1'b0);
always @ (posedge ap_clk)
begin
    c_addr_reg_713[0] <= 1'b0;
    c_addr_1_reg_718[0] <= 1'b1;
    c_addr_2_reg_723[0] <= 1'b0;
    c_addr_3_reg_728[0] <= 1'b1;
    n_reg_791[1:0] <= 2'b00;
    tmp_7_reg_797[0] <= 1'b0;
    n_2_reg_214[0] <= 1'b0;
    cp_s_reg_292[1:0] <= 2'b00;
end



endmodule //voicerec_FFT

