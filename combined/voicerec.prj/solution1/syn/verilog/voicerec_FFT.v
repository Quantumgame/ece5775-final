// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module voicerec_FFT (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        c_address0,
        c_ce0,
        c_we0,
        c_d0,
        c_q0,
        c_address1,
        c_ce1,
        c_we1,
        c_d1,
        c_q1,
        N
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 65'b1;
parameter    ap_ST_st2_fsm_1 = 65'b10;
parameter    ap_ST_st3_fsm_2 = 65'b100;
parameter    ap_ST_st4_fsm_3 = 65'b1000;
parameter    ap_ST_st5_fsm_4 = 65'b10000;
parameter    ap_ST_st6_fsm_5 = 65'b100000;
parameter    ap_ST_st7_fsm_6 = 65'b1000000;
parameter    ap_ST_st8_fsm_7 = 65'b10000000;
parameter    ap_ST_st9_fsm_8 = 65'b100000000;
parameter    ap_ST_st10_fsm_9 = 65'b1000000000;
parameter    ap_ST_st11_fsm_10 = 65'b10000000000;
parameter    ap_ST_st12_fsm_11 = 65'b100000000000;
parameter    ap_ST_st13_fsm_12 = 65'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 65'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 65'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 65'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 65'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 65'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 65'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 65'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 65'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 65'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 65'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 65'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 65'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 65'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 65'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 65'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 65'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 65'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 65'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 65'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 65'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 65'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 65'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 65'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 65'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 65'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 65'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 65'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 65'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 65'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 65'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 65'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 65'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 65'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 65'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 65'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 65'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 65'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 65'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 65'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 65'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 65'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 65'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 65'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 65'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 65'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 65'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 65'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 65'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 65'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 65'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 65'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 65'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv32_37 = 32'b110111;
parameter    ap_const_lv32_38 = 32'b111000;
parameter    ap_const_lv32_3C = 32'b111100;
parameter    ap_const_lv32_3D = 32'b111101;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_32 = 32'b110010;
parameter    ap_const_lv32_35 = 32'b110101;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv63_0 = 63'b000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv64_3FF0000000000000 = 64'b11111111110000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv30_0 = 30'b000000000000000000000000000000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv32_33 = 32'b110011;
parameter    ap_const_lv32_39 = 32'b111001;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv31_1 = 31'b1;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv64_8000000000000000 = 64'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv30_1 = 30'b1;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] c_address0;
output   c_ce0;
output   c_we0;
output  [63:0] c_d0;
input  [63:0] c_q0;
output  [8:0] c_address1;
output   c_ce1;
output   c_we1;
output  [63:0] c_d1;
input  [63:0] c_q1;
input  [31:0] N;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] c_address0;
reg c_ce0;
reg c_we0;
reg[63:0] c_d0;
reg[8:0] c_address1;
reg c_ce1;
reg c_we1;
reg[63:0] c_d1;
(* fsm_encoding = "none" *) reg   [64:0] ap_CS_fsm = 65'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_83;
wire   [7:0] cosVec_address0;
reg    cosVec_ce0;
wire   [63:0] cosVec_q0;
wire   [7:0] sinVec_address0;
reg    sinVec_ce0;
wire   [63:0] sinVec_q0;
reg   [63:0] reg_301;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_122;
reg    ap_sig_cseq_ST_st45_fsm_44;
reg    ap_sig_bdd_129;
reg    ap_sig_cseq_ST_st56_fsm_55;
reg    ap_sig_bdd_137;
reg   [63:0] reg_310;
reg    ap_sig_cseq_ST_st57_fsm_56;
reg    ap_sig_bdd_146;
wire   [63:0] grp_fu_269_p2;
reg   [63:0] reg_319;
reg    ap_sig_cseq_ST_st61_fsm_60;
reg    ap_sig_bdd_156;
reg    ap_sig_cseq_ST_st62_fsm_61;
reg    ap_sig_bdd_164;
wire   [63:0] grp_fu_273_p2;
reg   [63:0] reg_327;
wire   [30:0] k_3_fu_343_p2;
reg   [30:0] k_3_reg_644;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_182;
wire   [0:0] tmp_s_fu_349_p2;
reg   [0:0] tmp_s_reg_649;
wire   [0:0] tmp_fu_338_p2;
reg   [8:0] c_addr_reg_653;
reg   [8:0] c_addr_1_reg_658;
reg   [8:0] c_addr_2_reg_663;
reg   [8:0] c_addr_3_reg_668;
wire  signed [31:0] n_fu_411_p1;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_210;
wire  signed [31:0] j_4_fu_449_p2;
wire   [0:0] tmp_31_fu_443_p2;
wire  signed [31:0] j_5_fu_455_p2;
reg    ap_sig_cseq_ST_st41_fsm_40;
reg    ap_sig_bdd_228;
reg   [63:0] wr_reg_704;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_bdd_238;
wire    grp_fu_466_ap_done;
wire   [63:0] wi_1_fu_493_p1;
reg   [63:0] wi_1_reg_710;
wire   [31:0] grp_fu_466_p2;
reg   [31:0] nb_reg_716;
reg   [30:0] tmp_3_reg_721;
wire   [31:0] n_2_fu_507_p2;
reg   [31:0] n_2_reg_726;
wire  signed [62:0] tmp_31_cast_fu_513_p1;
reg  signed [62:0] tmp_31_cast_reg_731;
wire   [10:0] tmp_10_fu_517_p1;
reg   [10:0] tmp_10_reg_736;
wire   [30:0] j_6_fu_530_p2;
reg   [30:0] j_6_reg_744;
reg    ap_sig_cseq_ST_st43_fsm_42;
reg    ap_sig_bdd_263;
wire   [29:0] k_4_fu_545_p2;
reg   [29:0] k_4_reg_752;
reg    ap_sig_cseq_ST_st44_fsm_43;
reg    ap_sig_bdd_272;
reg   [8:0] c_addr_4_reg_757;
wire   [0:0] tmp_33_fu_540_p2;
reg   [8:0] c_addr_5_reg_762;
reg   [8:0] c_addr_6_reg_767;
reg   [8:0] c_addr_7_reg_772;
wire  signed [62:0] p_rec_fu_628_p2;
wire   [63:0] grp_fu_277_p2;
reg   [63:0] tmp_43_reg_782;
reg    ap_sig_cseq_ST_st49_fsm_48;
reg    ap_sig_bdd_296;
wire   [63:0] grp_fu_282_p2;
reg   [63:0] tmp_44_reg_787;
wire   [63:0] grp_fu_287_p2;
reg   [63:0] tmp_45_reg_792;
wire   [63:0] grp_fu_292_p2;
reg   [63:0] tmp_46_reg_797;
reg   [63:0] tmp_35_reg_802;
reg    ap_sig_cseq_ST_st51_fsm_50;
reg    ap_sig_bdd_310;
reg   [63:0] tmp_36_reg_807;
reg   [63:0] tmp_37_reg_812;
reg   [63:0] tmp_38_reg_817;
reg   [63:0] wrk_reg_822;
reg    ap_sig_cseq_ST_st54_fsm_53;
reg    ap_sig_bdd_321;
reg   [63:0] wik_1_reg_827;
reg   [63:0] tmp_41_reg_832;
reg   [30:0] k_reg_157;
reg   [31:0] j_reg_168;
reg   [31:0] j_1_reg_180;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_337;
reg   [31:0] n_0_in_reg_190;
reg   [31:0] n_1_reg_199;
wire   [0:0] tmp_32_fu_525_p2;
reg   [30:0] j_2_reg_211;
reg   [62:0] cp_0_rec_reg_222;
reg   [63:0] d_1_reg_234;
reg    ap_sig_cseq_ST_st65_fsm_64;
reg    ap_sig_bdd_359;
reg   [29:0] k_1_reg_246;
wire   [63:0] wik_phi_fu_261_p4;
reg   [63:0] wik_reg_257;
wire  signed [63:0] tmp_23_fu_363_p1;
wire  signed [63:0] tmp_25_fu_374_p1;
wire  signed [63:0] tmp_26_fu_385_p1;
wire  signed [63:0] tmp_28_fu_396_p1;
wire  signed [63:0] tmp_30_fu_477_p1;
wire   [63:0] sum8_cast_fu_573_p1;
wire   [63:0] sum_cast_fu_590_p1;
wire   [63:0] sum1_cast_fu_606_p1;
wire   [63:0] sum2_cast_fu_623_p1;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_385;
reg    ap_sig_cseq_ST_st55_fsm_54;
reg    ap_sig_bdd_397;
reg    ap_sig_cseq_ST_st64_fsm_63;
reg    ap_sig_bdd_406;
reg    ap_sig_cseq_ST_st63_fsm_62;
reg    ap_sig_bdd_420;
reg   [63:0] grp_fu_269_p0;
reg   [63:0] grp_fu_269_p1;
reg    ap_sig_cseq_ST_st50_fsm_49;
reg    ap_sig_bdd_436;
reg    ap_sig_cseq_ST_st52_fsm_51;
reg    ap_sig_bdd_443;
reg    ap_sig_cseq_ST_st58_fsm_57;
reg    ap_sig_bdd_450;
reg   [63:0] grp_fu_273_p0;
reg   [63:0] grp_fu_273_p1;
reg   [63:0] grp_fu_277_p0;
reg   [63:0] grp_fu_277_p1;
reg    ap_sig_cseq_ST_st46_fsm_45;
reg    ap_sig_bdd_461;
reg   [63:0] grp_fu_282_p0;
reg   [63:0] grp_fu_282_p1;
reg   [63:0] grp_fu_287_p0;
reg   [63:0] grp_fu_287_p1;
reg   [63:0] grp_fu_292_p0;
reg   [63:0] grp_fu_292_p1;
wire   [31:0] k_cast_fu_334_p1;
wire   [31:0] i0_fu_355_p3;
wire   [31:0] tmp_24_fu_368_p2;
wire   [31:0] i1_fu_379_p2;
wire   [31:0] tmp_27_fu_390_p2;
wire   [30:0] tmp_5_fu_401_p4;
wire   [29:0] tmp_11_fu_415_p4;
wire   [0:0] slt_fu_431_p2;
wire   [0:0] icmp_fu_425_p2;
wire   [0:0] rev6_fu_437_p2;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_526;
wire   [31:0] grp_fu_466_p0;
wire   [31:0] grp_fu_466_p1;
wire  signed [31:0] tmp_29_fu_471_p2;
wire   [63:0] wi_1_to_int_fu_483_p1;
wire   [63:0] wi_1_neg_fu_487_p2;
wire   [31:0] j_2_cast_fu_521_p1;
wire   [30:0] k_1_cast_fu_536_p1;
wire   [9:0] tmp_12_fu_551_p1;
wire   [10:0] tmp_34_fu_555_p3;
wire   [10:0] tmp_13_fu_563_p1;
wire   [10:0] sum8_fu_567_p2;
wire   [10:0] tmp_39_cast_fu_578_p2;
wire   [10:0] sum_fu_584_p2;
wire   [10:0] tmp_40_cast_fu_595_p2;
wire   [10:0] sum1_fu_600_p2;
wire   [10:0] tmp_42_cast_fu_611_p2;
wire   [10:0] sum2_fu_617_p2;
reg   [1:0] grp_fu_269_opcode;
wire    grp_fu_269_ce;
reg   [1:0] grp_fu_273_opcode;
wire    grp_fu_273_ce;
wire    grp_fu_277_ce;
wire    grp_fu_282_ce;
wire    grp_fu_287_ce;
wire    grp_fu_292_ce;
wire   [0:0] tmp_22_fu_461_p2;
reg    grp_fu_466_ap_start;
wire    grp_fu_466_ce;
reg   [64:0] ap_NS_fsm;


voicerec_FFT_cosVec #(
    .DataWidth( 64 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
cosVec_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( cosVec_address0 ),
    .ce0( cosVec_ce0 ),
    .q0( cosVec_q0 )
);

voicerec_FFT_sinVec #(
    .DataWidth( 64 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
sinVec_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( sinVec_address0 ),
    .ce0( sinVec_ce0 ),
    .q0( sinVec_q0 )
);

voicerec_dadddsub_64ns_64ns_64_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
voicerec_dadddsub_64ns_64ns_64_5_full_dsp_U4(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_269_p0 ),
    .din1( grp_fu_269_p1 ),
    .opcode( grp_fu_269_opcode ),
    .ce( grp_fu_269_ce ),
    .dout( grp_fu_269_p2 )
);

voicerec_dadddsub_64ns_64ns_64_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
voicerec_dadddsub_64ns_64ns_64_5_full_dsp_U5(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_273_p0 ),
    .din1( grp_fu_273_p1 ),
    .opcode( grp_fu_273_opcode ),
    .ce( grp_fu_273_ce ),
    .dout( grp_fu_273_p2 )
);

voicerec_dmul_64ns_64ns_64_6_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
voicerec_dmul_64ns_64ns_64_6_max_dsp_U6(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_277_p0 ),
    .din1( grp_fu_277_p1 ),
    .ce( grp_fu_277_ce ),
    .dout( grp_fu_277_p2 )
);

voicerec_dmul_64ns_64ns_64_6_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
voicerec_dmul_64ns_64ns_64_6_max_dsp_U7(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_282_p0 ),
    .din1( grp_fu_282_p1 ),
    .ce( grp_fu_282_ce ),
    .dout( grp_fu_282_p2 )
);

voicerec_dmul_64ns_64ns_64_6_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
voicerec_dmul_64ns_64ns_64_6_max_dsp_U8(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_287_p0 ),
    .din1( grp_fu_287_p1 ),
    .ce( grp_fu_287_ce ),
    .dout( grp_fu_287_p2 )
);

voicerec_dmul_64ns_64ns_64_6_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
voicerec_dmul_64ns_64ns_64_6_max_dsp_U9(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_292_p0 ),
    .din1( grp_fu_292_p1 ),
    .ce( grp_fu_292_ce ),
    .dout( grp_fu_292_p2 )
);

voicerec_sdiv_32ns_32ns_32_36_seq #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_sdiv_32ns_32ns_32_36_seq_U10(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .start( grp_fu_466_ap_start ),
    .done( grp_fu_466_ap_done ),
    .din0( grp_fu_466_p0 ),
    .din1( grp_fu_466_p1 ),
    .ce( grp_fu_466_ce ),
    .dout( grp_fu_466_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43) & (ap_const_lv1_0 == tmp_33_fu_540_p2))) begin
        cp_0_rec_reg_222 <= p_rec_fu_628_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) & ~(ap_const_logic_0 == grp_fu_466_ap_done))) begin
        cp_0_rec_reg_222 <= ap_const_lv63_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42) & ~(ap_const_lv1_0 == tmp_32_fu_525_p2))) begin
        d_1_reg_234 <= ap_const_lv64_3FF0000000000000;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        d_1_reg_234 <= wrk_reg_822;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == tmp_31_fu_443_p2))) begin
        j_1_reg_180 <= j_4_fu_449_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        j_1_reg_180 <= j_reg_168;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43) & (ap_const_lv1_0 == tmp_33_fu_540_p2))) begin
        j_2_reg_211 <= j_6_reg_744;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) & ~(ap_const_logic_0 == grp_fu_466_ap_done))) begin
        j_2_reg_211 <= ap_const_lv31_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == tmp_31_fu_443_p2))) begin
        j_reg_168 <= j_5_fu_455_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        j_reg_168 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42) & ~(ap_const_lv1_0 == tmp_32_fu_525_p2))) begin
        k_1_reg_246 <= ap_const_lv30_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        k_1_reg_246 <= k_4_reg_752;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == tmp_31_fu_443_p2))) begin
        k_reg_157 <= k_3_reg_644;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        k_reg_157 <= ap_const_lv31_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == tmp_31_fu_443_p2))) begin
        n_0_in_reg_190 <= n_fu_411_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        n_0_in_reg_190 <= N;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42) & (ap_const_lv1_0 == tmp_32_fu_525_p2))) begin
                n_1_reg_199[31 : 1] <= n_2_reg_726[31 : 1];
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (tmp_fu_338_p2 == ap_const_lv1_0))) begin
        n_1_reg_199[1] <= 1'b1;
        n_1_reg_199[2] <= 1'b0;
        n_1_reg_199[3] <= 1'b0;
        n_1_reg_199[4] <= 1'b0;
        n_1_reg_199[5] <= 1'b0;
        n_1_reg_199[6] <= 1'b0;
        n_1_reg_199[7] <= 1'b0;
        n_1_reg_199[8] <= 1'b0;
        n_1_reg_199[9] <= 1'b0;
        n_1_reg_199[10] <= 1'b0;
        n_1_reg_199[11] <= 1'b0;
        n_1_reg_199[12] <= 1'b0;
        n_1_reg_199[13] <= 1'b0;
        n_1_reg_199[14] <= 1'b0;
        n_1_reg_199[15] <= 1'b0;
        n_1_reg_199[16] <= 1'b0;
        n_1_reg_199[17] <= 1'b0;
        n_1_reg_199[18] <= 1'b0;
        n_1_reg_199[19] <= 1'b0;
        n_1_reg_199[20] <= 1'b0;
        n_1_reg_199[21] <= 1'b0;
        n_1_reg_199[22] <= 1'b0;
        n_1_reg_199[23] <= 1'b0;
        n_1_reg_199[24] <= 1'b0;
        n_1_reg_199[25] <= 1'b0;
        n_1_reg_199[26] <= 1'b0;
        n_1_reg_199[27] <= 1'b0;
        n_1_reg_199[28] <= 1'b0;
        n_1_reg_199[29] <= 1'b0;
        n_1_reg_199[30] <= 1'b0;
        n_1_reg_199[31] <= 1'b0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42) & ~(ap_const_lv1_0 == tmp_32_fu_525_p2))) begin
        wik_reg_257 <= ap_const_lv64_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        wik_reg_257 <= wik_1_reg_827;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_fu_338_p2 == ap_const_lv1_0) & ~(tmp_s_fu_349_p2 == ap_const_lv1_0))) begin
        c_addr_1_reg_658[8 : 1] <= tmp_25_fu_374_p1[8 : 1];
        c_addr_reg_653[8 : 1] <= tmp_23_fu_363_p1[8 : 1];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        c_addr_2_reg_663[8 : 1] <= tmp_26_fu_385_p1[8 : 1];
        c_addr_3_reg_668[8 : 1] <= tmp_28_fu_396_p1[8 : 1];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43) & ~(ap_const_lv1_0 == tmp_33_fu_540_p2))) begin
        c_addr_4_reg_757 <= sum8_cast_fu_573_p1;
        c_addr_5_reg_762 <= sum_cast_fu_590_p1;
        c_addr_6_reg_767 <= sum1_cast_fu_606_p1;
        c_addr_7_reg_772 <= sum2_cast_fu_623_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42)) begin
        j_6_reg_744 <= j_6_fu_530_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        k_3_reg_644 <= k_3_fu_343_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        k_4_reg_752 <= k_4_fu_545_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) & ~(ap_const_logic_0 == grp_fu_466_ap_done))) begin
        n_2_reg_726[31 : 2] <= n_2_fu_507_p2[31 : 2];
        nb_reg_716 <= grp_fu_466_p2;
        tmp_10_reg_736[10 : 1] <= tmp_10_fu_517_p1[10 : 1];
        tmp_31_cast_reg_731[62 : 2] <= tmp_31_cast_fu_513_p1[62 : 2];
        tmp_3_reg_721 <= {{n_1_reg_199[ap_const_lv32_1F : ap_const_lv32_1]}};
        wi_1_reg_710 <= wi_1_fu_493_p1;
        wr_reg_704 <= cosVec_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_55))) begin
        reg_301 <= c_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_56))) begin
        reg_310 <= c_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_55) | (ap_const_logic_1 == ap_sig_cseq_ST_st61_fsm_60) | (ap_const_logic_1 == ap_sig_cseq_ST_st62_fsm_61))) begin
        reg_319 <= grp_fu_269_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_55) | (ap_const_logic_1 == ap_sig_cseq_ST_st62_fsm_61))) begin
        reg_327 <= grp_fu_273_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        tmp_35_reg_802 <= grp_fu_277_p2;
        tmp_36_reg_807 <= grp_fu_282_p2;
        tmp_37_reg_812 <= grp_fu_287_p2;
        tmp_38_reg_817 <= grp_fu_292_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st61_fsm_60)) begin
        tmp_41_reg_832 <= grp_fu_273_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        tmp_43_reg_782 <= grp_fu_277_p2;
        tmp_44_reg_787 <= grp_fu_282_p2;
        tmp_45_reg_792 <= grp_fu_287_p2;
        tmp_46_reg_797 <= grp_fu_292_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_fu_338_p2 == ap_const_lv1_0))) begin
        tmp_s_reg_649 <= tmp_s_fu_349_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_53)) begin
        wik_1_reg_827 <= grp_fu_273_p2;
        wrk_reg_822 <= grp_fu_269_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st7_fsm_6 or tmp_22_fu_461_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & ~(ap_const_lv1_0 == tmp_22_fu_461_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or tmp_22_fu_461_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & ~(ap_const_lv1_0 == tmp_22_fu_461_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_83)
begin
    if (ap_sig_bdd_83) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_182)
begin
    if (ap_sig_bdd_182) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_122)
begin
    if (ap_sig_bdd_122) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st41_fsm_40 assign process. ///
always @ (ap_sig_bdd_228)
begin
    if (ap_sig_bdd_228) begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st42_fsm_41 assign process. ///
always @ (ap_sig_bdd_238)
begin
    if (ap_sig_bdd_238) begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st43_fsm_42 assign process. ///
always @ (ap_sig_bdd_263)
begin
    if (ap_sig_bdd_263) begin
        ap_sig_cseq_ST_st43_fsm_42 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st43_fsm_42 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st44_fsm_43 assign process. ///
always @ (ap_sig_bdd_272)
begin
    if (ap_sig_bdd_272) begin
        ap_sig_cseq_ST_st44_fsm_43 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st44_fsm_43 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st45_fsm_44 assign process. ///
always @ (ap_sig_bdd_129)
begin
    if (ap_sig_bdd_129) begin
        ap_sig_cseq_ST_st45_fsm_44 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st45_fsm_44 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st46_fsm_45 assign process. ///
always @ (ap_sig_bdd_461)
begin
    if (ap_sig_bdd_461) begin
        ap_sig_cseq_ST_st46_fsm_45 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st46_fsm_45 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st49_fsm_48 assign process. ///
always @ (ap_sig_bdd_296)
begin
    if (ap_sig_bdd_296) begin
        ap_sig_cseq_ST_st49_fsm_48 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st49_fsm_48 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_385)
begin
    if (ap_sig_bdd_385) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st50_fsm_49 assign process. ///
always @ (ap_sig_bdd_436)
begin
    if (ap_sig_bdd_436) begin
        ap_sig_cseq_ST_st50_fsm_49 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st50_fsm_49 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st51_fsm_50 assign process. ///
always @ (ap_sig_bdd_310)
begin
    if (ap_sig_bdd_310) begin
        ap_sig_cseq_ST_st51_fsm_50 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st51_fsm_50 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st52_fsm_51 assign process. ///
always @ (ap_sig_bdd_443)
begin
    if (ap_sig_bdd_443) begin
        ap_sig_cseq_ST_st52_fsm_51 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st52_fsm_51 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st54_fsm_53 assign process. ///
always @ (ap_sig_bdd_321)
begin
    if (ap_sig_bdd_321) begin
        ap_sig_cseq_ST_st54_fsm_53 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st54_fsm_53 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st55_fsm_54 assign process. ///
always @ (ap_sig_bdd_397)
begin
    if (ap_sig_bdd_397) begin
        ap_sig_cseq_ST_st55_fsm_54 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st55_fsm_54 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st56_fsm_55 assign process. ///
always @ (ap_sig_bdd_137)
begin
    if (ap_sig_bdd_137) begin
        ap_sig_cseq_ST_st56_fsm_55 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st56_fsm_55 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st57_fsm_56 assign process. ///
always @ (ap_sig_bdd_146)
begin
    if (ap_sig_bdd_146) begin
        ap_sig_cseq_ST_st57_fsm_56 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st57_fsm_56 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st58_fsm_57 assign process. ///
always @ (ap_sig_bdd_450)
begin
    if (ap_sig_bdd_450) begin
        ap_sig_cseq_ST_st58_fsm_57 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st58_fsm_57 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_337)
begin
    if (ap_sig_bdd_337) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st61_fsm_60 assign process. ///
always @ (ap_sig_bdd_156)
begin
    if (ap_sig_bdd_156) begin
        ap_sig_cseq_ST_st61_fsm_60 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st61_fsm_60 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st62_fsm_61 assign process. ///
always @ (ap_sig_bdd_164)
begin
    if (ap_sig_bdd_164) begin
        ap_sig_cseq_ST_st62_fsm_61 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st62_fsm_61 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st63_fsm_62 assign process. ///
always @ (ap_sig_bdd_420)
begin
    if (ap_sig_bdd_420) begin
        ap_sig_cseq_ST_st63_fsm_62 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st63_fsm_62 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st64_fsm_63 assign process. ///
always @ (ap_sig_bdd_406)
begin
    if (ap_sig_bdd_406) begin
        ap_sig_cseq_ST_st64_fsm_63 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st64_fsm_63 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st65_fsm_64 assign process. ///
always @ (ap_sig_bdd_359)
begin
    if (ap_sig_bdd_359) begin
        ap_sig_cseq_ST_st65_fsm_64 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st65_fsm_64 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_210)
begin
    if (ap_sig_bdd_210) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_526)
begin
    if (ap_sig_bdd_526) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// c_address0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st62_fsm_61 or ap_sig_cseq_ST_st2_fsm_1 or c_addr_reg_653 or c_addr_2_reg_663 or ap_sig_cseq_ST_st44_fsm_43 or c_addr_4_reg_757 or c_addr_6_reg_767 or ap_sig_cseq_ST_st5_fsm_4 or tmp_23_fu_363_p1 or tmp_26_fu_385_p1 or sum1_cast_fu_606_p1 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st55_fsm_54 or ap_sig_cseq_ST_st64_fsm_63)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st64_fsm_63)) begin
        c_address0 = c_addr_6_reg_767;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        c_address0 = c_addr_2_reg_663;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c_address0 = c_addr_reg_653;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st62_fsm_61) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_54))) begin
        c_address0 = c_addr_4_reg_757;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        c_address0 = sum1_cast_fu_606_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        c_address0 = tmp_26_fu_385_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        c_address0 = tmp_23_fu_363_p1;
    end else begin
        c_address0 = 'bx;
    end
end

/// c_address1 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st56_fsm_55 or ap_sig_cseq_ST_st2_fsm_1 or c_addr_1_reg_658 or c_addr_3_reg_668 or ap_sig_cseq_ST_st44_fsm_43 or c_addr_5_reg_762 or c_addr_7_reg_772 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st65_fsm_64 or tmp_25_fu_374_p1 or tmp_28_fu_396_p1 or sum2_cast_fu_623_p1 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st63_fsm_62)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        c_address1 = c_addr_7_reg_772;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        c_address1 = c_addr_3_reg_668;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c_address1 = c_addr_1_reg_658;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_55) | (ap_const_logic_1 == ap_sig_cseq_ST_st63_fsm_62))) begin
        c_address1 = c_addr_5_reg_762;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        c_address1 = sum2_cast_fu_623_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        c_address1 = tmp_28_fu_396_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        c_address1 = tmp_25_fu_374_p1;
    end else begin
        c_address1 = 'bx;
    end
end

/// c_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st62_fsm_61 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st44_fsm_43 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st55_fsm_54 or ap_sig_cseq_ST_st64_fsm_63)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st62_fsm_61) | (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_54) | (ap_const_logic_1 == ap_sig_cseq_ST_st64_fsm_63))) begin
        c_ce0 = ap_const_logic_1;
    end else begin
        c_ce0 = ap_const_logic_0;
    end
end

/// c_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st56_fsm_55 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st44_fsm_43 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st65_fsm_64 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st63_fsm_62)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_55) | (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st65_fsm_64) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st63_fsm_62))) begin
        c_ce1 = ap_const_logic_1;
    end else begin
        c_ce1 = ap_const_logic_0;
    end
end

/// c_d0 assign process. ///
always @ (c_q0 or reg_301 or reg_319 or ap_sig_cseq_ST_st62_fsm_61 or tmp_41_reg_832 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st64_fsm_63)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st64_fsm_63)) begin
        c_d0 = tmp_41_reg_832;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st62_fsm_61)) begin
        c_d0 = reg_319;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        c_d0 = reg_301;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c_d0 = c_q0;
    end else begin
        c_d0 = 'bx;
    end
end

/// c_d1 assign process. ///
always @ (c_q1 or reg_310 or reg_319 or reg_327 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st65_fsm_64 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st63_fsm_62)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        c_d1 = reg_327;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st63_fsm_62)) begin
        c_d1 = reg_319;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        c_d1 = reg_310;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c_d1 = c_q1;
    end else begin
        c_d1 = 'bx;
    end
end

/// c_we0 assign process. ///
always @ (ap_sig_cseq_ST_st62_fsm_61 or tmp_s_reg_649 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st64_fsm_63)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st62_fsm_61) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~(tmp_s_reg_649 == ap_const_lv1_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st64_fsm_63))) begin
        c_we0 = ap_const_logic_1;
    end else begin
        c_we0 = ap_const_logic_0;
    end
end

/// c_we1 assign process. ///
always @ (tmp_s_reg_649 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st65_fsm_64 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st63_fsm_62)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st65_fsm_64) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~(tmp_s_reg_649 == ap_const_lv1_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st63_fsm_62))) begin
        c_we1 = ap_const_logic_1;
    end else begin
        c_we1 = ap_const_logic_0;
    end
end

/// cosVec_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st41_fsm_40)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        cosVec_ce0 = ap_const_logic_1;
    end else begin
        cosVec_ce0 = ap_const_logic_0;
    end
end

/// grp_fu_269_opcode assign process. ///
always @ (ap_sig_cseq_ST_st57_fsm_56 or ap_sig_cseq_ST_st50_fsm_49 or ap_sig_cseq_ST_st52_fsm_51 or ap_sig_cseq_ST_st58_fsm_57)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_51))) begin
        grp_fu_269_opcode = ap_const_lv2_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_56) | (ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_57))) begin
        grp_fu_269_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_269_opcode = 'bx;
    end
end

/// grp_fu_269_p0 assign process. ///
always @ (reg_301 or reg_310 or ap_sig_cseq_ST_st57_fsm_56 or tmp_43_reg_782 or tmp_35_reg_802 or ap_sig_cseq_ST_st50_fsm_49 or ap_sig_cseq_ST_st52_fsm_51 or ap_sig_cseq_ST_st58_fsm_57)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_57)) begin
        grp_fu_269_p0 = reg_310;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_56)) begin
        grp_fu_269_p0 = reg_301;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_51)) begin
        grp_fu_269_p0 = tmp_35_reg_802;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        grp_fu_269_p0 = tmp_43_reg_782;
    end else begin
        grp_fu_269_p0 = 'bx;
    end
end

/// grp_fu_269_p1 assign process. ///
always @ (ap_sig_cseq_ST_st57_fsm_56 or reg_319 or reg_327 or tmp_44_reg_787 or tmp_36_reg_807 or ap_sig_cseq_ST_st50_fsm_49 or ap_sig_cseq_ST_st52_fsm_51 or ap_sig_cseq_ST_st58_fsm_57)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_57)) begin
        grp_fu_269_p1 = reg_327;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_56)) begin
        grp_fu_269_p1 = reg_319;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_51)) begin
        grp_fu_269_p1 = tmp_36_reg_807;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        grp_fu_269_p1 = tmp_44_reg_787;
    end else begin
        grp_fu_269_p1 = 'bx;
    end
end

/// grp_fu_273_opcode assign process. ///
always @ (ap_sig_cseq_ST_st57_fsm_56 or ap_sig_cseq_ST_st50_fsm_49 or ap_sig_cseq_ST_st52_fsm_51 or ap_sig_cseq_ST_st58_fsm_57)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_56) | (ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_57))) begin
        grp_fu_273_opcode = ap_const_lv2_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_51))) begin
        grp_fu_273_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_273_opcode = 'bx;
    end
end

/// grp_fu_273_p0 assign process. ///
always @ (reg_301 or reg_310 or ap_sig_cseq_ST_st57_fsm_56 or tmp_45_reg_792 or tmp_37_reg_812 or ap_sig_cseq_ST_st50_fsm_49 or ap_sig_cseq_ST_st52_fsm_51 or ap_sig_cseq_ST_st58_fsm_57)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_57)) begin
        grp_fu_273_p0 = reg_310;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_56)) begin
        grp_fu_273_p0 = reg_301;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_51)) begin
        grp_fu_273_p0 = tmp_37_reg_812;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        grp_fu_273_p0 = tmp_45_reg_792;
    end else begin
        grp_fu_273_p0 = 'bx;
    end
end

/// grp_fu_273_p1 assign process. ///
always @ (ap_sig_cseq_ST_st57_fsm_56 or reg_319 or reg_327 or tmp_46_reg_797 or tmp_38_reg_817 or ap_sig_cseq_ST_st50_fsm_49 or ap_sig_cseq_ST_st52_fsm_51 or ap_sig_cseq_ST_st58_fsm_57)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_57)) begin
        grp_fu_273_p1 = reg_327;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_56)) begin
        grp_fu_273_p1 = reg_319;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_51)) begin
        grp_fu_273_p1 = tmp_38_reg_817;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        grp_fu_273_p1 = tmp_46_reg_797;
    end else begin
        grp_fu_273_p1 = 'bx;
    end
end

/// grp_fu_277_p0 assign process. ///
always @ (wr_reg_704 or ap_sig_cseq_ST_st44_fsm_43 or d_1_reg_234 or ap_sig_cseq_ST_st46_fsm_45)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45)) begin
        grp_fu_277_p0 = d_1_reg_234;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        grp_fu_277_p0 = wr_reg_704;
    end else begin
        grp_fu_277_p0 = 'bx;
    end
end

/// grp_fu_277_p1 assign process. ///
always @ (reg_301 or ap_sig_cseq_ST_st44_fsm_43 or d_1_reg_234 or ap_sig_cseq_ST_st46_fsm_45)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45)) begin
        grp_fu_277_p1 = reg_301;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        grp_fu_277_p1 = d_1_reg_234;
    end else begin
        grp_fu_277_p1 = 'bx;
    end
end

/// grp_fu_282_p0 assign process. ///
always @ (ap_sig_cseq_ST_st44_fsm_43 or wik_phi_fu_261_p4 or wik_reg_257 or ap_sig_cseq_ST_st46_fsm_45)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45)) begin
        grp_fu_282_p0 = wik_reg_257;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        grp_fu_282_p0 = wik_phi_fu_261_p4;
    end else begin
        grp_fu_282_p0 = 'bx;
    end
end

/// grp_fu_282_p1 assign process. ///
always @ (reg_310 or wi_1_reg_710 or ap_sig_cseq_ST_st44_fsm_43 or ap_sig_cseq_ST_st46_fsm_45)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45)) begin
        grp_fu_282_p1 = reg_310;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        grp_fu_282_p1 = wi_1_reg_710;
    end else begin
        grp_fu_282_p1 = 'bx;
    end
end

/// grp_fu_287_p0 assign process. ///
always @ (wr_reg_704 or ap_sig_cseq_ST_st44_fsm_43 or d_1_reg_234 or ap_sig_cseq_ST_st46_fsm_45)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45)) begin
        grp_fu_287_p0 = d_1_reg_234;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        grp_fu_287_p0 = wr_reg_704;
    end else begin
        grp_fu_287_p0 = 'bx;
    end
end

/// grp_fu_287_p1 assign process. ///
always @ (reg_310 or ap_sig_cseq_ST_st44_fsm_43 or wik_reg_257 or ap_sig_cseq_ST_st46_fsm_45)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45)) begin
        grp_fu_287_p1 = reg_310;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        grp_fu_287_p1 = wik_reg_257;
    end else begin
        grp_fu_287_p1 = 'bx;
    end
end

/// grp_fu_292_p0 assign process. ///
always @ (ap_sig_cseq_ST_st44_fsm_43 or d_1_reg_234 or wik_reg_257 or ap_sig_cseq_ST_st46_fsm_45)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45)) begin
        grp_fu_292_p0 = wik_reg_257;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        grp_fu_292_p0 = d_1_reg_234;
    end else begin
        grp_fu_292_p0 = 'bx;
    end
end

/// grp_fu_292_p1 assign process. ///
always @ (reg_301 or wi_1_reg_710 or ap_sig_cseq_ST_st44_fsm_43 or ap_sig_cseq_ST_st46_fsm_45)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45)) begin
        grp_fu_292_p1 = reg_301;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        grp_fu_292_p1 = wi_1_reg_710;
    end else begin
        grp_fu_292_p1 = 'bx;
    end
end

/// grp_fu_466_ap_start assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or tmp_22_fu_461_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & (ap_const_lv1_0 == tmp_22_fu_461_p2))) begin
        grp_fu_466_ap_start = ap_const_logic_1;
    end else begin
        grp_fu_466_ap_start = ap_const_logic_0;
    end
end

/// sinVec_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st41_fsm_40)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        sinVec_ce0 = ap_const_logic_1;
    end else begin
        sinVec_ce0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or tmp_s_fu_349_p2 or tmp_fu_338_p2 or tmp_31_fu_443_p2 or grp_fu_466_ap_done or tmp_33_fu_540_p2 or tmp_32_fu_525_p2 or tmp_22_fu_461_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((~(tmp_fu_338_p2 == ap_const_lv1_0) & (tmp_s_fu_349_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else if ((~(tmp_fu_338_p2 == ap_const_lv1_0) & ~(tmp_s_fu_349_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            if ((ap_const_lv1_0 == tmp_31_fu_443_p2)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st7_fsm_6 : 
        begin
            if (~(ap_const_lv1_0 == tmp_22_fu_461_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : 
        begin
            if (~(ap_const_logic_0 == grp_fu_466_ap_done)) begin
                ap_NS_fsm = ap_ST_st43_fsm_42;
            end else begin
                ap_NS_fsm = ap_ST_st42_fsm_41;
            end
        end
        ap_ST_st43_fsm_42 : 
        begin
            if (~(ap_const_lv1_0 == tmp_32_fu_525_p2)) begin
                ap_NS_fsm = ap_ST_st44_fsm_43;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st44_fsm_43 : 
        begin
            if ((ap_const_lv1_0 == tmp_33_fu_540_p2)) begin
                ap_NS_fsm = ap_ST_st43_fsm_42;
            end else begin
                ap_NS_fsm = ap_ST_st45_fsm_44;
            end
        end
        ap_ST_st45_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : 
        begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : 
        begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : 
        begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : 
        begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : 
        begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : 
        begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : 
        begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : 
        begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : 
        begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : 
        begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : 
        begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : 
        begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : 
        begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : 
        begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : 
        begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_122 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_122 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_129 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_129 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2C]);
end

/// ap_sig_bdd_137 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_137 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_37]);
end

/// ap_sig_bdd_146 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_146 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_38]);
end

/// ap_sig_bdd_156 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_156 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3C]);
end

/// ap_sig_bdd_164 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_164 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3D]);
end

/// ap_sig_bdd_182 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_182 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_210 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_210 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_228 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_228 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_28]);
end

/// ap_sig_bdd_238 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_238 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_29]);
end

/// ap_sig_bdd_263 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_263 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2A]);
end

/// ap_sig_bdd_272 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_272 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2B]);
end

/// ap_sig_bdd_296 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_296 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_30]);
end

/// ap_sig_bdd_310 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_310 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_32]);
end

/// ap_sig_bdd_321 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_321 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_35]);
end

/// ap_sig_bdd_337 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_337 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_359 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_359 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_40]);
end

/// ap_sig_bdd_385 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_385 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_397 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_397 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_36]);
end

/// ap_sig_bdd_406 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_406 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3F]);
end

/// ap_sig_bdd_420 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_420 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3E]);
end

/// ap_sig_bdd_436 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_436 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_31]);
end

/// ap_sig_bdd_443 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_443 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_33]);
end

/// ap_sig_bdd_450 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_450 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_39]);
end

/// ap_sig_bdd_461 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_461 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2D]);
end

/// ap_sig_bdd_526 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_526 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_83 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_83 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end
assign cosVec_address0 = tmp_30_fu_477_p1;
assign grp_fu_269_ce = ap_const_logic_1;
assign grp_fu_273_ce = ap_const_logic_1;
assign grp_fu_277_ce = ap_const_logic_1;
assign grp_fu_282_ce = ap_const_logic_1;
assign grp_fu_287_ce = ap_const_logic_1;
assign grp_fu_292_ce = ap_const_logic_1;
assign grp_fu_466_ce = ap_const_logic_1;
assign grp_fu_466_p0 = N;
assign grp_fu_466_p1 = n_1_reg_199;
assign i0_fu_355_p3 = {{k_reg_157}, {ap_const_lv1_0}};
assign i1_fu_379_p2 = j_reg_168 << ap_const_lv32_1;
assign icmp_fu_425_p2 = ($signed(tmp_11_fu_415_p4) > $signed(30'b000000000000000000000000000000)? 1'b1: 1'b0);
assign j_2_cast_fu_521_p1 = j_2_reg_211;
assign j_4_fu_449_p2 = ($signed(j_1_reg_180) - $signed(n_fu_411_p1));
assign j_5_fu_455_p2 = ($signed(j_1_reg_180) + $signed(n_fu_411_p1));
assign j_6_fu_530_p2 = (j_2_reg_211 + ap_const_lv31_1);
assign k_1_cast_fu_536_p1 = k_1_reg_246;
assign k_3_fu_343_p2 = (k_reg_157 + ap_const_lv31_1);
assign k_4_fu_545_p2 = (k_1_reg_246 + ap_const_lv30_1);
assign k_cast_fu_334_p1 = k_reg_157;
assign n_2_fu_507_p2 = n_1_reg_199 << ap_const_lv32_1;
assign n_fu_411_p1 = $signed(tmp_5_fu_401_p4);
assign p_rec_fu_628_p2 = ($signed(tmp_31_cast_reg_731) + $signed(cp_0_rec_reg_222));
assign rev6_fu_437_p2 = (slt_fu_431_p2 ^ ap_const_lv1_1);
assign sinVec_address0 = tmp_30_fu_477_p1;
assign slt_fu_431_p2 = ($signed(j_1_reg_180) < $signed(n_fu_411_p1)? 1'b1: 1'b0);
assign sum1_cast_fu_606_p1 = sum1_fu_600_p2;
assign sum1_fu_600_p2 = (tmp_40_cast_fu_595_p2 + tmp_13_fu_563_p1);
assign sum2_cast_fu_623_p1 = sum2_fu_617_p2;
assign sum2_fu_617_p2 = (tmp_42_cast_fu_611_p2 + tmp_13_fu_563_p1);
assign sum8_cast_fu_573_p1 = sum8_fu_567_p2;
assign sum8_fu_567_p2 = (tmp_34_fu_555_p3 + tmp_13_fu_563_p1);
assign sum_cast_fu_590_p1 = sum_fu_584_p2;
assign sum_fu_584_p2 = (tmp_39_cast_fu_578_p2 + tmp_13_fu_563_p1);
assign tmp_10_fu_517_p1 = n_1_reg_199[10:0];
assign tmp_11_fu_415_p4 = {{n_0_in_reg_190[ap_const_lv32_1F : ap_const_lv32_2]}};
assign tmp_12_fu_551_p1 = k_1_reg_246[9:0];
assign tmp_13_fu_563_p1 = cp_0_rec_reg_222[10:0];
assign tmp_22_fu_461_p2 = ($signed(n_1_reg_199) > $signed(N)? 1'b1: 1'b0);
assign tmp_23_fu_363_p1 = $signed(i0_fu_355_p3);
assign tmp_24_fu_368_p2 = (i0_fu_355_p3 | ap_const_lv32_1);
assign tmp_25_fu_374_p1 = $signed(tmp_24_fu_368_p2);
assign tmp_26_fu_385_p1 = $signed(i1_fu_379_p2);
assign tmp_27_fu_390_p2 = (i1_fu_379_p2 | ap_const_lv32_1);
assign tmp_28_fu_396_p1 = $signed(tmp_27_fu_390_p2);
assign tmp_29_fu_471_p2 = ($signed(ap_const_lv32_FFFFFFFF) + $signed(n_1_reg_199));
assign tmp_30_fu_477_p1 = tmp_29_fu_471_p2;
assign tmp_31_cast_fu_513_p1 = $signed(n_2_fu_507_p2);
assign tmp_31_fu_443_p2 = (icmp_fu_425_p2 & rev6_fu_437_p2);
assign tmp_32_fu_525_p2 = ($signed(j_2_cast_fu_521_p1) < $signed(nb_reg_716)? 1'b1: 1'b0);
assign tmp_33_fu_540_p2 = ($signed(k_1_cast_fu_536_p1) < $signed(tmp_3_reg_721)? 1'b1: 1'b0);
assign tmp_34_fu_555_p3 = {{tmp_12_fu_551_p1}, {ap_const_lv1_0}};
assign tmp_39_cast_fu_578_p2 = (tmp_34_fu_555_p3 | ap_const_lv11_1);
assign tmp_40_cast_fu_595_p2 = (tmp_34_fu_555_p3 + tmp_10_reg_736);
assign tmp_42_cast_fu_611_p2 = (tmp_40_cast_fu_595_p2 | ap_const_lv11_1);
assign tmp_5_fu_401_p4 = {{n_0_in_reg_190[ap_const_lv32_1F : ap_const_lv32_1]}};
assign tmp_fu_338_p2 = ($signed(k_cast_fu_334_p1) < $signed(N)? 1'b1: 1'b0);
assign tmp_s_fu_349_p2 = ($signed(k_cast_fu_334_p1) < $signed(j_reg_168)? 1'b1: 1'b0);
assign wi_1_fu_493_p1 = wi_1_neg_fu_487_p2;
assign wi_1_neg_fu_487_p2 = (wi_1_to_int_fu_483_p1 ^ ap_const_lv64_8000000000000000);
assign wi_1_to_int_fu_483_p1 = sinVec_q0;
assign wik_phi_fu_261_p4 = wik_reg_257;
always @ (posedge ap_clk)
begin
    c_addr_reg_653[0] <= 1'b0;
    c_addr_1_reg_658[0] <= 1'b1;
    c_addr_2_reg_663[0] <= 1'b0;
    c_addr_3_reg_668[0] <= 1'b1;
    n_2_reg_726[1:0] <= 2'b00;
    tmp_31_cast_reg_731[1:0] <= 2'b00;
    tmp_10_reg_736[0] <= 1'b0;
    n_1_reg_199[0] <= 1'b0;
end



endmodule //voicerec_FFT

