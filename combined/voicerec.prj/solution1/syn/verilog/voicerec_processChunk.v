// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module voicerec_processChunk (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sp,
        np,
        ret_address0,
        ret_ce0,
        ret_we0,
        ret_d0,
        tmp_122,
        inputSound_address0,
        inputSound_ce0,
        inputSound_q0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 105'b1;
parameter    ap_ST_st2_fsm_1 = 105'b10;
parameter    ap_ST_st3_fsm_2 = 105'b100;
parameter    ap_ST_st4_fsm_3 = 105'b1000;
parameter    ap_ST_st5_fsm_4 = 105'b10000;
parameter    ap_ST_st6_fsm_5 = 105'b100000;
parameter    ap_ST_st7_fsm_6 = 105'b1000000;
parameter    ap_ST_st8_fsm_7 = 105'b10000000;
parameter    ap_ST_st9_fsm_8 = 105'b100000000;
parameter    ap_ST_st10_fsm_9 = 105'b1000000000;
parameter    ap_ST_st11_fsm_10 = 105'b10000000000;
parameter    ap_ST_st12_fsm_11 = 105'b100000000000;
parameter    ap_ST_st13_fsm_12 = 105'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 105'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 105'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 105'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 105'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 105'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 105'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 105'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 105'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 105'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 105'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 105'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 105'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 105'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 105'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 105'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 105'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 105'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 105'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 105'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 105'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 105'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 105'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 105'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 105'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 105'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 105'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 105'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 105'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 105'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 105'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 105'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 105'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 105'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 105'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 105'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 105'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 105'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 105'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 105'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 105'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 105'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 105'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 105'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 105'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 105'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 105'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 105'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 105'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 105'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 105'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 105'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 105'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 105'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 105'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_67 = 105'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_68 = 105'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_69 = 105'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_70 = 105'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_71 = 105'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_72 = 105'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_73 = 105'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_74 = 105'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_75 = 105'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_76 = 105'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st78_fsm_77 = 105'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st79_fsm_78 = 105'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st80_fsm_79 = 105'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st81_fsm_80 = 105'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st82_fsm_81 = 105'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st83_fsm_82 = 105'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st84_fsm_83 = 105'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st85_fsm_84 = 105'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st86_fsm_85 = 105'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st87_fsm_86 = 105'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st88_fsm_87 = 105'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st89_fsm_88 = 105'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st90_fsm_89 = 105'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st91_fsm_90 = 105'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st92_fsm_91 = 105'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st93_fsm_92 = 105'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st94_fsm_93 = 105'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st95_fsm_94 = 105'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st96_fsm_95 = 105'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st97_fsm_96 = 105'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st98_fsm_97 = 105'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st99_fsm_98 = 105'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st100_fsm_99 = 105'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st101_fsm_100 = 105'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st102_fsm_101 = 105'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st103_fsm_102 = 105'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st104_fsm_103 = 105'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st105_fsm_104 = 105'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_57 = 32'b1010111;
parameter    ap_const_lv32_5D = 32'b1011101;
parameter    ap_const_lv32_67 = 32'b1100111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_62 = 32'b1100010;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv32_51 = 32'b1010001;
parameter    ap_const_lv32_33 = 32'b110011;
parameter    ap_const_lv32_48 = 32'b1001000;
parameter    ap_const_lv32_38 = 32'b111000;
parameter    ap_const_lv32_3D = 32'b111101;
parameter    ap_const_lv32_4C = 32'b1001100;
parameter    ap_const_lv32_42 = 32'b1000010;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_43 = 32'b1000011;
parameter    ap_const_lv32_4D = 32'b1001101;
parameter    ap_const_lv32_4F = 32'b1001111;
parameter    ap_const_lv32_50 = 32'b1010000;
parameter    ap_const_lv32_56 = 32'b1010110;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_4E = 32'b1001110;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_68 = 32'b1101000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv32_3EB444F9 = 32'b111110101101000100010011111001;
parameter    ap_const_lv32_C2F87377 = 32'b11000010111110000111001101110111;
parameter    ap_const_lv32_39 = 32'b111001;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv32_44 = 32'b1000100;
parameter    ap_const_lv32_34000000 = 32'b110100000000000000000000000000;
parameter    ap_const_lv32_3FBFBF75 = 32'b111111101111111011111101110101;
parameter    ap_const_lv32_3F317218 = 32'b111111001100010111001000011000;
parameter    ap_const_lv32_35 = 32'b110101;
parameter    ap_const_lv32_3A = 32'b111010;
parameter    ap_const_lv32_49 = 32'b1001001;
parameter    ap_const_lv32_3FDCE9A3 = 32'b111111110111001110100110100011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_5E = 32'b1011110;
parameter    ap_const_lv64_3F70000000000000 = 64'b11111101110000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_3FD1C01AA03BE89E = 64'b11111111010001110000000001101010100000001110111110100010011110;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_52 = 32'b1010010;
parameter    ap_const_lv32_58 = 32'b1011000;
parameter    ap_const_lv31_1 = 31'b1;
parameter    ap_const_lv5_1A = 5'b11010;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv11_7FF = 11'b11111111111;
parameter    ap_const_lv52_0 = 52'b0000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv7_7E = 7'b1111110;
parameter    ap_const_lv9_1A = 9'b11010;
parameter    ap_const_lv4_E = 4'b1110;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv64_3FE6A09E667F3BD1 = 64'b11111111100110101000001001111001100110011111110011101111010001;
parameter    ap_const_lv64_3FF0000000000000 = 64'b11111111110000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv5_5 = 5'b101;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] sp;
input  [31:0] np;
output  [9:0] ret_address0;
output   ret_ce0;
output   ret_we0;
output  [63:0] ret_d0;
input  [31:0] tmp_122;
output  [12:0] inputSound_address0;
output   inputSound_ce0;
input  [63:0] inputSound_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg ret_ce0;
reg ret_we0;
reg inputSound_ce0;
(* fsm_encoding = "none" *) reg   [104:0] ap_CS_fsm = 105'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_123;
reg   [8:0] c_address0;
reg    c_ce0;
reg    c_we0;
reg   [63:0] c_d0;
wire   [63:0] c_q0;
reg   [8:0] c_address1;
reg    c_ce1;
reg    c_we1;
reg   [63:0] c_d1;
wire   [63:0] c_q1;
reg   [7:0] d_address0;
reg    d_ce0;
reg    d_we0;
wire   [63:0] d_d0;
wire   [63:0] d_q0;
reg   [4:0] e_address0;
reg    e_ce0;
reg    e_we0;
reg   [63:0] e_d0;
wire   [63:0] e_q0;
reg   [4:0] mell_address0;
reg    mell_ce0;
wire   [7:0] mell_q0;
wire   [9:0] dctMatrix_address0;
reg    dctMatrix_ce0;
wire   [63:0] dctMatrix_q0;
wire   [63:0] grp_fu_464_p2;
reg   [63:0] reg_486;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_200;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_bdd_207;
reg    ap_sig_cseq_ST_st88_fsm_87;
reg    ap_sig_bdd_215;
reg    ap_sig_cseq_ST_st94_fsm_93;
reg    ap_sig_bdd_223;
reg    ap_sig_cseq_ST_st104_fsm_103;
reg    ap_sig_bdd_231;
wire   [63:0] grp_fu_459_p2;
reg   [63:0] reg_495;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_bdd_241;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_bdd_248;
reg    ap_sig_cseq_ST_st99_fsm_98;
reg    ap_sig_bdd_256;
reg   [63:0] reg_502;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_bdd_265;
reg    ap_sig_cseq_ST_st36_fsm_35;
reg    ap_sig_bdd_272;
reg   [63:0] reg_507;
reg    ap_sig_cseq_ST_st45_fsm_44;
reg    ap_sig_bdd_281;
reg    ap_sig_cseq_ST_st82_fsm_81;
reg    ap_sig_bdd_289;
wire   [31:0] grp_fu_432_p2;
reg   [31:0] reg_515;
reg    ap_sig_cseq_ST_st52_fsm_51;
reg    ap_sig_bdd_299;
reg    ap_sig_cseq_ST_st73_fsm_72;
reg    ap_sig_bdd_306;
wire   [31:0] grp_fu_438_p2;
reg   [31:0] reg_521;
reg    ap_sig_cseq_ST_st57_fsm_56;
reg    ap_sig_bdd_316;
reg    ap_sig_cseq_ST_st62_fsm_61;
reg    ap_sig_bdd_323;
reg    ap_sig_cseq_ST_st77_fsm_76;
reg    ap_sig_bdd_331;
reg   [31:0] reg_528;
reg    ap_sig_cseq_ST_st67_fsm_66;
reg    ap_sig_bdd_340;
wire   [30:0] i_5_fu_542_p2;
reg   [30:0] i_5_reg_927;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_359;
wire   [0:0] tmp_fu_537_p2;
wire   [30:0] i_6_fu_591_p2;
reg   [30:0] i_6_reg_940;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_375;
wire   [0:0] tmp_64_fu_586_p2;
reg   [63:0] c_load_reg_955;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_391;
reg   [63:0] c_load_6_reg_961;
wire   [63:0] grp_fu_468_p2;
reg   [63:0] tmp_70_reg_967;
wire   [4:0] i_7_fu_632_p2;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_bdd_403;
wire   [31:0] i_3_cast_fu_643_p1;
reg   [31:0] i_3_cast_reg_980;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_bdd_412;
wire   [30:0] i_9_fu_652_p2;
reg   [30:0] i_9_reg_989;
wire  signed [63:0] tmp_76_fu_658_p1;
reg  signed [63:0] tmp_76_reg_994;
wire   [0:0] tmp_74_fu_647_p2;
wire   [30:0] mell_load_cast_cast_fu_667_p1;
reg   [30:0] mell_load_cast_cast_reg_1004;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_bdd_431;
wire   [0:0] tmp_77_fu_671_p2;
reg   [0:0] tmp_77_reg_1009;
wire   [0:0] tmp_80_fu_681_p2;
reg   [0:0] tmp_80_reg_1018;
reg    ap_sig_cseq_ST_st34_fsm_33;
reg    ap_sig_bdd_447;
wire   [0:0] tmp_84_fu_695_p2;
reg   [0:0] tmp_84_reg_1027;
reg    ap_sig_cseq_ST_st35_fsm_34;
reg    ap_sig_bdd_461;
reg   [4:0] e_addr_2_reg_1036;
reg   [63:0] tmp_87_reg_1041;
reg    ap_sig_cseq_ST_st41_fsm_40;
reg    ap_sig_bdd_475;
wire   [31:0] grp_fu_480_p2;
reg   [31:0] mellIdx_1_reg_1046;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_bdd_484;
wire   [31:0] p_mellIdx_fu_720_p3;
reg    ap_sig_cseq_ST_st43_fsm_42;
reg    ap_sig_bdd_495;
wire   [4:0] i_8_fu_733_p2;
reg   [4:0] i_8_reg_1064;
reg    ap_sig_cseq_ST_st44_fsm_43;
reg    ap_sig_bdd_504;
reg   [4:0] e_addr_1_reg_1069;
wire   [0:0] exitcond_fu_727_p2;
wire   [31:0] p_addr_fu_754_p2;
reg   [31:0] p_addr_reg_1074;
wire   [0:0] tmp_47_fu_475_p2;
reg   [0:0] tmp_47_reg_1079;
reg    ap_sig_cseq_ST_st46_fsm_45;
reg    ap_sig_bdd_522;
wire   [31:0] x_assign_fu_453_p1;
reg   [31:0] x_assign_reg_1087;
reg    ap_sig_cseq_ST_st47_fsm_46;
reg    ap_sig_bdd_531;
wire   [0:0] tmp_48_fu_796_p2;
reg    ap_sig_cseq_ST_st48_fsm_47;
reg    ap_sig_bdd_543;
wire   [31:0] tmp_2_i_i_fu_825_p1;
reg   [31:0] tmp_2_i_i_reg_1097;
wire   [31:0] grp_fu_450_p1;
reg   [31:0] y_reg_1103;
reg    ap_sig_cseq_ST_st53_fsm_52;
reg    ap_sig_bdd_554;
wire   [31:0] grp_fu_445_p2;
reg   [31:0] tmp_6_i_i_reg_1108;
reg    ap_sig_cseq_ST_st68_fsm_67;
reg    ap_sig_bdd_563;
wire   [63:0] tmp_85_fu_456_p1;
reg    ap_sig_cseq_ST_st78_fsm_77;
reg    ap_sig_bdd_572;
wire   [8:0] next_mul_fu_830_p2;
reg   [8:0] next_mul_reg_1118;
reg    ap_sig_cseq_ST_st80_fsm_79;
reg    ap_sig_bdd_581;
wire   [3:0] k_fu_842_p2;
reg   [3:0] k_reg_1126;
wire   [63:0] s_fu_854_p3;
reg   [63:0] s_reg_1131;
wire   [0:0] exitcond3_i_fu_836_p2;
wire   [31:0] tmp_27_i_trn2_fu_862_p1;
reg   [31:0] tmp_27_i_trn2_reg_1136;
wire   [4:0] n_fu_872_p2;
reg   [4:0] n_reg_1144;
reg    ap_sig_cseq_ST_st81_fsm_80;
reg    ap_sig_bdd_599;
wire   [0:0] exitcond_i_fu_866_p2;
wire   [8:0] dctMatrix_addr4_fu_887_p2;
reg   [8:0] dctMatrix_addr4_reg_1154;
wire   [31:0] p_addr1_fu_893_p2;
reg   [31:0] p_addr1_reg_1159;
reg    ap_sig_cseq_ST_st87_fsm_86;
reg    ap_sig_bdd_619;
reg   [63:0] dctMatrix_load_reg_1169;
wire    grp_voicerec_FFT_fu_421_ap_start;
wire    grp_voicerec_FFT_fu_421_ap_done;
wire    grp_voicerec_FFT_fu_421_ap_idle;
wire    grp_voicerec_FFT_fu_421_ap_ready;
wire   [8:0] grp_voicerec_FFT_fu_421_c_address0;
wire    grp_voicerec_FFT_fu_421_c_ce0;
wire    grp_voicerec_FFT_fu_421_c_we0;
wire   [63:0] grp_voicerec_FFT_fu_421_c_d0;
wire   [63:0] grp_voicerec_FFT_fu_421_c_q0;
wire   [8:0] grp_voicerec_FFT_fu_421_c_address1;
wire    grp_voicerec_FFT_fu_421_c_ce1;
wire    grp_voicerec_FFT_fu_421_c_we1;
wire   [63:0] grp_voicerec_FFT_fu_421_c_d1;
wire   [63:0] grp_voicerec_FFT_fu_421_c_q1;
wire   [31:0] grp_voicerec_FFT_fu_421_N;
reg   [30:0] i_reg_293;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_647;
reg   [30:0] i_1_reg_305;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_656;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_bdd_666;
reg   [4:0] i_2_reg_317;
wire   [0:0] exitcond1_fu_626_p2;
reg   [30:0] i_3_reg_328;
reg   [31:0] mellIdx_reg_340;
reg   [4:0] i_4_reg_352;
reg    ap_sig_cseq_ST_st79_fsm_78;
reg    ap_sig_bdd_688;
reg   [63:0] storemerge_reg_363;
reg   [3:0] k_i_reg_375;
reg    ap_sig_cseq_ST_st105_fsm_104;
reg    ap_sig_bdd_703;
reg   [8:0] phi_mul_reg_386;
reg   [63:0] sum_i_reg_398;
reg   [4:0] n_i_reg_410;
reg    grp_voicerec_FFT_fu_421_ap_start_ap_start_reg = 1'b0;
wire  signed [63:0] tmp_59_fu_553_p1;
wire  signed [63:0] tmp_61_fu_566_p1;
wire  signed [63:0] tmp_63_fu_577_p1;
wire  signed [63:0] tmp_66_fu_605_p1;
wire  signed [63:0] tmp_69_fu_616_p1;
wire   [63:0] tmp_73_fu_621_p1;
wire   [63:0] tmp_75_fu_638_p1;
wire   [63:0] tmp_78_fu_676_p1;
wire  signed [63:0] tmp_83_fu_686_p1;
wire   [63:0] tmp_86_fu_701_p1;
wire  signed [63:0] tmp_88_fu_706_p1;
wire   [63:0] tmp_81_fu_739_p1;
wire   [63:0] tmp_29_i_fu_878_p1;
wire   [63:0] tmp_56_fu_897_p1;
wire  signed [63:0] tmp_55_fu_901_p1;
reg   [31:0] grp_fu_432_p0;
reg   [31:0] grp_fu_432_p1;
reg    ap_sig_cseq_ST_st58_fsm_57;
reg    ap_sig_bdd_787;
reg    ap_sig_cseq_ST_st63_fsm_62;
reg    ap_sig_bdd_794;
reg    ap_sig_cseq_ST_st69_fsm_68;
reg    ap_sig_bdd_801;
reg   [31:0] grp_fu_438_p0;
reg   [31:0] grp_fu_438_p1;
reg    ap_sig_cseq_ST_st54_fsm_53;
reg    ap_sig_bdd_814;
reg    ap_sig_cseq_ST_st59_fsm_58;
reg    ap_sig_bdd_821;
reg    ap_sig_cseq_ST_st74_fsm_73;
reg    ap_sig_bdd_828;
wire   [31:0] grp_fu_445_p0;
wire   [31:0] grp_fu_445_p1;
wire   [63:0] grp_fu_450_p0;
wire   [63:0] x_assign_fu_453_p0;
wire   [31:0] tmp_85_fu_456_p0;
reg   [63:0] grp_fu_459_p0;
reg   [63:0] grp_fu_459_p1;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_843;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_bdd_850;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_bdd_857;
reg    ap_sig_cseq_ST_st95_fsm_94;
reg    ap_sig_bdd_865;
reg   [63:0] grp_fu_464_p0;
reg   [63:0] grp_fu_464_p1;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_876;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_bdd_883;
reg    ap_sig_cseq_ST_st83_fsm_82;
reg    ap_sig_bdd_890;
reg    ap_sig_cseq_ST_st89_fsm_88;
reg    ap_sig_bdd_897;
wire   [63:0] grp_fu_468_p0;
wire   [63:0] grp_fu_468_p1;
wire   [63:0] tmp_47_fu_475_p0;
wire   [63:0] tmp_47_fu_475_p1;
wire   [31:0] i_cast_fu_533_p1;
wire   [31:0] tmp_s_fu_548_p2;
wire   [31:0] tmp_60_fu_558_p3;
wire   [31:0] tmp_62_fu_571_p2;
wire   [31:0] i_1_cast_fu_582_p1;
wire   [31:0] tmp_65_fu_597_p3;
wire   [31:0] tmp_68_fu_610_p2;
wire   [31:0] mell_load_cast_fu_663_p1;
wire   [30:0] mell_load_1_cast_cast_fu_691_p1;
wire   [31:0] mell_load_2_cast_fu_711_p1;
wire   [0:0] tmp_89_fu_715_p2;
wire   [31:0] tmp_33_fu_744_p2;
wire   [31:0] tmp_34_fu_749_p2;
wire   [63:0] e_load_1_to_int_fu_760_p1;
wire   [10:0] tmp_44_fu_764_p4;
wire   [51:0] tmp_35_fu_774_p1;
wire   [0:0] notrhs_fu_784_p2;
wire   [0:0] notlhs_fu_778_p2;
wire   [0:0] tmp_46_fu_790_p2;
wire   [31:0] tmp_i_i_fu_801_p1;
wire   [22:0] tmp_36_fu_804_p1;
wire   [29:0] mx_i_i_fu_808_p3;
wire   [31:0] mx_i_i_cast_fu_816_p1;
wire   [0:0] tmp_i1_fu_848_p2;
wire   [8:0] tmp_29_i_trn_cast_fu_883_p1;
reg   [1:0] grp_fu_432_opcode;
wire    grp_fu_432_ce;
wire    grp_fu_438_ce;
wire    grp_fu_445_ce;
wire    grp_fu_450_ce;
wire    grp_fu_459_ce;
wire    grp_fu_464_ce;
wire    grp_fu_468_ce;
wire   [4:0] tmp_47_fu_475_opcode;
reg   [104:0] ap_NS_fsm;


voicerec_processChunk_c #(
    .DataWidth( 64 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
c_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( c_address0 ),
    .ce0( c_ce0 ),
    .we0( c_we0 ),
    .d0( c_d0 ),
    .q0( c_q0 ),
    .address1( c_address1 ),
    .ce1( c_ce1 ),
    .we1( c_we1 ),
    .d1( c_d1 ),
    .q1( c_q1 )
);

voicerec_processChunk_d #(
    .DataWidth( 64 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
d_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( d_address0 ),
    .ce0( d_ce0 ),
    .we0( d_we0 ),
    .d0( d_d0 ),
    .q0( d_q0 )
);

voicerec_processChunk_e #(
    .DataWidth( 64 ),
    .AddressRange( 26 ),
    .AddressWidth( 5 ))
e_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( e_address0 ),
    .ce0( e_ce0 ),
    .we0( e_we0 ),
    .d0( e_d0 ),
    .q0( e_q0 )
);

voicerec_processChunk_mell #(
    .DataWidth( 8 ),
    .AddressRange( 27 ),
    .AddressWidth( 5 ))
mell_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( mell_address0 ),
    .ce0( mell_ce0 ),
    .q0( mell_q0 )
);

voicerec_processChunk_dctMatrix #(
    .DataWidth( 64 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
dctMatrix_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( dctMatrix_address0 ),
    .ce0( dctMatrix_ce0 ),
    .q0( dctMatrix_q0 )
);

voicerec_FFT grp_voicerec_FFT_fu_421(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_voicerec_FFT_fu_421_ap_start ),
    .ap_done( grp_voicerec_FFT_fu_421_ap_done ),
    .ap_idle( grp_voicerec_FFT_fu_421_ap_idle ),
    .ap_ready( grp_voicerec_FFT_fu_421_ap_ready ),
    .c_address0( grp_voicerec_FFT_fu_421_c_address0 ),
    .c_ce0( grp_voicerec_FFT_fu_421_c_ce0 ),
    .c_we0( grp_voicerec_FFT_fu_421_c_we0 ),
    .c_d0( grp_voicerec_FFT_fu_421_c_d0 ),
    .c_q0( grp_voicerec_FFT_fu_421_c_q0 ),
    .c_address1( grp_voicerec_FFT_fu_421_c_address1 ),
    .c_ce1( grp_voicerec_FFT_fu_421_c_ce1 ),
    .c_we1( grp_voicerec_FFT_fu_421_c_we1 ),
    .c_d1( grp_voicerec_FFT_fu_421_c_d1 ),
    .c_q1( grp_voicerec_FFT_fu_421_c_q1 ),
    .N( grp_voicerec_FFT_fu_421_N )
);

voicerec_faddfsub_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_faddfsub_32ns_32ns_32_5_full_dsp_U15(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_432_p0 ),
    .din1( grp_fu_432_p1 ),
    .opcode( grp_fu_432_opcode ),
    .ce( grp_fu_432_ce ),
    .dout( grp_fu_432_p2 )
);

voicerec_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_fmul_32ns_32ns_32_4_max_dsp_U16(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_438_p0 ),
    .din1( grp_fu_438_p1 ),
    .ce( grp_fu_438_ce ),
    .dout( grp_fu_438_p2 )
);

voicerec_fdiv_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_fdiv_32ns_32ns_32_16_U17(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_445_p0 ),
    .din1( grp_fu_445_p1 ),
    .ce( grp_fu_445_ce ),
    .dout( grp_fu_445_p2 )
);

voicerec_sitofp_64ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
voicerec_sitofp_64ns_32_6_U18(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_450_p0 ),
    .ce( grp_fu_450_ce ),
    .dout( grp_fu_450_p1 )
);

voicerec_fptrunc_64ns_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
voicerec_fptrunc_64ns_32_1_U19(
    .din0( x_assign_fu_453_p0 ),
    .dout( x_assign_fu_453_p1 )
);

voicerec_fpext_32ns_64_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
voicerec_fpext_32ns_64_1_U20(
    .din0( tmp_85_fu_456_p0 ),
    .dout( tmp_85_fu_456_p1 )
);

voicerec_dadd_64ns_64ns_64_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
voicerec_dadd_64ns_64ns_64_5_full_dsp_U21(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_459_p0 ),
    .din1( grp_fu_459_p1 ),
    .ce( grp_fu_459_ce ),
    .dout( grp_fu_459_p2 )
);

voicerec_dmul_64ns_64ns_64_6_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
voicerec_dmul_64ns_64ns_64_6_max_dsp_U22(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_464_p0 ),
    .din1( grp_fu_464_p1 ),
    .ce( grp_fu_464_ce ),
    .dout( grp_fu_464_p2 )
);

voicerec_dmul_64ns_64ns_64_6_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
voicerec_dmul_64ns_64ns_64_6_max_dsp_U23(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_468_p0 ),
    .din1( grp_fu_468_p1 ),
    .ce( grp_fu_468_ce ),
    .dout( grp_fu_468_p2 )
);

voicerec_dcmp_64ns_64ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
voicerec_dcmp_64ns_64ns_1_1_U24(
    .din0( tmp_47_fu_475_p0 ),
    .din1( tmp_47_fu_475_p1 ),
    .opcode( tmp_47_fu_475_opcode ),
    .dout( tmp_47_fu_475_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// grp_voicerec_FFT_fu_421_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_voicerec_FFT_fu_421_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_voicerec_FFT_fu_421_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (tmp_fu_537_p2 == ap_const_lv1_0))) begin
            grp_voicerec_FFT_fu_421_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_voicerec_FFT_fu_421_ap_ready)) begin
            grp_voicerec_FFT_fu_421_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        i_1_reg_305 <= i_6_reg_940;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_logic_0 == grp_voicerec_FFT_fu_421_ap_done))) begin
        i_1_reg_305 <= ap_const_lv31_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == tmp_64_fu_586_p2))) begin
        i_2_reg_317 <= ap_const_lv5_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24) & (ap_const_lv1_0 == exitcond1_fu_626_p2))) begin
        i_2_reg_317 <= i_7_fu_632_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24) & ~(ap_const_lv1_0 == exitcond1_fu_626_p2))) begin
        i_3_reg_328 <= ap_const_lv31_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42)) begin
        i_3_reg_328 <= i_9_reg_989;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25) & (ap_const_lv1_0 == tmp_74_fu_647_p2))) begin
        i_4_reg_352 <= ap_const_lv5_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78)) begin
        i_4_reg_352 <= i_8_reg_1064;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        i_reg_293 <= i_5_reg_927;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_293 <= ap_const_lv31_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43) & ~(ap_const_lv1_0 == exitcond_fu_727_p2))) begin
        k_i_reg_375 <= ap_const_lv4_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st105_fsm_104)) begin
        k_i_reg_375 <= k_reg_1126;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24) & ~(ap_const_lv1_0 == exitcond1_fu_626_p2))) begin
        mellIdx_reg_340 <= ap_const_lv32_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42)) begin
        mellIdx_reg_340 <= p_mellIdx_fu_720_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st99_fsm_98)) begin
        n_i_reg_410 <= n_reg_1144;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79) & (ap_const_lv1_0 == exitcond3_i_fu_836_p2))) begin
        n_i_reg_410 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43) & ~(ap_const_lv1_0 == exitcond_fu_727_p2))) begin
        phi_mul_reg_386 <= ap_const_lv9_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st105_fsm_104)) begin
        phi_mul_reg_386 <= next_mul_reg_1118;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_46) & ~(ap_const_lv1_0 == tmp_48_fu_796_p2))) begin
        storemerge_reg_363 <= ap_const_lv64_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_77)) begin
        storemerge_reg_363 <= tmp_85_fu_456_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st99_fsm_98)) begin
        sum_i_reg_398 <= grp_fu_459_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79) & (ap_const_lv1_0 == exitcond3_i_fu_836_p2))) begin
        sum_i_reg_398 <= ap_const_lv64_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        c_load_6_reg_961 <= c_q1;
        c_load_reg_955 <= c_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80) & (ap_const_lv1_0 == exitcond_i_fu_866_p2))) begin
        dctMatrix_addr4_reg_1154 <= dctMatrix_addr4_fu_887_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st88_fsm_87)) begin
        dctMatrix_load_reg_1169 <= dctMatrix_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43) & (ap_const_lv1_0 == exitcond_fu_727_p2))) begin
        e_addr_1_reg_1069 <= tmp_81_fu_739_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34) & (ap_const_lv1_0 == tmp_84_fu_695_p2))) begin
        e_addr_2_reg_1036 <= tmp_76_reg_994;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        i_3_cast_reg_980[30 : 0] <= i_3_cast_fu_643_p1[30 : 0];
        i_9_reg_989 <= i_9_fu_652_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_5_reg_927 <= i_5_fu_542_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        i_6_reg_940 <= i_6_fu_591_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        i_8_reg_1064 <= i_8_fu_733_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79)) begin
        k_reg_1126 <= k_fu_842_p2;
        next_mul_reg_1118 <= next_mul_fu_830_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        mellIdx_1_reg_1046 <= grp_fu_480_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        mell_load_cast_cast_reg_1004[7 : 0] <= mell_load_cast_cast_fu_667_p1[7 : 0];
        tmp_77_reg_1009 <= tmp_77_fu_671_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80)) begin
        n_reg_1144 <= n_fu_872_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80) & ~(ap_const_lv1_0 == exitcond_i_fu_866_p2))) begin
        p_addr1_reg_1159 <= p_addr1_fu_893_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43) & ~(ap_const_lv1_0 == exitcond_fu_727_p2))) begin
        p_addr_reg_1074[31 : 1] <= p_addr_fu_754_p2[31 : 1];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) | (ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) | (ap_const_logic_1 == ap_sig_cseq_ST_st88_fsm_87) | (ap_const_logic_1 == ap_sig_cseq_ST_st94_fsm_93) | (ap_const_logic_1 == ap_sig_cseq_ST_st104_fsm_103))) begin
        reg_486 <= grp_fu_464_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16) | (ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) | (ap_const_logic_1 == ap_sig_cseq_ST_st99_fsm_98))) begin
        reg_495 <= grp_fu_459_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27) | (ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35))) begin
        reg_502 <= d_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27) | (ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35) | (ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) | (ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81))) begin
        reg_507 <= e_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_51) | (ap_const_logic_1 == ap_sig_cseq_ST_st73_fsm_72))) begin
        reg_515 <= grp_fu_432_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_56) | (ap_const_logic_1 == ap_sig_cseq_ST_st62_fsm_61) | (ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_76))) begin
        reg_521 <= grp_fu_438_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st62_fsm_61) | (ap_const_logic_1 == ap_sig_cseq_ST_st67_fsm_66))) begin
        reg_528 <= grp_fu_432_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79) & (ap_const_lv1_0 == exitcond3_i_fu_836_p2))) begin
        s_reg_1131[0] <= s_fu_854_p3[0];s_reg_1131[4] <= s_fu_854_p3[4];s_reg_1131[9 : 6] <= s_fu_854_p3[9 : 6];s_reg_1131[13 : 11] <= s_fu_854_p3[13 : 11];s_reg_1131[22 : 16] <= s_fu_854_p3[22 : 16];s_reg_1131[26 : 25] <= s_fu_854_p3[26 : 25];s_reg_1131[30 : 29] <= s_fu_854_p3[30 : 29];s_reg_1131[36 : 33] <= s_fu_854_p3[36 : 33];s_reg_1131[39] <= s_fu_854_p3[39];s_reg_1131[45] <= s_fu_854_p3[45];s_reg_1131[47] <= s_fu_854_p3[47];s_reg_1131[50 : 49] <= s_fu_854_p3[50 : 49];s_reg_1131[52] <= s_fu_854_p3[52];
        tmp_27_i_trn2_reg_1136[3 : 0] <= tmp_27_i_trn2_fu_862_p1[3 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        tmp_2_i_i_reg_1097[22 : 0] <= tmp_2_i_i_fu_825_p1[22 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45)) begin
        tmp_47_reg_1079 <= tmp_47_fu_475_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st68_fsm_67)) begin
        tmp_6_i_i_reg_1108 <= grp_fu_445_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        tmp_70_reg_967 <= grp_fu_468_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25) & ~(ap_const_lv1_0 == tmp_74_fu_647_p2))) begin
        tmp_76_reg_994 <= tmp_76_fu_658_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        tmp_80_reg_1018 <= tmp_80_fu_681_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34)) begin
        tmp_84_reg_1027 <= tmp_84_fu_695_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        tmp_87_reg_1041 <= grp_fu_459_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_46) & (ap_const_lv1_0 == tmp_48_fu_796_p2))) begin
        x_assign_reg_1087 <= x_assign_fu_453_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st53_fsm_52)) begin
        y_reg_1103 <= grp_fu_450_p1;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st80_fsm_79 or exitcond3_i_fu_836_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79) & ~(ap_const_lv1_0 == exitcond3_i_fu_836_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st80_fsm_79 or exitcond3_i_fu_836_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79) & ~(ap_const_lv1_0 == exitcond3_i_fu_836_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st104_fsm_103 assign process. ///
always @ (ap_sig_bdd_231)
begin
    if (ap_sig_bdd_231) begin
        ap_sig_cseq_ST_st104_fsm_103 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st104_fsm_103 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st105_fsm_104 assign process. ///
always @ (ap_sig_bdd_703)
begin
    if (ap_sig_bdd_703) begin
        ap_sig_cseq_ST_st105_fsm_104 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st105_fsm_104 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st12_fsm_11 assign process. ///
always @ (ap_sig_bdd_200)
begin
    if (ap_sig_bdd_200) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st13_fsm_12 assign process. ///
always @ (ap_sig_bdd_843)
begin
    if (ap_sig_bdd_843) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st17_fsm_16 assign process. ///
always @ (ap_sig_bdd_241)
begin
    if (ap_sig_bdd_241) begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st18_fsm_17 assign process. ///
always @ (ap_sig_bdd_883)
begin
    if (ap_sig_bdd_883) begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_123)
begin
    if (ap_sig_bdd_123) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st23_fsm_22 assign process. ///
always @ (ap_sig_bdd_207)
begin
    if (ap_sig_bdd_207) begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st24_fsm_23 assign process. ///
always @ (ap_sig_bdd_666)
begin
    if (ap_sig_bdd_666) begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st25_fsm_24 assign process. ///
always @ (ap_sig_bdd_403)
begin
    if (ap_sig_bdd_403) begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st26_fsm_25 assign process. ///
always @ (ap_sig_bdd_412)
begin
    if (ap_sig_bdd_412) begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st27_fsm_26 assign process. ///
always @ (ap_sig_bdd_431)
begin
    if (ap_sig_bdd_431) begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st28_fsm_27 assign process. ///
always @ (ap_sig_bdd_265)
begin
    if (ap_sig_bdd_265) begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st29_fsm_28 assign process. ///
always @ (ap_sig_bdd_850)
begin
    if (ap_sig_bdd_850) begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_359)
begin
    if (ap_sig_bdd_359) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st33_fsm_32 assign process. ///
always @ (ap_sig_bdd_248)
begin
    if (ap_sig_bdd_248) begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st34_fsm_33 assign process. ///
always @ (ap_sig_bdd_447)
begin
    if (ap_sig_bdd_447) begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st35_fsm_34 assign process. ///
always @ (ap_sig_bdd_461)
begin
    if (ap_sig_bdd_461) begin
        ap_sig_cseq_ST_st35_fsm_34 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st35_fsm_34 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st36_fsm_35 assign process. ///
always @ (ap_sig_bdd_272)
begin
    if (ap_sig_bdd_272) begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st37_fsm_36 assign process. ///
always @ (ap_sig_bdd_857)
begin
    if (ap_sig_bdd_857) begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_647)
begin
    if (ap_sig_bdd_647) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st41_fsm_40 assign process. ///
always @ (ap_sig_bdd_475)
begin
    if (ap_sig_bdd_475) begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st42_fsm_41 assign process. ///
always @ (ap_sig_bdd_484)
begin
    if (ap_sig_bdd_484) begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st43_fsm_42 assign process. ///
always @ (ap_sig_bdd_495)
begin
    if (ap_sig_bdd_495) begin
        ap_sig_cseq_ST_st43_fsm_42 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st43_fsm_42 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st44_fsm_43 assign process. ///
always @ (ap_sig_bdd_504)
begin
    if (ap_sig_bdd_504) begin
        ap_sig_cseq_ST_st44_fsm_43 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st44_fsm_43 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st45_fsm_44 assign process. ///
always @ (ap_sig_bdd_281)
begin
    if (ap_sig_bdd_281) begin
        ap_sig_cseq_ST_st45_fsm_44 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st45_fsm_44 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st46_fsm_45 assign process. ///
always @ (ap_sig_bdd_522)
begin
    if (ap_sig_bdd_522) begin
        ap_sig_cseq_ST_st46_fsm_45 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st46_fsm_45 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st47_fsm_46 assign process. ///
always @ (ap_sig_bdd_531)
begin
    if (ap_sig_bdd_531) begin
        ap_sig_cseq_ST_st47_fsm_46 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st47_fsm_46 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st48_fsm_47 assign process. ///
always @ (ap_sig_bdd_543)
begin
    if (ap_sig_bdd_543) begin
        ap_sig_cseq_ST_st48_fsm_47 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_47 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_656)
begin
    if (ap_sig_bdd_656) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st52_fsm_51 assign process. ///
always @ (ap_sig_bdd_299)
begin
    if (ap_sig_bdd_299) begin
        ap_sig_cseq_ST_st52_fsm_51 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st52_fsm_51 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st53_fsm_52 assign process. ///
always @ (ap_sig_bdd_554)
begin
    if (ap_sig_bdd_554) begin
        ap_sig_cseq_ST_st53_fsm_52 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st53_fsm_52 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st54_fsm_53 assign process. ///
always @ (ap_sig_bdd_814)
begin
    if (ap_sig_bdd_814) begin
        ap_sig_cseq_ST_st54_fsm_53 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st54_fsm_53 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st57_fsm_56 assign process. ///
always @ (ap_sig_bdd_316)
begin
    if (ap_sig_bdd_316) begin
        ap_sig_cseq_ST_st57_fsm_56 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st57_fsm_56 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st58_fsm_57 assign process. ///
always @ (ap_sig_bdd_787)
begin
    if (ap_sig_bdd_787) begin
        ap_sig_cseq_ST_st58_fsm_57 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st58_fsm_57 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st59_fsm_58 assign process. ///
always @ (ap_sig_bdd_821)
begin
    if (ap_sig_bdd_821) begin
        ap_sig_cseq_ST_st59_fsm_58 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st59_fsm_58 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_375)
begin
    if (ap_sig_bdd_375) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st62_fsm_61 assign process. ///
always @ (ap_sig_bdd_323)
begin
    if (ap_sig_bdd_323) begin
        ap_sig_cseq_ST_st62_fsm_61 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st62_fsm_61 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st63_fsm_62 assign process. ///
always @ (ap_sig_bdd_794)
begin
    if (ap_sig_bdd_794) begin
        ap_sig_cseq_ST_st63_fsm_62 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st63_fsm_62 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st67_fsm_66 assign process. ///
always @ (ap_sig_bdd_340)
begin
    if (ap_sig_bdd_340) begin
        ap_sig_cseq_ST_st67_fsm_66 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st67_fsm_66 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st68_fsm_67 assign process. ///
always @ (ap_sig_bdd_563)
begin
    if (ap_sig_bdd_563) begin
        ap_sig_cseq_ST_st68_fsm_67 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st68_fsm_67 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st69_fsm_68 assign process. ///
always @ (ap_sig_bdd_801)
begin
    if (ap_sig_bdd_801) begin
        ap_sig_cseq_ST_st69_fsm_68 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st69_fsm_68 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_391)
begin
    if (ap_sig_bdd_391) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st73_fsm_72 assign process. ///
always @ (ap_sig_bdd_306)
begin
    if (ap_sig_bdd_306) begin
        ap_sig_cseq_ST_st73_fsm_72 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st73_fsm_72 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st74_fsm_73 assign process. ///
always @ (ap_sig_bdd_828)
begin
    if (ap_sig_bdd_828) begin
        ap_sig_cseq_ST_st74_fsm_73 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st74_fsm_73 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st77_fsm_76 assign process. ///
always @ (ap_sig_bdd_331)
begin
    if (ap_sig_bdd_331) begin
        ap_sig_cseq_ST_st77_fsm_76 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st77_fsm_76 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st78_fsm_77 assign process. ///
always @ (ap_sig_bdd_572)
begin
    if (ap_sig_bdd_572) begin
        ap_sig_cseq_ST_st78_fsm_77 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st78_fsm_77 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st79_fsm_78 assign process. ///
always @ (ap_sig_bdd_688)
begin
    if (ap_sig_bdd_688) begin
        ap_sig_cseq_ST_st79_fsm_78 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st79_fsm_78 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_876)
begin
    if (ap_sig_bdd_876) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st80_fsm_79 assign process. ///
always @ (ap_sig_bdd_581)
begin
    if (ap_sig_bdd_581) begin
        ap_sig_cseq_ST_st80_fsm_79 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st80_fsm_79 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st81_fsm_80 assign process. ///
always @ (ap_sig_bdd_599)
begin
    if (ap_sig_bdd_599) begin
        ap_sig_cseq_ST_st81_fsm_80 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st81_fsm_80 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st82_fsm_81 assign process. ///
always @ (ap_sig_bdd_289)
begin
    if (ap_sig_bdd_289) begin
        ap_sig_cseq_ST_st82_fsm_81 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st82_fsm_81 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st83_fsm_82 assign process. ///
always @ (ap_sig_bdd_890)
begin
    if (ap_sig_bdd_890) begin
        ap_sig_cseq_ST_st83_fsm_82 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st83_fsm_82 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st87_fsm_86 assign process. ///
always @ (ap_sig_bdd_619)
begin
    if (ap_sig_bdd_619) begin
        ap_sig_cseq_ST_st87_fsm_86 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st87_fsm_86 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st88_fsm_87 assign process. ///
always @ (ap_sig_bdd_215)
begin
    if (ap_sig_bdd_215) begin
        ap_sig_cseq_ST_st88_fsm_87 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st88_fsm_87 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st89_fsm_88 assign process. ///
always @ (ap_sig_bdd_897)
begin
    if (ap_sig_bdd_897) begin
        ap_sig_cseq_ST_st89_fsm_88 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st89_fsm_88 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st94_fsm_93 assign process. ///
always @ (ap_sig_bdd_223)
begin
    if (ap_sig_bdd_223) begin
        ap_sig_cseq_ST_st94_fsm_93 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st94_fsm_93 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st95_fsm_94 assign process. ///
always @ (ap_sig_bdd_865)
begin
    if (ap_sig_bdd_865) begin
        ap_sig_cseq_ST_st95_fsm_94 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st95_fsm_94 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st99_fsm_98 assign process. ///
always @ (ap_sig_bdd_256)
begin
    if (ap_sig_bdd_256) begin
        ap_sig_cseq_ST_st99_fsm_98 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st99_fsm_98 = ap_const_logic_0;
    end
end

/// c_address0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or grp_voicerec_FFT_fu_421_c_address0 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3 or tmp_61_fu_566_p1 or tmp_66_fu_605_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        c_address0 = tmp_61_fu_566_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        c_address0 = tmp_66_fu_605_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c_address0 = grp_voicerec_FFT_fu_421_c_address0;
    end else begin
        c_address0 = 'bx;
    end
end

/// c_address1 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or grp_voicerec_FFT_fu_421_c_address1 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3 or tmp_63_fu_577_p1 or tmp_69_fu_616_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        c_address1 = tmp_63_fu_577_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        c_address1 = tmp_69_fu_616_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c_address1 = grp_voicerec_FFT_fu_421_c_address1;
    end else begin
        c_address1 = 'bx;
    end
end

/// c_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or grp_voicerec_FFT_fu_421_c_ce0 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2))) begin
        c_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c_ce0 = grp_voicerec_FFT_fu_421_c_ce0;
    end else begin
        c_ce0 = ap_const_logic_0;
    end
end

/// c_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or grp_voicerec_FFT_fu_421_c_ce1 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2))) begin
        c_ce1 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c_ce1 = grp_voicerec_FFT_fu_421_c_ce1;
    end else begin
        c_ce1 = ap_const_logic_0;
    end
end

/// c_d0 assign process. ///
always @ (inputSound_q0 or grp_voicerec_FFT_fu_421_c_d0 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        c_d0 = inputSound_q0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c_d0 = grp_voicerec_FFT_fu_421_c_d0;
    end else begin
        c_d0 = 'bx;
    end
end

/// c_d1 assign process. ///
always @ (grp_voicerec_FFT_fu_421_c_d1 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        c_d1 = ap_const_lv64_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c_d1 = grp_voicerec_FFT_fu_421_c_d1;
    end else begin
        c_d1 = 'bx;
    end
end

/// c_we0 assign process. ///
always @ (grp_voicerec_FFT_fu_421_c_we0 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        c_we0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c_we0 = grp_voicerec_FFT_fu_421_c_we0;
    end else begin
        c_we0 = ap_const_logic_0;
    end
end

/// c_we1 assign process. ///
always @ (grp_voicerec_FFT_fu_421_c_we1 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        c_we1 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c_we1 = grp_voicerec_FFT_fu_421_c_we1;
    end else begin
        c_we1 = ap_const_logic_0;
    end
end

/// d_address0 assign process. ///
always @ (ap_sig_cseq_ST_st27_fsm_26 or ap_sig_cseq_ST_st35_fsm_34 or ap_sig_cseq_ST_st24_fsm_23 or tmp_73_fu_621_p1 or tmp_78_fu_676_p1 or tmp_86_fu_701_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        d_address0 = tmp_73_fu_621_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34)) begin
        d_address0 = tmp_86_fu_701_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        d_address0 = tmp_78_fu_676_p1;
    end else begin
        d_address0 = 'bx;
    end
end

/// d_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st27_fsm_26 or ap_sig_cseq_ST_st35_fsm_34 or ap_sig_cseq_ST_st24_fsm_23)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26) | (ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34) | (ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23))) begin
        d_ce0 = ap_const_logic_1;
    end else begin
        d_ce0 = ap_const_logic_0;
    end
end

/// d_we0 assign process. ///
always @ (ap_sig_cseq_ST_st24_fsm_23)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        d_we0 = ap_const_logic_1;
    end else begin
        d_we0 = ap_const_logic_0;
    end
end

/// dctMatrix_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st87_fsm_86)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st87_fsm_86)) begin
        dctMatrix_ce0 = ap_const_logic_1;
    end else begin
        dctMatrix_ce0 = ap_const_logic_0;
    end
end

/// e_address0 assign process. ///
always @ (ap_sig_cseq_ST_st25_fsm_24 or tmp_76_reg_994 or ap_sig_cseq_ST_st27_fsm_26 or ap_sig_cseq_ST_st34_fsm_33 or ap_sig_cseq_ST_st35_fsm_34 or e_addr_2_reg_1036 or ap_sig_cseq_ST_st42_fsm_41 or ap_sig_cseq_ST_st44_fsm_43 or e_addr_1_reg_1069 or ap_sig_cseq_ST_st81_fsm_80 or ap_sig_cseq_ST_st79_fsm_78 or tmp_75_fu_638_p1 or tmp_81_fu_739_p1 or tmp_29_i_fu_878_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78)) begin
        e_address0 = e_addr_1_reg_1069;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        e_address0 = e_addr_2_reg_1036;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        e_address0 = tmp_75_fu_638_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80)) begin
        e_address0 = tmp_29_i_fu_878_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        e_address0 = tmp_81_fu_739_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34)) begin
        e_address0 = tmp_76_reg_994;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26) | (ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33))) begin
        e_address0 = ap_const_lv5_0;
    end else begin
        e_address0 = 'bx;
    end
end

/// e_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st25_fsm_24 or ap_sig_cseq_ST_st27_fsm_26 or ap_sig_cseq_ST_st34_fsm_33 or ap_sig_cseq_ST_st35_fsm_34 or ap_sig_cseq_ST_st42_fsm_41 or ap_sig_cseq_ST_st44_fsm_43 or ap_sig_cseq_ST_st81_fsm_80 or ap_sig_cseq_ST_st79_fsm_78)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24) | (ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26) | (ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33) | (ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34) | (ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) | (ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43) | (ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80) | (ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78))) begin
        e_ce0 = ap_const_logic_1;
    end else begin
        e_ce0 = ap_const_logic_0;
    end
end

/// e_d0 assign process. ///
always @ (reg_495 or ap_sig_cseq_ST_st25_fsm_24 or ap_sig_cseq_ST_st34_fsm_33 or tmp_87_reg_1041 or ap_sig_cseq_ST_st42_fsm_41 or ap_sig_cseq_ST_st79_fsm_78 or storemerge_reg_363)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78)) begin
        e_d0 = storemerge_reg_363;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        e_d0 = tmp_87_reg_1041;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        e_d0 = reg_495;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        e_d0 = ap_const_lv64_0;
    end else begin
        e_d0 = 'bx;
    end
end

/// e_we0 assign process. ///
always @ (ap_sig_cseq_ST_st25_fsm_24 or tmp_77_reg_1009 or tmp_80_reg_1018 or ap_sig_cseq_ST_st34_fsm_33 or tmp_84_reg_1027 or ap_sig_cseq_ST_st42_fsm_41 or exitcond1_fu_626_p2 or ap_sig_cseq_ST_st79_fsm_78)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24) & (ap_const_lv1_0 == exitcond1_fu_626_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78) | ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33) & ~(ap_const_lv1_0 == tmp_77_reg_1009)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) & ~(ap_const_lv1_0 == tmp_80_reg_1018) & (ap_const_lv1_0 == tmp_84_reg_1027)))) begin
        e_we0 = ap_const_logic_1;
    end else begin
        e_we0 = ap_const_logic_0;
    end
end

/// grp_fu_432_opcode assign process. ///
always @ (ap_sig_cseq_ST_st48_fsm_47 or ap_sig_cseq_ST_st58_fsm_57 or ap_sig_cseq_ST_st63_fsm_62 or ap_sig_cseq_ST_st69_fsm_68)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st63_fsm_62) | (ap_const_logic_1 == ap_sig_cseq_ST_st69_fsm_68))) begin
        grp_fu_432_opcode = ap_const_lv2_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_57))) begin
        grp_fu_432_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_432_opcode = 'bx;
    end
end

/// grp_fu_432_p0 assign process. ///
always @ (reg_521 or reg_528 or ap_sig_cseq_ST_st48_fsm_47 or tmp_2_i_i_fu_825_p1 or ap_sig_cseq_ST_st58_fsm_57 or ap_sig_cseq_ST_st63_fsm_62 or ap_sig_cseq_ST_st69_fsm_68)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st63_fsm_62) | (ap_const_logic_1 == ap_sig_cseq_ST_st69_fsm_68))) begin
        grp_fu_432_p0 = reg_528;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_57)) begin
        grp_fu_432_p0 = reg_521;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        grp_fu_432_p0 = tmp_2_i_i_fu_825_p1;
    end else begin
        grp_fu_432_p0 = 'bx;
    end
end

/// grp_fu_432_p1 assign process. ///
always @ (reg_521 or ap_sig_cseq_ST_st48_fsm_47 or tmp_6_i_i_reg_1108 or ap_sig_cseq_ST_st58_fsm_57 or ap_sig_cseq_ST_st63_fsm_62 or ap_sig_cseq_ST_st69_fsm_68)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st69_fsm_68)) begin
        grp_fu_432_p1 = tmp_6_i_i_reg_1108;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st63_fsm_62)) begin
        grp_fu_432_p1 = reg_521;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_57)) begin
        grp_fu_432_p1 = ap_const_lv32_C2F87377;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        grp_fu_432_p1 = ap_const_lv32_3EB444F9;
    end else begin
        grp_fu_432_p1 = 'bx;
    end
end

/// grp_fu_438_p0 assign process. ///
always @ (reg_515 or tmp_2_i_i_reg_1097 or y_reg_1103 or ap_sig_cseq_ST_st54_fsm_53 or ap_sig_cseq_ST_st59_fsm_58 or ap_sig_cseq_ST_st74_fsm_73)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st74_fsm_73)) begin
        grp_fu_438_p0 = reg_515;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st59_fsm_58)) begin
        grp_fu_438_p0 = tmp_2_i_i_reg_1097;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_53)) begin
        grp_fu_438_p0 = y_reg_1103;
    end else begin
        grp_fu_438_p0 = 'bx;
    end
end

/// grp_fu_438_p1 assign process. ///
always @ (ap_sig_cseq_ST_st54_fsm_53 or ap_sig_cseq_ST_st59_fsm_58 or ap_sig_cseq_ST_st74_fsm_73)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st74_fsm_73)) begin
        grp_fu_438_p1 = ap_const_lv32_3F317218;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st59_fsm_58)) begin
        grp_fu_438_p1 = ap_const_lv32_3FBFBF75;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_53)) begin
        grp_fu_438_p1 = ap_const_lv32_34000000;
    end else begin
        grp_fu_438_p1 = 'bx;
    end
end

/// grp_fu_459_p0 assign process. ///
always @ (reg_486 or reg_507 or sum_i_reg_398 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st37_fsm_36 or ap_sig_cseq_ST_st95_fsm_94)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st95_fsm_94)) begin
        grp_fu_459_p0 = sum_i_reg_398;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) | (ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36))) begin
        grp_fu_459_p0 = reg_507;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        grp_fu_459_p0 = reg_486;
    end else begin
        grp_fu_459_p0 = 'bx;
    end
end

/// grp_fu_459_p1 assign process. ///
always @ (reg_486 or reg_502 or tmp_70_reg_967 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st37_fsm_36 or ap_sig_cseq_ST_st95_fsm_94)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st95_fsm_94)) begin
        grp_fu_459_p1 = reg_486;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) | (ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36))) begin
        grp_fu_459_p1 = reg_502;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        grp_fu_459_p1 = tmp_70_reg_967;
    end else begin
        grp_fu_459_p1 = 'bx;
    end
end

/// grp_fu_464_p0 assign process. ///
always @ (reg_486 or reg_495 or c_load_reg_955 or s_reg_1131 or ap_sig_cseq_ST_st81_fsm_80 or sum_i_reg_398 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st18_fsm_17 or ap_sig_cseq_ST_st83_fsm_82 or ap_sig_cseq_ST_st89_fsm_88)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st89_fsm_88)) begin
        grp_fu_464_p0 = reg_486;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st83_fsm_82)) begin
        grp_fu_464_p0 = s_reg_1131;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80)) begin
        grp_fu_464_p0 = sum_i_reg_398;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        grp_fu_464_p0 = reg_495;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_fu_464_p0 = c_load_reg_955;
    end else begin
        grp_fu_464_p0 = 'bx;
    end
end

/// grp_fu_464_p1 assign process. ///
always @ (reg_507 or c_load_reg_955 or ap_sig_cseq_ST_st81_fsm_80 or dctMatrix_load_reg_1169 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st18_fsm_17 or ap_sig_cseq_ST_st83_fsm_82 or ap_sig_cseq_ST_st89_fsm_88)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st89_fsm_88)) begin
        grp_fu_464_p1 = dctMatrix_load_reg_1169;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st83_fsm_82)) begin
        grp_fu_464_p1 = reg_507;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80)) begin
        grp_fu_464_p1 = ap_const_lv64_3FD1C01AA03BE89E;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        grp_fu_464_p1 = ap_const_lv64_3F70000000000000;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_fu_464_p1 = c_load_reg_955;
    end else begin
        grp_fu_464_p1 = 'bx;
    end
end

/// inputSound_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        inputSound_ce0 = ap_const_logic_1;
    end else begin
        inputSound_ce0 = ap_const_logic_0;
    end
end

/// mell_address0 assign process. ///
always @ (ap_sig_cseq_ST_st26_fsm_25 or tmp_76_fu_658_p1 or ap_sig_cseq_ST_st34_fsm_33 or ap_sig_cseq_ST_st42_fsm_41 or tmp_83_fu_686_p1 or tmp_88_fu_706_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        mell_address0 = tmp_88_fu_706_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        mell_address0 = tmp_83_fu_686_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        mell_address0 = tmp_76_fu_658_p1;
    end else begin
        mell_address0 = 'bx;
    end
end

/// mell_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st26_fsm_25 or ap_sig_cseq_ST_st34_fsm_33 or ap_sig_cseq_ST_st42_fsm_41)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25) | (ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33) | (ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41))) begin
        mell_ce0 = ap_const_logic_1;
    end else begin
        mell_ce0 = ap_const_logic_0;
    end
end

/// ret_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st105_fsm_104)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st105_fsm_104)) begin
        ret_ce0 = ap_const_logic_1;
    end else begin
        ret_ce0 = ap_const_logic_0;
    end
end

/// ret_we0 assign process. ///
always @ (ap_sig_cseq_ST_st105_fsm_104)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st105_fsm_104)) begin
        ret_we0 = ap_const_logic_1;
    end else begin
        ret_we0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or tmp_fu_537_p2 or tmp_64_fu_586_p2 or tmp_74_fu_647_p2 or tmp_77_fu_671_p2 or tmp_80_fu_681_p2 or tmp_84_fu_695_p2 or exitcond_fu_727_p2 or tmp_48_fu_796_p2 or exitcond3_i_fu_836_p2 or exitcond_i_fu_866_p2 or grp_voicerec_FFT_fu_421_ap_done or exitcond1_fu_626_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((tmp_fu_537_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st4_fsm_3 : 
        begin
            if (~(ap_const_logic_0 == grp_voicerec_FFT_fu_421_ap_done)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st5_fsm_4 : 
        begin
            if ((ap_const_lv1_0 == tmp_64_fu_586_p2)) begin
                ap_NS_fsm = ap_ST_st25_fsm_24;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st25_fsm_24 : 
        begin
            if ((ap_const_lv1_0 == exitcond1_fu_626_p2)) begin
                ap_NS_fsm = ap_ST_st25_fsm_24;
            end else begin
                ap_NS_fsm = ap_ST_st26_fsm_25;
            end
        end
        ap_ST_st26_fsm_25 : 
        begin
            if ((ap_const_lv1_0 == tmp_74_fu_647_p2)) begin
                ap_NS_fsm = ap_ST_st44_fsm_43;
            end else begin
                ap_NS_fsm = ap_ST_st27_fsm_26;
            end
        end
        ap_ST_st27_fsm_26 : 
        begin
            if ((ap_const_lv1_0 == tmp_77_fu_671_p2)) begin
                ap_NS_fsm = ap_ST_st34_fsm_33;
            end else begin
                ap_NS_fsm = ap_ST_st28_fsm_27;
            end
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            if ((ap_const_lv1_0 == tmp_80_fu_681_p2)) begin
                ap_NS_fsm = ap_ST_st42_fsm_41;
            end else begin
                ap_NS_fsm = ap_ST_st35_fsm_34;
            end
        end
        ap_ST_st35_fsm_34 : 
        begin
            if (~(ap_const_lv1_0 == tmp_84_fu_695_p2)) begin
                ap_NS_fsm = ap_ST_st42_fsm_41;
            end else begin
                ap_NS_fsm = ap_ST_st36_fsm_35;
            end
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st44_fsm_43 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_fu_727_p2)) begin
                ap_NS_fsm = ap_ST_st80_fsm_79;
            end else begin
                ap_NS_fsm = ap_ST_st45_fsm_44;
            end
        end
        ap_ST_st45_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : 
        begin
            if (~(ap_const_lv1_0 == tmp_48_fu_796_p2)) begin
                ap_NS_fsm = ap_ST_st79_fsm_78;
            end else begin
                ap_NS_fsm = ap_ST_st48_fsm_47;
            end
        end
        ap_ST_st48_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : 
        begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : 
        begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : 
        begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : 
        begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : 
        begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : 
        begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : 
        begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : 
        begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : 
        begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : 
        begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : 
        begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : 
        begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : 
        begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : 
        begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : 
        begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st66_fsm_65 : 
        begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : 
        begin
            ap_NS_fsm = ap_ST_st68_fsm_67;
        end
        ap_ST_st68_fsm_67 : 
        begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : 
        begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st70_fsm_69 : 
        begin
            ap_NS_fsm = ap_ST_st71_fsm_70;
        end
        ap_ST_st71_fsm_70 : 
        begin
            ap_NS_fsm = ap_ST_st72_fsm_71;
        end
        ap_ST_st72_fsm_71 : 
        begin
            ap_NS_fsm = ap_ST_st73_fsm_72;
        end
        ap_ST_st73_fsm_72 : 
        begin
            ap_NS_fsm = ap_ST_st74_fsm_73;
        end
        ap_ST_st74_fsm_73 : 
        begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : 
        begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st76_fsm_75 : 
        begin
            ap_NS_fsm = ap_ST_st77_fsm_76;
        end
        ap_ST_st77_fsm_76 : 
        begin
            ap_NS_fsm = ap_ST_st78_fsm_77;
        end
        ap_ST_st78_fsm_77 : 
        begin
            ap_NS_fsm = ap_ST_st79_fsm_78;
        end
        ap_ST_st79_fsm_78 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st80_fsm_79 : 
        begin
            if (~(ap_const_lv1_0 == exitcond3_i_fu_836_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st81_fsm_80;
            end
        end
        ap_ST_st81_fsm_80 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_i_fu_866_p2)) begin
                ap_NS_fsm = ap_ST_st100_fsm_99;
            end else begin
                ap_NS_fsm = ap_ST_st82_fsm_81;
            end
        end
        ap_ST_st82_fsm_81 : 
        begin
            ap_NS_fsm = ap_ST_st83_fsm_82;
        end
        ap_ST_st83_fsm_82 : 
        begin
            ap_NS_fsm = ap_ST_st84_fsm_83;
        end
        ap_ST_st84_fsm_83 : 
        begin
            ap_NS_fsm = ap_ST_st85_fsm_84;
        end
        ap_ST_st85_fsm_84 : 
        begin
            ap_NS_fsm = ap_ST_st86_fsm_85;
        end
        ap_ST_st86_fsm_85 : 
        begin
            ap_NS_fsm = ap_ST_st87_fsm_86;
        end
        ap_ST_st87_fsm_86 : 
        begin
            ap_NS_fsm = ap_ST_st88_fsm_87;
        end
        ap_ST_st88_fsm_87 : 
        begin
            ap_NS_fsm = ap_ST_st89_fsm_88;
        end
        ap_ST_st89_fsm_88 : 
        begin
            ap_NS_fsm = ap_ST_st90_fsm_89;
        end
        ap_ST_st90_fsm_89 : 
        begin
            ap_NS_fsm = ap_ST_st91_fsm_90;
        end
        ap_ST_st91_fsm_90 : 
        begin
            ap_NS_fsm = ap_ST_st92_fsm_91;
        end
        ap_ST_st92_fsm_91 : 
        begin
            ap_NS_fsm = ap_ST_st93_fsm_92;
        end
        ap_ST_st93_fsm_92 : 
        begin
            ap_NS_fsm = ap_ST_st94_fsm_93;
        end
        ap_ST_st94_fsm_93 : 
        begin
            ap_NS_fsm = ap_ST_st95_fsm_94;
        end
        ap_ST_st95_fsm_94 : 
        begin
            ap_NS_fsm = ap_ST_st96_fsm_95;
        end
        ap_ST_st96_fsm_95 : 
        begin
            ap_NS_fsm = ap_ST_st97_fsm_96;
        end
        ap_ST_st97_fsm_96 : 
        begin
            ap_NS_fsm = ap_ST_st98_fsm_97;
        end
        ap_ST_st98_fsm_97 : 
        begin
            ap_NS_fsm = ap_ST_st99_fsm_98;
        end
        ap_ST_st99_fsm_98 : 
        begin
            ap_NS_fsm = ap_ST_st81_fsm_80;
        end
        ap_ST_st100_fsm_99 : 
        begin
            ap_NS_fsm = ap_ST_st101_fsm_100;
        end
        ap_ST_st101_fsm_100 : 
        begin
            ap_NS_fsm = ap_ST_st102_fsm_101;
        end
        ap_ST_st102_fsm_101 : 
        begin
            ap_NS_fsm = ap_ST_st103_fsm_102;
        end
        ap_ST_st103_fsm_102 : 
        begin
            ap_NS_fsm = ap_ST_st104_fsm_103;
        end
        ap_ST_st104_fsm_103 : 
        begin
            ap_NS_fsm = ap_ST_st105_fsm_104;
        end
        ap_ST_st105_fsm_104 : 
        begin
            ap_NS_fsm = ap_ST_st80_fsm_79;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_123 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_123 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_200 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_200 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end

/// ap_sig_bdd_207 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_207 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_16]);
end

/// ap_sig_bdd_215 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_215 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_57]);
end

/// ap_sig_bdd_223 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_223 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5D]);
end

/// ap_sig_bdd_231 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_231 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_67]);
end

/// ap_sig_bdd_241 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_241 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end

/// ap_sig_bdd_248 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_248 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_20]);
end

/// ap_sig_bdd_256 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_256 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_62]);
end

/// ap_sig_bdd_265 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_265 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1B]);
end

/// ap_sig_bdd_272 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_272 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_23]);
end

/// ap_sig_bdd_281 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_281 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2C]);
end

/// ap_sig_bdd_289 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_289 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_51]);
end

/// ap_sig_bdd_299 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_299 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_33]);
end

/// ap_sig_bdd_306 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_306 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_48]);
end

/// ap_sig_bdd_316 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_316 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_38]);
end

/// ap_sig_bdd_323 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_323 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3D]);
end

/// ap_sig_bdd_331 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_331 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4C]);
end

/// ap_sig_bdd_340 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_340 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_42]);
end

/// ap_sig_bdd_359 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_359 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_375 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_375 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_391 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_391 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_403 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_403 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_18]);
end

/// ap_sig_bdd_412 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_412 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_19]);
end

/// ap_sig_bdd_431 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_431 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end

/// ap_sig_bdd_447 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_447 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_21]);
end

/// ap_sig_bdd_461 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_461 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_22]);
end

/// ap_sig_bdd_475 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_475 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_28]);
end

/// ap_sig_bdd_484 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_484 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_29]);
end

/// ap_sig_bdd_495 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_495 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2A]);
end

/// ap_sig_bdd_504 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_504 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2B]);
end

/// ap_sig_bdd_522 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_522 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2D]);
end

/// ap_sig_bdd_531 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_531 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2E]);
end

/// ap_sig_bdd_543 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_543 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2F]);
end

/// ap_sig_bdd_554 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_554 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_34]);
end

/// ap_sig_bdd_563 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_563 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_43]);
end

/// ap_sig_bdd_572 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_572 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4D]);
end

/// ap_sig_bdd_581 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_581 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4F]);
end

/// ap_sig_bdd_599 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_599 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_50]);
end

/// ap_sig_bdd_619 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_619 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_56]);
end

/// ap_sig_bdd_647 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_647 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_656 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_656 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_666 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_666 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end

/// ap_sig_bdd_688 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_688 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4E]);
end

/// ap_sig_bdd_703 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_703 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_68]);
end

/// ap_sig_bdd_787 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_787 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_39]);
end

/// ap_sig_bdd_794 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_794 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3E]);
end

/// ap_sig_bdd_801 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_801 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_44]);
end

/// ap_sig_bdd_814 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_814 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_35]);
end

/// ap_sig_bdd_821 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_821 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3A]);
end

/// ap_sig_bdd_828 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_828 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_49]);
end

/// ap_sig_bdd_843 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_843 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end

/// ap_sig_bdd_850 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_850 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1C]);
end

/// ap_sig_bdd_857 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_857 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_24]);
end

/// ap_sig_bdd_865 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_865 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5E]);
end

/// ap_sig_bdd_876 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_876 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_883 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_883 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end

/// ap_sig_bdd_890 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_890 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_52]);
end

/// ap_sig_bdd_897 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_897 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_58]);
end
assign d_d0 = reg_486;
assign dctMatrix_addr4_fu_887_p2 = (tmp_29_i_trn_cast_fu_883_p1 + phi_mul_reg_386);
assign dctMatrix_address0 = tmp_56_fu_897_p1;
assign e_load_1_to_int_fu_760_p1 = reg_507;
assign exitcond1_fu_626_p2 = (i_2_reg_317 == ap_const_lv5_1A? 1'b1: 1'b0);
assign exitcond3_i_fu_836_p2 = (k_i_reg_375 == ap_const_lv4_E? 1'b1: 1'b0);
assign exitcond_fu_727_p2 = (i_4_reg_352 == ap_const_lv5_1A? 1'b1: 1'b0);
assign exitcond_i_fu_866_p2 = (n_i_reg_410 == ap_const_lv5_1A? 1'b1: 1'b0);
assign grp_fu_432_ce = ap_const_logic_1;
assign grp_fu_438_ce = ap_const_logic_1;
assign grp_fu_445_ce = ap_const_logic_1;
assign grp_fu_445_p0 = ap_const_lv32_3FDCE9A3;
assign grp_fu_445_p1 = reg_515;
assign grp_fu_450_ce = ap_const_logic_1;
assign grp_fu_450_p0 = tmp_i_i_fu_801_p1;
assign grp_fu_459_ce = ap_const_logic_1;
assign grp_fu_464_ce = ap_const_logic_1;
assign grp_fu_468_ce = ap_const_logic_1;
assign grp_fu_468_p0 = c_load_6_reg_961;
assign grp_fu_468_p1 = c_load_6_reg_961;
assign grp_fu_480_p2 = (mellIdx_reg_340 + ap_const_lv32_1);
assign grp_voicerec_FFT_fu_421_N = np;
assign grp_voicerec_FFT_fu_421_ap_start = grp_voicerec_FFT_fu_421_ap_start_ap_start_reg;
assign grp_voicerec_FFT_fu_421_c_q0 = c_q0;
assign grp_voicerec_FFT_fu_421_c_q1 = c_q1;
assign i_1_cast_fu_582_p1 = i_1_reg_305;
assign i_3_cast_fu_643_p1 = i_3_reg_328;
assign i_5_fu_542_p2 = (i_reg_293 + ap_const_lv31_1);
assign i_6_fu_591_p2 = (i_1_reg_305 + ap_const_lv31_1);
assign i_7_fu_632_p2 = (i_2_reg_317 + ap_const_lv5_1);
assign i_8_fu_733_p2 = (i_4_reg_352 + ap_const_lv5_1);
assign i_9_fu_652_p2 = (i_3_reg_328 + ap_const_lv31_1);
assign i_cast_fu_533_p1 = i_reg_293;
assign inputSound_address0 = tmp_59_fu_553_p1;
assign k_fu_842_p2 = (k_i_reg_375 + ap_const_lv4_1);
assign mell_load_1_cast_cast_fu_691_p1 = mell_q0;
assign mell_load_2_cast_fu_711_p1 = mell_q0;
assign mell_load_cast_cast_fu_667_p1 = mell_q0;
assign mell_load_cast_fu_663_p1 = mell_q0;
assign mx_i_i_cast_fu_816_p1 = mx_i_i_fu_808_p3;
assign mx_i_i_fu_808_p3 = {{ap_const_lv7_7E}, {tmp_36_fu_804_p1}};
assign n_fu_872_p2 = (n_i_reg_410 + ap_const_lv5_1);
assign next_mul_fu_830_p2 = (phi_mul_reg_386 + ap_const_lv9_1A);
assign notlhs_fu_778_p2 = (tmp_44_fu_764_p4 != ap_const_lv11_7FF? 1'b1: 1'b0);
assign notrhs_fu_784_p2 = (tmp_35_fu_774_p1 == ap_const_lv52_0? 1'b1: 1'b0);
assign p_addr1_fu_893_p2 = (tmp_27_i_trn2_reg_1136 + p_addr_reg_1074);
assign p_addr_fu_754_p2 = (tmp_33_fu_744_p2 - tmp_34_fu_749_p2);
assign p_mellIdx_fu_720_p3 = ((tmp_89_fu_715_p2[0:0]===1'b1)? mellIdx_1_reg_1046: mellIdx_reg_340);
assign ret_address0 = tmp_55_fu_901_p1;
assign ret_d0 = reg_486;
assign s_fu_854_p3 = ((tmp_i1_fu_848_p2[0:0]===1'b1)? ap_const_lv64_3FE6A09E667F3BD1: ap_const_lv64_3FF0000000000000);
assign tmp_27_i_trn2_fu_862_p1 = k_i_reg_375;
assign tmp_29_i_fu_878_p1 = n_i_reg_410;
assign tmp_29_i_trn_cast_fu_883_p1 = n_i_reg_410;
assign tmp_2_i_i_fu_825_p1 = mx_i_i_cast_fu_816_p1;
assign tmp_33_fu_744_p2 = tmp_122 << ap_const_lv32_4;
assign tmp_34_fu_749_p2 = tmp_122 << ap_const_lv32_1;
assign tmp_35_fu_774_p1 = e_load_1_to_int_fu_760_p1[51:0];
assign tmp_36_fu_804_p1 = tmp_i_i_fu_801_p1[22:0];
assign tmp_44_fu_764_p4 = {{e_load_1_to_int_fu_760_p1[ap_const_lv32_3E : ap_const_lv32_34]}};
assign tmp_46_fu_790_p2 = (notrhs_fu_784_p2 | notlhs_fu_778_p2);
assign tmp_47_fu_475_opcode = ap_const_lv5_5;
assign tmp_47_fu_475_p0 = reg_507;
assign tmp_47_fu_475_p1 = ap_const_lv64_0;
assign tmp_48_fu_796_p2 = (tmp_46_fu_790_p2 & tmp_47_reg_1079);
assign tmp_55_fu_901_p1 = $signed(p_addr1_reg_1159);
assign tmp_56_fu_897_p1 = dctMatrix_addr4_reg_1154;
assign tmp_59_fu_553_p1 = $signed(tmp_s_fu_548_p2);
assign tmp_60_fu_558_p3 = {{i_reg_293}, {ap_const_lv1_0}};
assign tmp_61_fu_566_p1 = $signed(tmp_60_fu_558_p3);
assign tmp_62_fu_571_p2 = (tmp_60_fu_558_p3 | ap_const_lv32_1);
assign tmp_63_fu_577_p1 = $signed(tmp_62_fu_571_p2);
assign tmp_64_fu_586_p2 = ($signed(i_1_cast_fu_582_p1) < $signed(np)? 1'b1: 1'b0);
assign tmp_65_fu_597_p3 = {{i_1_reg_305}, {ap_const_lv1_0}};
assign tmp_66_fu_605_p1 = $signed(tmp_65_fu_597_p3);
assign tmp_68_fu_610_p2 = (tmp_65_fu_597_p3 | ap_const_lv32_1);
assign tmp_69_fu_616_p1 = $signed(tmp_68_fu_610_p2);
assign tmp_73_fu_621_p1 = i_1_reg_305;
assign tmp_74_fu_647_p2 = ($signed(i_3_cast_fu_643_p1) < $signed(np)? 1'b1: 1'b0);
assign tmp_75_fu_638_p1 = i_2_reg_317;
assign tmp_76_fu_658_p1 = $signed(mellIdx_reg_340);
assign tmp_77_fu_671_p2 = (i_3_cast_reg_980 == mell_load_cast_fu_663_p1? 1'b1: 1'b0);
assign tmp_78_fu_676_p1 = i_3_reg_328;
assign tmp_80_fu_681_p2 = (i_3_reg_328 > mell_load_cast_cast_reg_1004? 1'b1: 1'b0);
assign tmp_81_fu_739_p1 = i_4_reg_352;
assign tmp_83_fu_686_p1 = $signed(grp_fu_480_p2);
assign tmp_84_fu_695_p2 = (i_3_reg_328 > mell_load_1_cast_cast_fu_691_p1? 1'b1: 1'b0);
assign tmp_85_fu_456_p0 = reg_521;
assign tmp_86_fu_701_p1 = i_3_reg_328;
assign tmp_88_fu_706_p1 = $signed(grp_fu_480_p2);
assign tmp_89_fu_715_p2 = (i_3_cast_reg_980 == mell_load_2_cast_fu_711_p1? 1'b1: 1'b0);
assign tmp_fu_537_p2 = ($signed(i_cast_fu_533_p1) < $signed(np)? 1'b1: 1'b0);
assign tmp_i1_fu_848_p2 = (k_i_reg_375 == ap_const_lv4_0? 1'b1: 1'b0);
assign tmp_i_i_fu_801_p1 = x_assign_reg_1087;
assign tmp_s_fu_548_p2 = (i_cast_fu_533_p1 + sp);
assign x_assign_fu_453_p0 = reg_507;
always @ (posedge ap_clk)
begin
    i_3_cast_reg_980[31] <= 1'b0;
    mell_load_cast_cast_reg_1004[30:8] <= 23'b00000000000000000000000;
    p_addr_reg_1074[0] <= 1'b0;
    tmp_2_i_i_reg_1097[31:23] <= 9'b001111110;
    s_reg_1131[3:1] <= 3'b000;
    s_reg_1131[5:5] <= 1'b0;
    s_reg_1131[10:10] <= 1'b0;
    s_reg_1131[15:14] <= 2'b00;
    s_reg_1131[24:23] <= 2'b00;
    s_reg_1131[28:27] <= 2'b00;
    s_reg_1131[32:31] <= 2'b00;
    s_reg_1131[38:37] <= 2'b00;
    s_reg_1131[44:40] <= 5'b00000;
    s_reg_1131[46:46] <= 1'b0;
    s_reg_1131[48:48] <= 1'b0;
    s_reg_1131[51:51] <= 1'b0;
    s_reg_1131[63:53] <= 11'b00111111111;
    tmp_27_i_trn2_reg_1136[31:4] <= 28'b0000000000000000000000000000;
end



endmodule //voicerec_processChunk

