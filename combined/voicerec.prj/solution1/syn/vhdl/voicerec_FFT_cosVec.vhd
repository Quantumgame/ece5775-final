-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.2
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity voicerec_FFT_cosVec_rom is 
    generic(
             dwidth     : integer := 64; 
             awidth     : integer := 8; 
             mem_size    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of voicerec_FFT_cosVec_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 => "0011111111110000000000000000000000000000000000000000000000000000", 
    1 => "1011111111110000000000000000000000000000000000000000000000000000", 
    2 => "1011111111100000000000000000000000000000000000000000000000000000", 
    3 => "0011110010010001101001100001111111000111001001011000010110111100", 
    4 => "0011111111010011110001101111101111010010011100111101010110111011", 
    5 => "0011111111100000000000000000000000000000000000000000000000000000", 
    6 => "0011111111100011111100111010000101001100111011000100000111011101", 
    7 => "0011111111100110101000001010010100100110100101011001010111111111", 
    8 => "0011111111101000100000110110011001010001011011011011000011011110", 
    9 => "0011111111101001111000110111110111101001001110011110101011011101", 
    10 => "0011111111101010111010111000010100011110101110000101000111101100", 
    11 => "0011111111101011101101101000010010001011111010110101101100101101", 
    12 => "0011111111101100010101011011000000110101101111010101000100101111", 
    13 => "0011111111101100110101001011111100001001100101011010101011111000", 
    14 => "0011111111101101001110111100110100110101101010000101100001111001", 
    15 => "0011111111101101100100000110110011001010001011011011011000011100", 
    16 => "0011111111101101110101101100101101010011010100000000100100101101", 
    17 => "0011111111101110000100011111000011000011010011000001101010001011", 
    18 => "0011111111101110010001000010100001001101111111001110001100010101", 
    19 => "0011111111101110011011110001010101100001100100010001010010010000", 
    20 => "0011111111101110100101000000011110001001011000010011110100110010", 
    21 => "0011111111101110101101000010010001011111010110101101100101101010", 
    22 => "0011111111101110110100000011110110011010100101010100001000011100", 
    23 => "0011111111101110111010001110011000001000000001110011010101111110", 
    24 => "0011111111101110111111101001101101111011111100011110100011100110", 
    25 => "0011111111101111000100011111000011000011010011000001101010001011", 
    26 => "0011111111101111001000110010010011001000001101100110010100010111", 
    27 => "0011111111101111001100101010000001100110001111000111010011111011", 
    28 => "0011111111101111010000000111100010010110000100111101001100011100", 
    29 => "0011111111101111010011010000000100111010100100101010001100000101", 
    30 => "0011111111101111010110000100111101001100011011100110110110011100", 
    31 => "0011111111101111011000101010000110110101110001111100110110001010", 
    32 => "0011111111101111011010111111100001110110100111101100001011001110", 
    33 => "0011111111101111011101000111110110000000010111100101111100110001", 
    34 => "0011111111101111011111000101101011000100011100011011010001111000", 
    35 => "0011111111101111100000111001000001000010110110001100001010100100", 
    36 => "0011111111101111100010100011001011110100010010010001001010011001", 
    37 => "0011111111101111100100000100001011011000110000101010010001010101", 
    38 => "0011111111101111100101011110100111100001101100001000100110100000", 
    39 => "0011111111101111100110110010100000001111000100101100001001111010", 
    40 => "0011111111101111100111111111110101100000111010010100111011100100", 
    41 => "0011111111101111101001000111111011001111111010011011011110111111", 
    42 => "0011111111101111101010001010110001011100000100111111110100001101", 
    43 => "0011111111101111101011001001101011111110000111011010011110110001", 
    44 => "0011111111101111101100000100101010110110000001101011011110101010", 
    45 => "0011111111101111101100111011101110000011110011110010110011111001", 
    46 => "0011111111101111101101101110110101100111011101110000011110011110", 
    47 => "0011111111101111101110011110000001100000111111100100011110011001", 
    48 => "0011111111101111101111001011111001100001110011111111111010110000", 
    49 => "0011111111101111101111110101110101111000100000010001101100011110", 
    50 => "0011111111101111110000011110011110010110011111001010111010100111", 
    51 => "0011111111101111110001000100011111000011000011010011000001101010", 
    52 => "0011111111101111110001100111110111111110001100101010000001100110", 
    53 => "0011111111101111110010001001111101000000101000101000011101111111", 
    54 => "0011111111101111110010101001011010010001101001110101110011010001", 
    55 => "0011111111101111110011000111100011101001111101101010100100111111", 
    56 => "0011111111101111110011100100011001001001100100000110110011001010", 
    57 => "0011111111101111110011111111111010110000011101001010011101110010", 
    58 => "0011111111101111110100011000110100100101111011011101000001010011", 
    59 => "0011111111101111110100110001101110011011011001101111100100110011", 
    60 => "0011111111101111110101001001010100011000001010101001100100110001", 
    61 => "0011111111101111110101011111100110011100001110001011000001001011", 
    62 => "0011111111101111110101110100100100100111100100010011111010000001", 
    63 => "0011111111101111110110001000001110111010001101000100001111010100", 
    64 => "0011111111101111110110011011111001001100110101110100100100101000", 
    65 => "0011111111101111110110101110001111100110110001001100010110010111", 
    66 => "0011111111101111110111000000100110000000101100100100001000000111", 
    67 => "0011111111101111110111010000010100101001001101001010110010110000", 
    68 => "0011111111101111110111100001010111001010011011001010000000111100", 
    69 => "0011111111101111110111101111110001111010001110011000001000000010", 
    70 => "0011111111101111110111111111100000100010101110111110110010101011", 
    71 => "0011111111101111111000001100100111011001110100110100010110001101", 
    72 => "0011111111101111111000011011000010001001101000000010011101010010", 
    73 => "0011111111101111111000101000001001000000101101111000000000110100", 
    74 => "0011111111101111111000110011111011111111000110010101000000110011", 
    75 => "0011111111101111111000111111101110111101011110110010000000110010", 
    76 => "0011111111101111111001001011100001111011110111001111000000110000", 
    77 => "0011111111101111111001010111010100111010001111101100000000101111", 
    78 => "0011111111101111111001100001110011111111111010110000011101001010", 
    79 => "0011111111101111111001101100010011000101100101110100111001100110", 
    80 => "0011111111101111111001110101011110010010100011100000110010011110", 
    81 => "0011111111101111111001111111111101011000001110100101001110111001", 
    82 => "0011111111101111111010001001001000100101001100010001000111110001", 
    83 => "0011111111101111111010010000111111111001011100100100011101000101", 
    84 => "0011111111101111111010011010001011000110011010010000010101111101", 
    85 => "0011111111101111111010100010000010011010101010100011101011010010", 
    86 => "0011111111101111111010101001111001101110111010110111000000100110", 
    87 => "0011111111101111111010110001110001000011001011001010010101111010", 
    88 => "0011111111101111111010111001101000010111011011011101101011001111", 
    89 => "0011111111101111111011000000001011110010111110011000011101000000", 
    90 => "0011111111101111111011001000000011000111001110101011110010010100", 
    91 => "0011111111101111111011001110100110100010110001100110100100000101", 
    92 => "0011111111101111111011010101001001111110010100100001010101110111", 
    93 => "0011111111101111111011011011101101011001110111011100000111101000", 
    94 => "0011111111101111111011100000111100111100101100111110010101110101", 
    95 => "0011111111101111111011100111100000011000001111111001000111100110", 
    96 => "0011111111101111111011101100101111111011000101011011010101110100", 
    97 => "0011111111101111111011110011010011010110101000010110000111100101", 
    98 => "0011111111101111111011111000100010111001011101111000010101110011", 
    99 => "0011111111101111111011111101110010011100010011011010100100000000", 
    100 => "0011111111101111111100000011000001111111001000111100110010001110", 
    101 => "0011111111101111111100000110111101101001010001000110011100111000", 
    102 => "0011111111101111111100001100001101001100000110101000101011000110", 
    103 => "0011111111101111111100010001011100101110111100001010111001010011", 
    104 => "0011111111101111111100010101011000011001000100010100100011111110", 
    105 => "0011111111101111111100011001010100000011001100011110001110101000", 
    106 => "0011111111101111111100011110100011100110000010000000011100110101", 
    107 => "0011111111101111111100100010011111010000001010001010000111100000", 
    108 => "0011111111101111111100100110011010111010010010010011110010001010", 
    109 => "0011111111101111111100101010010110100100011010011101011100110100", 
    110 => "0011111111101111111100101110010010001110100010100111000111011110", 
    111 => "0011111111101111111100110010001101111000101010110000110010001001", 
    112 => "0011111111101111111100110100110101101010000101100001111001001111", 
    113 => "0011111111101111111100111000110001010100001101101011100011111010", 
    114 => "0011111111101111111100111100101100111110010101110101001110100100", 
    115 => "0011111111101111111100111111010100101111110000100110010101101011", 
    116 => "0011111111101111111101000011010000011001111000110000000000010101", 
    117 => "0011111111101111111101000101111000001011010011100001000111011100", 
    118 => "0011111111101111111101001001110011110101011011101010110010000110", 
    119 => "0011111111101111111101001100011011100110110110011011111001001101", 
    120 => "0011111111101111111101001111000011011000010001001101000000010100", 
    121 => "0011111111101111111101010001101011001001101011111110000111011010", 
    122 => "0011111111101111111101010101100110110011110100000111110010000101", 
    123 => "0011111111101111111101011000001110100101001110111000111001001100", 
    124 => "0011111111101111111101011010110110010110101001101010000000010010", 
    125 => "0011111111101111111101011101011110001000000100011011000111011001", 
    126 => "0011111111101111111101100000000101111001011111001100001110100000", 
    127 => "0011111111101111111101100010101101101010111001111101010101100111", 
    128 => "0011111111101111111101100100000001100011100111010101111001001010", 
    129 => "0011111111101111111101100110101001010101000010000111000000010001", 
    130 => "0011111111101111111101101001010001000110011100111000000111011000", 
    131 => "0011111111101111111101101011111000110111110111101001001110011111", 
    132 => "0011111111101111111101101101001100110000100101000001110010000010", 
    133 => "0011111111101111111101101111110100100001111111110010111001001001", 
    134 => "0011111111101111111101110010011100010011011010100100000000010000", 
    135 => "0011111111101111111101110011110000001100000111111100100011110011", 
    136 => "0011111111101111111101110110010111111101100010101101101010111010", 
    137 => "0011111111101111111101110111101011110110010000000110001110011101", 
    138 => "0011111111101111111101111010010011100111101010110111010101100100", 
    139 => "0011111111101111111101111011100111100000011000001111111001001000", 
    140 => "0011111111101111111101111110001111010001110011000001000000001110", 
    141 => "0011111111101111111101111111100011001010100000011001100011110010", 
    142 => "0011111111101111111110000000110111000011001101110010000111010101", 
    143 => "0011111111101111111110000011011110110100101000100011001110011100", 
    144 => "0011111111101111111110000100110010101101010101111011110001111111", 
    145 => "0011111111101111111110000110000110100110000011010100010101100011", 
    146 => "0011111111101111111110001000101110010111011110000101011100101010", 
    147 => "0011111111101111111110001010000010010000001011011110000000001101", 
    148 => "0011111111101111111110001011010110001000111000110110100011110001", 
    149 => "0011111111101111111110001100101010000001100110001111000111010100", 
    150 => "0011111111101111111110001101111101111010010011100111101010110111", 
    151 => "0011111111101111111110010000100101101011101110011000110001111110", 
    152 => "0011111111101111111110010001111001100100011011110001010101100010", 
    153 => "0011111111101111111110010011001101011101001001001001111001000101", 
    154 => "0011111111101111111110010100100001010101110110100010011100101000", 
    155 => "0011111111101111111110010101110101001110100011111011000000001100", 
    156 => "0011111111101111111110010111001001000111010001010011100011101111", 
    157 => "0011111111101111111110011000011100111111111110101100000111010011", 
    158 => "0011111111101111111110011001110000111000101100000100101010110110", 
    159 => "0011111111101111111110011011000100110001011001011101001110011001", 
    160 => "0011111111101111111110011100011000101010000110110101110001111101", 
    161 => "0011111111101111111110011101101100100010110100001110010101100000", 
    162 => "0011111111101111111110011111000000011011100001100110111001000100", 
    163 => "0011111111101111111110100000010100010100001110111111011100100111", 
    164 to 165=> "0011111111101111111110100001101000001100111100011000000000001010", 
    166 => "0011111111101111111110100010111100000101101001110000100011101110", 
    167 => "0011111111101111111110100100001111111110010111001001000111010001", 
    168 => "0011111111101111111110100101100011110111000100100001101010110101", 
    169 => "0011111111101111111110100110110111101111110001111010001110011000", 
    170 to 171=> "0011111111101111111110101000001011101000011111010010110001111100", 
    172 => "0011111111101111111110101001011111100001001100101011010101011111", 
    173 => "0011111111101111111110101010110011011001111010000011111001000010", 
    174 to 175=> "0011111111101111111110101100000111010010100111011100011100100110", 
    176 => "0011111111101111111110101101011011001011010100110101000000001001", 
    177 to 178=> "0011111111101111111110101110101111000100000010001101100011101101", 
    179 => "0011111111101111111110110000000010111100101111100110000111010000", 
    180 to 181=> "0011111111101111111110110001010110110101011100111110101010110011", 
    182 => "0011111111101111111110110010101010101110001010010111001110010111", 
    183 to 184=> "0011111111101111111110110011111110100110110111101111110001111010", 
    185 => "0011111111101111111110110101010010011111100101001000010101011110", 
    186 to 187=> "0011111111101111111110110110100110011000010010100000111001000001", 
    188 to 189=> "0011111111101111111110110111111010010000111111111001011100100100", 
    190 to 191=> "0011111111101111111110111001001110001001101101010010000000001000", 
    192 => "0011111111101111111110111010100010000010011010101010100011101011", 
    193 to 194=> "0011111111101111111110111011110101111011001000000011000111001111", 
    195 to 196=> "0011111111101111111110111101001001110011110101011011101010110010", 
    197 to 198=> "0011111111101111111110111110011101101100100010110100001110010110", 
    199 to 200=> "0011111111101111111110111111110001100101010000001100110001111001", 
    201 to 202=> "0011111111101111111111000001000101011101111101100101010101011100", 
    203 to 205=> "0011111111101111111111000010011001010110101010111101111001000000", 
    206 to 207=> "0011111111101111111111000011101101001111011000010110011100100011", 
    208 to 209=> "0011111111101111111111000101000001001000000101101111000000000111", 
    210 to 212=> "0011111111101111111111000110010101000000110011000111100011101010", 
    213 to 214=> "0011111111101111111111000111101000111001100000100000000111001101", 
    215 to 217=> "0011111111101111111111001000111100110010001101111000101010110001", 
    218 to 219=> "0011111111101111111111001010010000101010111011010001001110010100", 
    220 to 222=> "0011111111101111111111001011100100100011101000101001110001111000", 
    223 to 225=> "0011111111101111111111001100111000011100010110000010010101011011", 
    226 to 228=> "0011111111101111111111001110001100010101000011011010111000111110", 
    229 to 231=> "0011111111101111111111001111100000001101110000110011011100100010", 
    232 to 234=> "0011111111101111111111010000110100000110011110001100000000000101", 
    235 to 238=> "0011111111101111111111010010000111111111001011100100100011101001", 
    239 to 241=> "0011111111101111111111010011011011110111111000111101000111001100", 
    242 to 245=> "0011111111101111111111010100101111110000100110010101101010101111", 
    246 to 249=> "0011111111101111111111010110000011101001010011101110001110010011", 
    250 to 253=> "0011111111101111111111010111010111100010000001000110110001110110", 
    254 to 255=> "0011111111101111111111011000101011011010101110011111010101011010" );


attribute EQUIVALENT_REGISTER_REMOVAL : string;
begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity voicerec_FFT_cosVec is
    generic (
        DataWidth : INTEGER := 64;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of voicerec_FFT_cosVec is
    component voicerec_FFT_cosVec_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    voicerec_FFT_cosVec_rom_U :  component voicerec_FFT_cosVec_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


