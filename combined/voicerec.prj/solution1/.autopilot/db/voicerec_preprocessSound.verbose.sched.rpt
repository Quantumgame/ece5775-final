

================================================================
== Vivado HLS Report for 'voicerec_preprocessSound'
================================================================
* Date:           Sun Dec  6 14:07:46 2015

* Version:        2015.2 (Build 1266856 on Fri Jun 26 16:57:37 PM 2015)
* Project:        voicerec.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.20|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-------+----------+-----------+-----------+-----------+----------+
        |             |   Latency   | Iteration|  Initiation Interval  |    Trip   |          |
        |  Loop Name  | min |  max  |  Latency |  achieved |   target  |   Count   | Pipelined|
        +-------------+-----+-------+----------+-----------+-----------+-----------+----------+
        |- Loop 1     |    4|  64003|         4|          -|          -| 1 ~ 16000 |    no    |
        |- Loop 2     |    4|  64003|         4|          -|          -| 1 ~ 16000 |    no    |
        |- Loop 3     |    ?|      ?|         ?|          -|          -|          ?|    no    |
        | + Loop 3.1  |    ?|      ?|         1|          -|          -|          ?|    no    |
        |- Loop 4     |    ?|      ?|         3|          -|          -|          ?|    no    |
        +-------------+-----+-------+----------+-----------+-----------+-----------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 16
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (tmp)
	5  / (!tmp)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	2  / (tmp & !tmp_20)
	6  / (!tmp) | (tmp_20)
6 --> 
	7  / (!tmp_47)
	9  / (tmp_47)
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	6  / (!tmp_47 & !tmp_25)
	10  / (tmp_47) | (tmp_25)
10 --> 
	11  / (!tmp_49)
	14  / (tmp_49)
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	13  / (!tmp_50 & !tmp_37 & tmp_55 & tmp_57)
	10  / (tmp_50) | (tmp_37) | (!tmp_55) | (!tmp_57)
14 --> 
	15  / (!demorgan)
15 --> 
	16  / true
16 --> 
	14  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_17 [1/1] 1.57ns
:0  br label %1


 <State 2>: 3.78ns
ST_2: first [1/1] 0.00ns
:0  %first = phi i14 [ 0, %0 ], [ %i_2, %2 ]

ST_2: tmp [1/1] 2.21ns
:1  %tmp = icmp ult i14 %first, -384

ST_2: empty [1/1] 0.00ns
:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 16000, i64 8000)

ST_2: i_2 [1/1] 1.96ns
:3  %i_2 = add i14 %first, 1

ST_2: stg_22 [1/1] 1.57ns
:4  br i1 %tmp, label %2, label %.loopexit2

ST_2: tmp_s [1/1] 0.00ns
:0  %tmp_s = zext i14 %first to i64

ST_2: inSound_addr [1/1] 0.00ns
:1  %inSound_addr = getelementptr [16000 x double]* %inSound, i64 0, i64 %tmp_s

ST_2: inSound_load [2/2] 2.71ns
:2  %inSound_load = load double* %inSound_addr, align 8


 <State 3>: 2.71ns
ST_3: inSound_load [1/2] 2.71ns
:2  %inSound_load = load double* %inSound_addr, align 8


 <State 4>: 8.20ns
ST_4: inSound_load_to_int [1/1] 0.00ns
:3  %inSound_load_to_int = bitcast double %inSound_load to i64

ST_4: tmp_16 [1/1] 0.00ns
:4  %tmp_16 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %inSound_load_to_int, i32 52, i32 62)

ST_4: tmp_14 [1/1] 0.00ns
:5  %tmp_14 = trunc i64 %inSound_load_to_int to i52

ST_4: notlhs1 [1/1] 2.11ns
:6  %notlhs1 = icmp ne i11 %tmp_16, -1

ST_4: notrhs1 [1/1] 2.64ns
:7  %notrhs1 = icmp eq i52 %tmp_14, 0

ST_4: tmp_18 [1/1] 1.37ns
:8  %tmp_18 = or i1 %notrhs1, %notlhs1

ST_4: tmp_19 [1/1] 6.83ns
:9  %tmp_19 = fcmp ogt double %inSound_load, 1.500000e-01

ST_4: tmp_20 [1/1] 1.37ns
:10  %tmp_20 = and i1 %tmp_18, %tmp_19


 <State 5>: 1.57ns
ST_5: stg_35 [1/1] 1.57ns
:11  br i1 %tmp_20, label %.loopexit2, label %1

ST_5: i [1/1] 0.00ns
.loopexit2:0  %i = phi i14 [ 0, %1 ], [ %first, %2 ]

ST_5: i_cast [1/1] 0.00ns
.loopexit2:1  %i_cast = zext i14 %i to i32

ST_5: stg_38 [1/1] 1.57ns
.loopexit2:2  br label %._crit_edge


 <State 6>: 4.67ns
ST_6: i_1_in [1/1] 0.00ns
._crit_edge:0  %i_1_in = phi i14 [ -384, %.loopexit2 ], [ %tmp_15, %3 ]

ST_6: i_1_in_cast [1/1] 0.00ns
._crit_edge:1  %i_1_in_cast = zext i14 %i_1_in to i15

ST_6: last_2 [1/1] 1.96ns
._crit_edge:2  %last_2 = add i15 -1, %i_1_in_cast

ST_6: last_2_cast1 [1/1] 0.00ns
._crit_edge:3  %last_2_cast1 = sext i15 %last_2 to i32

ST_6: tmp_15 [1/1] 0.00ns
._crit_edge:4  %tmp_15 = trunc i15 %last_2 to i14

ST_6: tmp_47 [1/1] 2.21ns
._crit_edge:5  %tmp_47 = icmp eq i14 %i_1_in, 0

ST_6: empty_15 [1/1] 0.00ns
._crit_edge:6  %empty_15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 16000, i64 8000)

ST_6: stg_46 [1/1] 1.57ns
._crit_edge:7  br i1 %tmp_47, label %.loopexit, label %3

ST_6: tmp_48 [1/1] 0.00ns
:0  %tmp_48 = zext i32 %last_2_cast1 to i64

ST_6: inSound_addr_1 [1/1] 0.00ns
:1  %inSound_addr_1 = getelementptr [16000 x double]* %inSound, i64 0, i64 %tmp_48

ST_6: inSound_load_1 [2/2] 2.71ns
:2  %inSound_load_1 = load double* %inSound_addr_1, align 8


 <State 7>: 2.71ns
ST_7: inSound_load_1 [1/2] 2.71ns
:2  %inSound_load_1 = load double* %inSound_addr_1, align 8


 <State 8>: 8.20ns
ST_8: inSound_load_1_to_int [1/1] 0.00ns
:3  %inSound_load_1_to_int = bitcast double %inSound_load_1 to i64

ST_8: tmp_21 [1/1] 0.00ns
:4  %tmp_21 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %inSound_load_1_to_int, i32 52, i32 62)

ST_8: tmp_17 [1/1] 0.00ns
:5  %tmp_17 = trunc i64 %inSound_load_1_to_int to i52

ST_8: notlhs2 [1/1] 2.11ns
:6  %notlhs2 = icmp ne i11 %tmp_21, -1

ST_8: notrhs2 [1/1] 2.64ns
:7  %notrhs2 = icmp eq i52 %tmp_17, 0

ST_8: tmp_23 [1/1] 1.37ns
:8  %tmp_23 = or i1 %notrhs2, %notlhs2

ST_8: tmp_24 [1/1] 6.83ns
:9  %tmp_24 = fcmp ogt double %inSound_load_1, 1.500000e-01

ST_8: tmp_25 [1/1] 1.37ns
:10  %tmp_25 = and i1 %tmp_23, %tmp_24


 <State 9>: 1.57ns
ST_9: stg_59 [1/1] 1.57ns
:11  br i1 %tmp_25, label %.loopexit, label %._crit_edge

ST_9: last [1/1] 0.00ns
.loopexit:0  %last = phi i15 [ 0, %._crit_edge ], [ %last_2, %3 ]

ST_9: j [1/1] 0.00ns
.loopexit:1  %j = alloca i32

ST_9: deleteFlag [1/1] 0.00ns
.loopexit:2  %deleteFlag = alloca i32

ST_9: count [1/1] 0.00ns
.loopexit:3  %count = alloca i32

ST_9: last_cast [1/1] 0.00ns
.loopexit:4  %last_cast = sext i15 %last to i32

ST_9: stg_65 [1/1] 1.57ns
.loopexit:5  store i32 0, i32* %count

ST_9: stg_66 [1/1] 1.57ns
.loopexit:6  store i32 0, i32* %deleteFlag

ST_9: stg_67 [1/1] 1.57ns
.loopexit:7  store i32 0, i32* %j

ST_9: stg_68 [1/1] 1.57ns
.loopexit:8  br label %4


 <State 10>: 2.71ns
ST_10: markBegin [1/1] 0.00ns
:0  %markBegin = phi i32 [ %i_cast, %.loopexit ], [ %i_6, %11 ]

ST_10: j_9 [1/1] 0.00ns
:1  %j_9 = load i32* %j

ST_10: tmp_49 [1/1] 2.52ns
:2  %tmp_49 = icmp sgt i32 %markBegin, %last_cast

ST_10: stg_72 [1/1] 0.00ns
:3  br i1 %tmp_49, label %.preheader.preheader, label %5

ST_10: tmp_52 [1/1] 0.00ns
:1  %tmp_52 = sext i32 %markBegin to i64

ST_10: inSound_addr_3 [1/1] 0.00ns
:2  %inSound_addr_3 = getelementptr [16000 x double]* %inSound, i64 0, i64 %tmp_52

ST_10: inSound_load_2 [2/2] 2.71ns
:3  %inSound_load_2 = load double* %inSound_addr_3, align 8

ST_10: j_1 [1/1] 0.00ns
.preheader.preheader:0  %j_1 = alloca i32

ST_10: stg_77 [1/1] 1.57ns
.preheader.preheader:1  store i32 0, i32* %j_1

ST_10: stg_78 [1/1] 1.57ns
.preheader.preheader:2  br label %.preheader


 <State 11>: 2.71ns
ST_11: inSound_load_2 [1/2] 2.71ns
:3  %inSound_load_2 = load double* %inSound_addr_3, align 8


 <State 12>: 8.20ns
ST_12: tmp_50 [1/1] 2.52ns
:0  %tmp_50 = icmp eq i32 %j_9, 0

ST_12: p_Val2_s [1/1] 0.00ns
:4  %p_Val2_s = bitcast double %inSound_load_2 to i64

ST_12: tmp_22 [1/1] 0.00ns
:5  %tmp_22 = trunc i64 %p_Val2_s to i63

ST_12: tmp_26 [1/1] 0.00ns
:6  %tmp_26 = trunc i64 %p_Val2_s to i52

ST_12: p_Result_s [1/1] 0.00ns
:7  %p_Result_s = call i64 @_ssdm_op_BitConcatenate.i64.i1.i63(i1 false, i63 %tmp_22)

ST_12: ret_i_i_i_i_i [1/1] 0.00ns
:8  %ret_i_i_i_i_i = bitcast i64 %p_Result_s to double

ST_12: tmp_34 [1/1] 0.00ns
:9  %tmp_34 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %p_Val2_s, i32 52, i32 62)

ST_12: notlhs7 [1/1] 2.11ns
:10  %notlhs7 = icmp ne i11 %tmp_34, -1

ST_12: notrhs8 [1/1] 2.64ns
:11  %notrhs8 = icmp eq i52 %tmp_26, 0

ST_12: tmp_35 [1/1] 1.37ns
:12  %tmp_35 = or i1 %notrhs8, %notlhs7

ST_12: tmp_36 [1/1] 6.83ns
:13  %tmp_36 = fcmp olt double %ret_i_i_i_i_i, 1.500000e-01

ST_12: tmp_37 [1/1] 1.37ns
:14  %tmp_37 = and i1 %tmp_35, %tmp_36

ST_12: stg_92 [1/1] 0.00ns
:15  br i1 %tmp_50, label %6, label %7

ST_12: deleteFlag_load [1/1] 0.00ns
:0  %deleteFlag_load = load i32* %deleteFlag

ST_12: stg_94 [1/1] 0.00ns
:1  br i1 %tmp_37, label %8, label %9

ST_12: tmp_55 [1/1] 2.52ns
:0  %tmp_55 = icmp eq i32 %deleteFlag_load, 1

ST_12: stg_96 [1/1] 1.57ns
:1  br i1 %tmp_55, label %.preheader4, label %.loopexit5

ST_12: count_load [1/1] 0.00ns
:0  %count_load = load i32* %count

ST_12: count_1 [1/1] 2.44ns
:1  %count_1 = add nsw i32 %count_load, 1

ST_12: tmp_54 [1/1] 2.52ns
:2  %tmp_54 = icmp eq i32 %count_1, 200

ST_12: p_deleteFlag [1/1] 1.37ns
:3  %p_deleteFlag = select i1 %tmp_54, i32 1, i32 %deleteFlag_load

ST_12: stg_101 [1/1] 1.57ns
:4  store i32 %count_1, i32* %count

ST_12: stg_102 [1/1] 1.57ns
:5  store i32 %p_deleteFlag, i32* %deleteFlag

ST_12: stg_103 [1/1] 0.00ns
:6  br label %11


 <State 13>: 2.94ns
ST_13: j9 [1/1] 0.00ns
.preheader4:0  %j9 = phi i32 [ %j_8, %10 ], [ %j_9, %9 ]

ST_13: tmp_57 [1/1] 2.52ns
.preheader4:1  %tmp_57 = icmp slt i32 %j9, %markBegin

ST_13: stg_106 [1/1] 0.00ns
.preheader4:2  br i1 %tmp_57, label %10, label %.loopexit5

ST_13: tmp_58 [1/1] 0.00ns
:0  %tmp_58 = sext i32 %j9 to i64

ST_13: inSound_addr_4 [1/1] 0.00ns
:1  %inSound_addr_4 = getelementptr [16000 x double]* %inSound, i64 0, i64 %tmp_58

ST_13: stg_109 [1/1] 2.71ns
:2  store double 0.000000e+00, double* %inSound_addr_4, align 8

ST_13: j_8 [1/1] 2.44ns
:3  %j_8 = add nsw i32 %j9, 1

ST_13: stg_111 [1/1] 0.00ns
:4  br label %.preheader4

ST_13: stg_112 [1/1] 1.57ns
.loopexit5:0  store i32 0, i32* %count

ST_13: stg_113 [1/1] 1.57ns
.loopexit5:1  store i32 0, i32* %deleteFlag

ST_13: stg_114 [1/1] 1.57ns
.loopexit5:2  store i32 0, i32* %j

ST_13: stg_115 [1/1] 0.00ns
.loopexit5:3  br label %11

ST_13: markBegin_1 [1/1] 1.37ns
:0  %markBegin_1 = select i1 %tmp_37, i32 %markBegin, i32 0

ST_13: stg_117 [1/1] 1.57ns
:1  store i32 %markBegin_1, i32* %j

ST_13: stg_118 [1/1] 0.00ns
:2  br label %11

ST_13: i_6 [1/1] 2.44ns
:0  %i_6 = add nsw i32 %markBegin, 1

ST_13: stg_120 [1/1] 0.00ns
:1  br label %4


 <State 14>: 3.89ns
ST_14: i_3 [1/1] 0.00ns
.preheader:0  %i_3 = phi i32 [ %i_5, %._crit_edge8 ], [ %i_cast, %.preheader.preheader ]

ST_14: j_1_load [1/1] 0.00ns
.preheader:1  %j_1_load = load i32* %j_1

ST_14: tmp_51 [1/1] 2.52ns
.preheader:2  %tmp_51 = icmp eq i32 %j_1_load, 8000

ST_14: slt [1/1] 2.52ns
.preheader:3  %slt = icmp slt i32 %last_cast, %i_3

ST_14: demorgan [1/1] 1.37ns
.preheader:4  %demorgan = or i1 %slt, %tmp_51

ST_14: stg_126 [1/1] 0.00ns
.preheader:5  br i1 %demorgan, label %14, label %12

ST_14: tmp_53 [1/1] 0.00ns
:0  %tmp_53 = sext i32 %i_3 to i64

ST_14: inSound_addr_2 [1/1] 0.00ns
:1  %inSound_addr_2 = getelementptr [16000 x double]* %inSound, i64 0, i64 %tmp_53

ST_14: inSound_load_3 [2/2] 2.71ns
:2  %inSound_load_3 = load double* %inSound_addr_2, align 8

ST_14: stg_130 [1/1] 0.00ns
:0  ret void


 <State 15>: 2.71ns
ST_15: inSound_load_3 [1/2] 2.71ns
:2  %inSound_load_3 = load double* %inSound_addr_2, align 8


 <State 16>: 8.20ns
ST_16: p_Val2_1 [1/1] 0.00ns
:3  %p_Val2_1 = bitcast double %inSound_load_3 to i64

ST_16: tmp_27 [1/1] 0.00ns
:4  %tmp_27 = trunc i64 %p_Val2_1 to i63

ST_16: tmp_32 [1/1] 0.00ns
:5  %tmp_32 = trunc i64 %p_Val2_1 to i52

ST_16: p_Result_1 [1/1] 0.00ns
:6  %p_Result_1 = call i64 @_ssdm_op_BitConcatenate.i64.i1.i63(i1 false, i63 %tmp_27)

ST_16: ret_i_i_i_i_i2 [1/1] 0.00ns
:7  %ret_i_i_i_i_i2 = bitcast i64 %p_Result_1 to double

ST_16: tmp_28 [1/1] 0.00ns
:8  %tmp_28 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %p_Val2_1, i32 52, i32 62)

ST_16: notlhs9 [1/1] 2.11ns
:9  %notlhs9 = icmp ne i11 %tmp_28, -1

ST_16: notrhs3 [1/1] 2.64ns
:10  %notrhs3 = icmp eq i52 %tmp_32, 0

ST_16: tmp_29 [1/1] 1.37ns
:11  %tmp_29 = or i1 %notrhs3, %notlhs9

ST_16: tmp_30 [1/1] 6.83ns
:12  %tmp_30 = fcmp ogt double %ret_i_i_i_i_i2, 0.000000e+00

ST_16: tmp_31 [1/1] 1.37ns
:13  %tmp_31 = and i1 %tmp_29, %tmp_30

ST_16: stg_143 [1/1] 0.00ns
:14  br i1 %tmp_31, label %13, label %._crit_edge8

ST_16: tmp_56 [1/1] 0.00ns
:0  %tmp_56 = sext i32 %j_1_load to i64

ST_16: outSound_addr [1/1] 0.00ns
:1  %outSound_addr = getelementptr [8000 x double]* %outSound, i64 0, i64 %tmp_56

ST_16: stg_146 [1/1] 2.71ns
:2  store double %inSound_load_3, double* %outSound_addr, align 8

ST_16: j_7 [1/1] 2.44ns
:3  %j_7 = add nsw i32 %j_1_load, 1

ST_16: stg_148 [1/1] 1.57ns
:4  store i32 %j_7, i32* %j_1

ST_16: stg_149 [1/1] 0.00ns
:5  br label %._crit_edge8

ST_16: i_5 [1/1] 2.44ns
._crit_edge8:0  %i_5 = add nsw i32 %i_3, 1

ST_16: stg_151 [1/1] 0.00ns
._crit_edge8:1  br label %.preheader



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
