

================================================================
== Vivado HLS Report for 'voicerec_preprocessSound'
================================================================
* Date:           Wed Dec  9 22:20:24 2015

* Version:        2015.3 (Build 1244743 on Sun May 31 20:30:40 PM 2015)
* Project:        voicerec.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.75|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+------------+-------+------------+---------+
    |       Latency      |      Interval      | Pipeline|
    |  min  |     max    |  min  |     max    |   Type  |
    +-------+------------+-------+------------+---------+
    |  64022|  1536480022|  64022|  1536480022|   none  |
    +-------+------------+-------+------------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-------+------------+-----------+-----------+-----------+-----------+----------+
        |             |       Latency      | Iteration |  Initiation Interval  |    Trip   |          |
        |  Loop Name  |  min  |     max    |  Latency  |  achieved |   target  |   Count   | Pipelined|
        +-------------+-------+------------+-----------+-----------+-----------+-----------+----------+
        |- Loop 1     |      3|       48002|          3|          -|          -| 1 ~ 16000 |    no    |
        |- Loop 2     |     10|      160009|         10|          -|          -| 1 ~ 16000 |    no    |
        |- Loop 3     |  32000|  1536144000| 2 ~ 96009 |          -|          -|      16000|    no    |
        | + Loop 3.1  |  32000|       96000|   2 ~ 6   |          -|          -|      16000|    no    |
        |- Loop 4     |  32000|      128000|   2 ~ 8   |          -|          -|      16000|    no    |
        +-------------+-------+------------+-----------+-----------+-----------+-----------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 41
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / (tmp)
	9  / (!tmp)
8 --> 
	9  / true
9 --> 
	7  / (tmp & !tmp_19)
	10  / (!tmp) | (tmp_19)
10 --> 
	11  / (!tmp_47)
	19  / (tmp_47)
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	10  / (!tmp_47 & !tmp_24)
	20  / (tmp_47) | (tmp_24)
20 --> 
	21  / (!exitcond1 & !or_cond)
	28  / (!exitcond1 & or_cond)
	34  / (exitcond1)
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / (!or_cond & !tmp_54 & !tmp_36 & tmp_62 & !exitcond & or_cond4)
	33  / (!or_cond & !tmp_54 & !tmp_36 & tmp_62 & !exitcond & !or_cond4)
	20  / (or_cond) | (tmp_54) | (tmp_36) | (!tmp_62) | (exitcond)
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	28  / true
34 --> 
	35  / (!exitcond2 & !or_cond6)
	41  / (!exitcond2 & or_cond6)
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	34  / true
* FSM state operations: 

 <State 1>: 8.75ns
ST_1: p_rd_req [6/6] 8.75ns
:2  %p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.doubleP(double* %inSound, i32 16000)


 <State 2>: 8.75ns
ST_2: p_rd_req [5/6] 8.75ns
:2  %p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.doubleP(double* %inSound, i32 16000)


 <State 3>: 8.75ns
ST_3: p_rd_req [4/6] 8.75ns
:2  %p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.doubleP(double* %inSound, i32 16000)


 <State 4>: 8.75ns
ST_4: p_rd_req [3/6] 8.75ns
:2  %p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.doubleP(double* %inSound, i32 16000)


 <State 5>: 8.75ns
ST_5: p_rd_req [2/6] 8.75ns
:2  %p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.doubleP(double* %inSound, i32 16000)


 <State 6>: 8.75ns
ST_6: stg_47 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecMemCore(double* %inSound, [1 x i8]* @p_str25, [12 x i8]* @p_str5, [1 x i8]* @p_str25, i32 -1, [1 x i8]* @p_str25, [1 x i8]* @p_str25, [24 x i8]* @p_str6)

ST_6: stg_48 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecInterface(double* %inSound, [6 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [17 x i8]* @p_str14, [1 x i8]* @p_str25, [1 x i8]* @p_str25)

ST_6: p_rd_req [1/6] 8.75ns
:2  %p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.doubleP(double* %inSound, i32 16000)

ST_6: stg_50 [1/1] 1.57ns
:3  br label %1


 <State 7>: 8.75ns
ST_7: first [1/1] 0.00ns
:0  %first = phi i14 [ 0, %0 ], [ %i, %2 ]

ST_7: tmp [1/1] 2.21ns
:1  %tmp = icmp ult i14 %first, -384

ST_7: empty [1/1] 0.00ns
:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 16000, i64 8000)

ST_7: i [1/1] 1.96ns
:3  %i = add i14 %first, 1

ST_7: stg_55 [1/1] 1.57ns
:4  br i1 %tmp, label %2, label %.loopexit2

ST_7: inSound_read [1/1] 8.75ns
:0  %inSound_read = call double @_ssdm_op_Read.m_axi.doubleP(double* %inSound)


 <State 8>: 8.20ns
ST_8: inSound_load_to_int [1/1] 0.00ns
:1  %inSound_load_to_int = bitcast double %inSound_read to i64

ST_8: tmp_15 [1/1] 0.00ns
:2  %tmp_15 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %inSound_load_to_int, i32 52, i32 62)

ST_8: tmp_21 [1/1] 0.00ns
:3  %tmp_21 = trunc i64 %inSound_load_to_int to i52

ST_8: notlhs1 [1/1] 2.11ns
:4  %notlhs1 = icmp ne i11 %tmp_15, -1

ST_8: notrhs1 [1/1] 2.64ns
:5  %notrhs1 = icmp eq i52 %tmp_21, 0

ST_8: tmp_17 [1/1] 1.37ns
:6  %tmp_17 = or i1 %notrhs1, %notlhs1

ST_8: tmp_18 [1/1] 6.83ns
:7  %tmp_18 = fcmp ogt double %inSound_read, 1.500000e-01

ST_8: tmp_19 [1/1] 1.37ns
:8  %tmp_19 = and i1 %tmp_17, %tmp_18


 <State 9>: 1.57ns
ST_9: stg_65 [1/1] 1.57ns
:9  br i1 %tmp_19, label %.loopexit2, label %1

ST_9: first1 [1/1] 0.00ns
.loopexit2:0  %first1 = phi i14 [ 0, %1 ], [ %first, %2 ]

ST_9: stg_67 [1/1] 1.57ns
.loopexit2:1  br label %._crit_edge


 <State 10>: 3.78ns
ST_10: i_1_in [1/1] 0.00ns
._crit_edge:0  %i_1_in = phi i14 [ -384, %.loopexit2 ], [ %tmp_25, %3 ]

ST_10: i_1_in_cast [1/1] 0.00ns
._crit_edge:1  %i_1_in_cast = zext i14 %i_1_in to i15

ST_10: last_2 [1/1] 1.96ns
._crit_edge:2  %last_2 = add i15 -1, %i_1_in_cast

ST_10: last_2_cast5 [1/1] 0.00ns
._crit_edge:3  %last_2_cast5 = sext i15 %last_2 to i32

ST_10: tmp_25 [1/1] 0.00ns
._crit_edge:4  %tmp_25 = trunc i15 %last_2 to i14

ST_10: tmp_47 [1/1] 2.21ns
._crit_edge:5  %tmp_47 = icmp eq i14 %i_1_in, 0

ST_10: empty_28 [1/1] 0.00ns
._crit_edge:6  %empty_28 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 16000, i64 8000)

ST_10: stg_75 [1/1] 1.57ns
._crit_edge:7  br i1 %tmp_47, label %.loopexit, label %3


 <State 11>: 8.75ns
ST_11: tmp_48 [1/1] 0.00ns
:0  %tmp_48 = zext i32 %last_2_cast5 to i64

ST_11: inSound_addr [1/1] 0.00ns
:1  %inSound_addr = getelementptr double* %inSound, i64 %tmp_48

ST_11: inSound_load_1_req [6/6] 8.75ns
:2  %inSound_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.doubleP(double* %inSound_addr, i32 1)


 <State 12>: 8.75ns
ST_12: inSound_load_1_req [5/6] 8.75ns
:2  %inSound_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.doubleP(double* %inSound_addr, i32 1)


 <State 13>: 8.75ns
ST_13: inSound_load_1_req [4/6] 8.75ns
:2  %inSound_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.doubleP(double* %inSound_addr, i32 1)


 <State 14>: 8.75ns
ST_14: inSound_load_1_req [3/6] 8.75ns
:2  %inSound_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.doubleP(double* %inSound_addr, i32 1)


 <State 15>: 8.75ns
ST_15: inSound_load_1_req [2/6] 8.75ns
:2  %inSound_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.doubleP(double* %inSound_addr, i32 1)


 <State 16>: 8.75ns
ST_16: inSound_load_1_req [1/6] 8.75ns
:2  %inSound_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.doubleP(double* %inSound_addr, i32 1)


 <State 17>: 8.75ns
ST_17: inSound_addr_read [1/1] 8.75ns
:3  %inSound_addr_read = call double @_ssdm_op_Read.m_axi.doubleP(double* %inSound_addr)


 <State 18>: 8.20ns
ST_18: inSound_load_1_to_int [1/1] 0.00ns
:4  %inSound_load_1_to_int = bitcast double %inSound_addr_read to i64

ST_18: tmp_20 [1/1] 0.00ns
:5  %tmp_20 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %inSound_load_1_to_int, i32 52, i32 62)

ST_18: tmp_26 [1/1] 0.00ns
:6  %tmp_26 = trunc i64 %inSound_load_1_to_int to i52

ST_18: notlhs2 [1/1] 2.11ns
:7  %notlhs2 = icmp ne i11 %tmp_20, -1

ST_18: notrhs2 [1/1] 2.64ns
:8  %notrhs2 = icmp eq i52 %tmp_26, 0

ST_18: tmp_22 [1/1] 1.37ns
:9  %tmp_22 = or i1 %notrhs2, %notlhs2

ST_18: tmp_23 [1/1] 6.83ns
:10  %tmp_23 = fcmp ogt double %inSound_addr_read, 1.500000e-01

ST_18: tmp_24 [1/1] 1.37ns
:11  %tmp_24 = and i1 %tmp_22, %tmp_23


 <State 19>: 1.57ns
ST_19: stg_93 [1/1] 1.57ns
:12  br i1 %tmp_24, label %.loopexit, label %._crit_edge

ST_19: last [1/1] 0.00ns
.loopexit:0  %last = phi i15 [ 0, %._crit_edge ], [ %last_2, %3 ]

ST_19: deleteFlag [1/1] 0.00ns
.loopexit:1  %deleteFlag = alloca i32

ST_19: count [1/1] 0.00ns
.loopexit:2  %count = alloca i32

ST_19: markBegin [1/1] 0.00ns
.loopexit:3  %markBegin = alloca i32

ST_19: stg_98 [1/1] 1.57ns
.loopexit:4  store i32 0, i32* %markBegin

ST_19: stg_99 [1/1] 1.57ns
.loopexit:5  store i32 0, i32* %count

ST_19: stg_100 [1/1] 1.57ns
.loopexit:6  store i32 0, i32* %deleteFlag

ST_19: stg_101 [1/1] 1.57ns
.loopexit:7  br label %._crit_edge12


 <State 20>: 8.75ns
ST_20: markBegin_2 [1/1] 0.00ns
._crit_edge12:0  %markBegin_2 = phi i14 [ 0, %.loopexit ], [ %i_5, %._crit_edge12.backedge ]

ST_20: markBegin_2_cast [1/1] 0.00ns
._crit_edge12:1  %markBegin_2_cast = zext i14 %markBegin_2 to i15

ST_20: exitcond1 [1/1] 2.21ns
._crit_edge12:2  %exitcond1 = icmp eq i14 %markBegin_2, -384

ST_20: empty_29 [1/1] 0.00ns
._crit_edge12:3  %empty_29 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16000, i64 16000, i64 16000)

ST_20: i_5 [1/1] 1.96ns
._crit_edge12:4  %i_5 = add i14 %markBegin_2, 1

ST_20: stg_107 [1/1] 0.00ns
._crit_edge12:5  br i1 %exitcond1, label %.preheader.preheader, label %4

ST_20: tmp_49 [1/1] 2.21ns
:0  %tmp_49 = icmp ult i14 %markBegin_2, %first1

ST_20: tmp_50 [1/1] 2.25ns
:1  %tmp_50 = icmp sgt i15 %markBegin_2_cast, %last

ST_20: or_cond [1/1] 1.37ns
:2  %or_cond = or i1 %tmp_49, %tmp_50

ST_20: stg_111 [1/1] 0.00ns
:3  br i1 %or_cond, label %._crit_edge12.backedge, label %5

ST_20: tmp_57 [1/1] 0.00ns
:2  %tmp_57 = zext i14 %markBegin_2 to i64

ST_20: inSound_addr_1 [1/1] 0.00ns
:3  %inSound_addr_1 = getelementptr double* %inSound, i64 %tmp_57

ST_20: inSound_load_2_req [6/6] 8.75ns
:4  %inSound_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.doubleP(double* %inSound_addr_1, i32 1)

ST_20: j_1 [1/1] 0.00ns
.preheader.preheader:0  %j_1 = alloca i32

ST_20: stg_116 [1/1] 1.57ns
.preheader.preheader:1  store i32 0, i32* %j_1

ST_20: stg_117 [1/1] 1.57ns
.preheader.preheader:2  br label %.preheader


 <State 21>: 8.75ns
ST_21: inSound_load_2_req [5/6] 8.75ns
:4  %inSound_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.doubleP(double* %inSound_addr_1, i32 1)


 <State 22>: 8.75ns
ST_22: inSound_load_2_req [4/6] 8.75ns
:4  %inSound_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.doubleP(double* %inSound_addr_1, i32 1)


 <State 23>: 8.75ns
ST_23: inSound_load_2_req [3/6] 8.75ns
:4  %inSound_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.doubleP(double* %inSound_addr_1, i32 1)


 <State 24>: 8.75ns
ST_24: inSound_load_2_req [2/6] 8.75ns
:4  %inSound_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.doubleP(double* %inSound_addr_1, i32 1)


 <State 25>: 8.75ns
ST_25: inSound_load_2_req [1/6] 8.75ns
:4  %inSound_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.doubleP(double* %inSound_addr_1, i32 1)


 <State 26>: 8.75ns
ST_26: inSound_addr_1_read [1/1] 8.75ns
:5  %inSound_addr_1_read = call double @_ssdm_op_Read.m_axi.doubleP(double* %inSound_addr_1)


 <State 27>: 8.20ns
ST_27: markBegin_load_1 [1/1] 0.00ns
:0  %markBegin_load_1 = load i32* %markBegin

ST_27: tmp_54 [1/1] 2.52ns
:1  %tmp_54 = icmp eq i32 %markBegin_load_1, 0

ST_27: p_Val2_s [1/1] 0.00ns
:6  %p_Val2_s = bitcast double %inSound_addr_1_read to i64

ST_27: tmp_31 [1/1] 0.00ns
:7  %tmp_31 = trunc i64 %p_Val2_s to i63

ST_27: tmp_32 [1/1] 0.00ns
:8  %tmp_32 = trunc i64 %p_Val2_s to i52

ST_27: p_Result_s [1/1] 0.00ns
:9  %p_Result_s = call i64 @_ssdm_op_BitConcatenate.i64.i1.i63(i1 false, i63 %tmp_31)

ST_27: ret_i_i_i_i_i [1/1] 0.00ns
:10  %ret_i_i_i_i_i = bitcast i64 %p_Result_s to double

ST_27: tmp_33 [1/1] 0.00ns
:11  %tmp_33 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %p_Val2_s, i32 52, i32 62)

ST_27: notlhs4 [1/1] 2.11ns
:12  %notlhs4 = icmp ne i11 %tmp_33, -1

ST_27: notrhs4 [1/1] 2.64ns
:13  %notrhs4 = icmp eq i52 %tmp_32, 0

ST_27: tmp_34 [1/1] 1.37ns
:14  %tmp_34 = or i1 %notrhs4, %notlhs4

ST_27: tmp_35 [1/1] 6.83ns
:15  %tmp_35 = fcmp olt double %ret_i_i_i_i_i, 1.500000e-01

ST_27: tmp_36 [1/1] 1.37ns
:16  %tmp_36 = and i1 %tmp_34, %tmp_35

ST_27: stg_137 [1/1] 0.00ns
:17  br i1 %tmp_54, label %6, label %7

ST_27: deleteFlag_load [1/1] 0.00ns
:0  %deleteFlag_load = load i32* %deleteFlag

ST_27: stg_139 [1/1] 0.00ns
:1  br i1 %tmp_36, label %8, label %9

ST_27: tmp_62 [1/1] 2.52ns
:0  %tmp_62 = icmp eq i32 %deleteFlag_load, 1

ST_27: stg_141 [1/1] 1.57ns
:1  br i1 %tmp_62, label %.preheader8, label %.loopexit9

ST_27: count_load [1/1] 0.00ns
:0  %count_load = load i32* %count

ST_27: count_1 [1/1] 2.44ns
:1  %count_1 = add nsw i32 %count_load, 1

ST_27: tmp_61 [1/1] 2.52ns
:2  %tmp_61 = icmp eq i32 %count_1, 200

ST_27: p_deleteFlag [1/1] 1.37ns
:3  %p_deleteFlag = select i1 %tmp_61, i32 1, i32 %deleteFlag_load

ST_27: stg_146 [1/1] 1.57ns
:4  store i32 %count_1, i32* %count

ST_27: stg_147 [1/1] 1.57ns
:5  store i32 %p_deleteFlag, i32* %deleteFlag

ST_27: stg_148 [1/1] 0.00ns
:6  br label %._crit_edge12.backedge


 <State 28>: 8.75ns
ST_28: j9 [1/1] 0.00ns
.preheader8:0  %j9 = phi i14 [ %j_8, %._crit_edge13 ], [ 0, %9 ]

ST_28: j9_cast3 [1/1] 0.00ns
.preheader8:1  %j9_cast3 = zext i14 %j9 to i32

ST_28: exitcond [1/1] 2.21ns
.preheader8:2  %exitcond = icmp eq i14 %j9, -384

ST_28: empty_30 [1/1] 0.00ns
.preheader8:3  %empty_30 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16000, i64 16000, i64 16000)

ST_28: j_8 [1/1] 1.96ns
.preheader8:4  %j_8 = add i14 %j9, 1

ST_28: stg_154 [1/1] 0.00ns
.preheader8:5  br i1 %exitcond, label %.loopexit9, label %10

ST_28: markBegin_load [1/1] 0.00ns
:0  %markBegin_load = load i32* %markBegin

ST_28: slt [1/1] 2.52ns
:1  %slt = icmp slt i32 %j9_cast3, %markBegin_load

ST_28: rev [1/1] 1.37ns
:2  %rev = xor i1 %slt, true

ST_28: tmp_64 [1/1] 2.21ns
:3  %tmp_64 = icmp ult i14 %j9, %markBegin_2

ST_28: or_cond4 [1/1] 1.37ns
:4  %or_cond4 = and i1 %rev, %tmp_64

ST_28: stg_160 [1/1] 0.00ns
:5  br i1 %or_cond4, label %11, label %._crit_edge13

ST_28: tmp_65 [1/1] 0.00ns
:0  %tmp_65 = zext i14 %j9 to i64

ST_28: inSound_addr_3 [1/1] 0.00ns
:1  %inSound_addr_3 = getelementptr double* %inSound, i64 %tmp_65

ST_28: inSound_addr_4_req [1/1] 8.75ns
:2  %inSound_addr_4_req = call i1 @_ssdm_op_WriteReq.m_axi.doubleP(double* %inSound_addr_3, i32 1)

ST_28: stg_164 [1/1] 1.57ns
.loopexit9:0  store i32 0, i32* %markBegin

ST_28: stg_165 [1/1] 1.57ns
.loopexit9:1  store i32 0, i32* %count

ST_28: stg_166 [1/1] 1.57ns
.loopexit9:2  store i32 0, i32* %deleteFlag

ST_28: stg_167 [1/1] 0.00ns
.loopexit9:3  br label %._crit_edge12.backedge

ST_28: markBegin_1 [1/1] 1.37ns
:0  %markBegin_1 = select i1 %tmp_36, i14 %markBegin_2, i14 0

ST_28: markBegin_1_cast [1/1] 0.00ns
:1  %markBegin_1_cast = zext i14 %markBegin_1 to i32

ST_28: stg_170 [1/1] 1.57ns
:2  store i32 %markBegin_1_cast, i32* %markBegin

ST_28: stg_171 [1/1] 0.00ns
:3  br label %._crit_edge12.backedge

ST_28: stg_172 [1/1] 0.00ns
._crit_edge12.backedge:0  br label %._crit_edge12


 <State 29>: 8.75ns
ST_29: stg_173 [1/1] 8.75ns
:3  call void @_ssdm_op_Write.m_axi.doubleP(double* %inSound_addr_3, double 0.000000e+00)


 <State 30>: 8.75ns
ST_30: inSound_addr_4_resp [4/4] 8.75ns
:4  %inSound_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.doubleP(double* %inSound_addr_3)


 <State 31>: 8.75ns
ST_31: inSound_addr_4_resp [3/4] 8.75ns
:4  %inSound_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.doubleP(double* %inSound_addr_3)


 <State 32>: 8.75ns
ST_32: inSound_addr_4_resp [2/4] 8.75ns
:4  %inSound_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.doubleP(double* %inSound_addr_3)


 <State 33>: 8.75ns
ST_33: inSound_addr_4_resp [1/4] 8.75ns
:4  %inSound_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.doubleP(double* %inSound_addr_3)

ST_33: stg_178 [1/1] 0.00ns
:5  br label %._crit_edge13

ST_33: stg_179 [1/1] 0.00ns
._crit_edge13:0  br label %.preheader8


 <State 34>: 8.75ns
ST_34: i_3 [1/1] 0.00ns
.preheader:0  %i_3 = phi i14 [ 0, %.preheader.preheader ], [ %i_4, %.preheader.backedge ]

ST_34: i_3_cast [1/1] 0.00ns
.preheader:1  %i_3_cast = zext i14 %i_3 to i15

ST_34: exitcond2 [1/1] 2.21ns
.preheader:2  %exitcond2 = icmp eq i14 %i_3, -384

ST_34: empty_31 [1/1] 0.00ns
.preheader:3  %empty_31 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16000, i64 16000, i64 16000)

ST_34: i_4 [1/1] 1.96ns
.preheader:4  %i_4 = add i14 %i_3, 1

ST_34: stg_185 [1/1] 0.00ns
.preheader:5  br i1 %exitcond2, label %17, label %12

ST_34: j_1_load [1/1] 0.00ns
:0  %j_1_load = load i32* %j_1

ST_34: tmp_51 [1/1] 2.21ns
:1  %tmp_51 = icmp ult i14 %i_3, %first1

ST_34: tmp_52 [1/1] 2.25ns
:2  %tmp_52 = icmp sgt i15 %i_3_cast, %last

ST_34: tmp_53 [1/1] 2.52ns
:3  %tmp_53 = icmp eq i32 %j_1_load, 8000

ST_34: tmp1 [1/1] 1.37ns
:4  %tmp1 = or i1 %tmp_52, %tmp_53

ST_34: or_cond6 [1/1] 1.37ns
:5  %or_cond6 = or i1 %tmp1, %tmp_51

ST_34: stg_192 [1/1] 0.00ns
:6  br i1 %or_cond6, label %15, label %13

ST_34: tmp_56 [1/1] 0.00ns
:0  %tmp_56 = zext i14 %i_3 to i64

ST_34: inSound_addr_2 [1/1] 0.00ns
:1  %inSound_addr_2 = getelementptr double* %inSound, i64 %tmp_56

ST_34: inSound_load_3_req [6/6] 8.75ns
:2  %inSound_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.doubleP(double* %inSound_addr_2, i32 1)

ST_34: tmp_55 [1/1] 2.52ns
:0  %tmp_55 = icmp sgt i32 %j_1_load, 7999

ST_34: or_cond7 [1/1] 1.37ns
:1  %or_cond7 = or i1 %tmp_55, %tmp_51

ST_34: stg_198 [1/1] 0.00ns
:2  br i1 %or_cond7, label %.preheader.backedge, label %16

ST_34: tmp_59 [1/1] 0.00ns
:0  %tmp_59 = sext i32 %j_1_load to i64

ST_34: outSound_addr [1/1] 0.00ns
:1  %outSound_addr = getelementptr [8000 x double]* %outSound, i64 0, i64 %tmp_59

ST_34: stg_201 [1/1] 2.71ns
:2  store double 0.000000e+00, double* %outSound_addr, align 8

ST_34: j [1/1] 2.44ns
:3  %j = add nsw i32 %j_1_load, 1

ST_34: stg_203 [1/1] 1.57ns
:4  store i32 %j, i32* %j_1

ST_34: stg_204 [1/1] 0.00ns
:5  br label %.preheader.backedge

ST_34: stg_205 [1/1] 0.00ns
:0  ret void


 <State 35>: 8.75ns
ST_35: inSound_load_3_req [5/6] 8.75ns
:2  %inSound_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.doubleP(double* %inSound_addr_2, i32 1)


 <State 36>: 8.75ns
ST_36: inSound_load_3_req [4/6] 8.75ns
:2  %inSound_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.doubleP(double* %inSound_addr_2, i32 1)


 <State 37>: 8.75ns
ST_37: inSound_load_3_req [3/6] 8.75ns
:2  %inSound_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.doubleP(double* %inSound_addr_2, i32 1)


 <State 38>: 8.75ns
ST_38: inSound_load_3_req [2/6] 8.75ns
:2  %inSound_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.doubleP(double* %inSound_addr_2, i32 1)


 <State 39>: 8.75ns
ST_39: inSound_load_3_req [1/6] 8.75ns
:2  %inSound_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.doubleP(double* %inSound_addr_2, i32 1)


 <State 40>: 8.75ns
ST_40: inSound_addr_2_read [1/1] 8.75ns
:3  %inSound_addr_2_read = call double @_ssdm_op_Read.m_axi.doubleP(double* %inSound_addr_2)


 <State 41>: 8.20ns
ST_41: p_Val2_1 [1/1] 0.00ns
:4  %p_Val2_1 = bitcast double %inSound_addr_2_read to i64

ST_41: tmp_37 [1/1] 0.00ns
:5  %tmp_37 = trunc i64 %p_Val2_1 to i63

ST_41: tmp_38 [1/1] 0.00ns
:6  %tmp_38 = trunc i64 %p_Val2_1 to i52

ST_41: p_Result_1 [1/1] 0.00ns
:7  %p_Result_1 = call i64 @_ssdm_op_BitConcatenate.i64.i1.i63(i1 false, i63 %tmp_37)

ST_41: ret_i_i_i_i_i2 [1/1] 0.00ns
:8  %ret_i_i_i_i_i2 = bitcast i64 %p_Result_1 to double

ST_41: tmp_27 [1/1] 0.00ns
:9  %tmp_27 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %p_Val2_1, i32 52, i32 62)

ST_41: notlhs3 [1/1] 2.11ns
:10  %notlhs3 = icmp ne i11 %tmp_27, -1

ST_41: notrhs3 [1/1] 2.64ns
:11  %notrhs3 = icmp eq i52 %tmp_38, 0

ST_41: tmp_28 [1/1] 1.37ns
:12  %tmp_28 = or i1 %notrhs3, %notlhs3

ST_41: tmp_29 [1/1] 6.83ns
:13  %tmp_29 = fcmp ogt double %ret_i_i_i_i_i2, 0.000000e+00

ST_41: tmp_30 [1/1] 1.37ns
:14  %tmp_30 = and i1 %tmp_28, %tmp_29

ST_41: stg_223 [1/1] 0.00ns
:15  br i1 %tmp_30, label %14, label %.preheader.backedge

ST_41: j_1_load_1 [1/1] 0.00ns
:0  %j_1_load_1 = load i32* %j_1

ST_41: tmp_60 [1/1] 0.00ns
:1  %tmp_60 = sext i32 %j_1_load_1 to i64

ST_41: outSound_addr_1 [1/1] 0.00ns
:2  %outSound_addr_1 = getelementptr [8000 x double]* %outSound, i64 0, i64 %tmp_60

ST_41: stg_227 [1/1] 2.71ns
:3  store double %inSound_addr_2_read, double* %outSound_addr_1, align 8

ST_41: j_7 [1/1] 2.44ns
:4  %j_7 = add nsw i32 %j_1_load_1, 1

ST_41: stg_229 [1/1] 1.57ns
:5  store i32 %j_7, i32* %j_1

ST_41: stg_230 [1/1] 0.00ns
:6  br label %.preheader.backedge

ST_41: stg_231 [1/1] 0.00ns
.preheader.backedge:0  br label %.preheader



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
