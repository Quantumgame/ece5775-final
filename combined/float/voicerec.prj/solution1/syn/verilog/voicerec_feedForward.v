// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module voicerec_feedForward (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        pattern_address0,
        pattern_ce0,
        pattern_q0,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 139'b1;
parameter    ap_ST_st2_fsm_1 = 139'b10;
parameter    ap_ST_st3_fsm_2 = 139'b100;
parameter    ap_ST_st4_fsm_3 = 139'b1000;
parameter    ap_ST_st5_fsm_4 = 139'b10000;
parameter    ap_ST_st6_fsm_5 = 139'b100000;
parameter    ap_ST_st7_fsm_6 = 139'b1000000;
parameter    ap_ST_st8_fsm_7 = 139'b10000000;
parameter    ap_ST_st9_fsm_8 = 139'b100000000;
parameter    ap_ST_st10_fsm_9 = 139'b1000000000;
parameter    ap_ST_st11_fsm_10 = 139'b10000000000;
parameter    ap_ST_st12_fsm_11 = 139'b100000000000;
parameter    ap_ST_st13_fsm_12 = 139'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 139'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 139'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 139'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 139'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 139'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 139'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 139'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 139'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 139'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 139'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 139'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 139'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 139'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 139'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 139'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 139'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 139'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 139'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 139'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 139'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 139'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 139'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 139'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 139'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 139'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 139'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 139'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 139'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 139'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 139'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 139'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 139'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 139'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 139'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 139'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 139'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 139'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 139'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 139'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 139'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 139'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 139'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 139'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 139'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 139'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 139'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 139'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 139'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 139'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 139'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 139'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 139'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 139'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 139'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_67 = 139'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_68 = 139'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_69 = 139'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_70 = 139'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_71 = 139'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_72 = 139'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_73 = 139'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_74 = 139'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_75 = 139'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_76 = 139'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st78_fsm_77 = 139'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st79_fsm_78 = 139'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st80_fsm_79 = 139'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st81_fsm_80 = 139'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st82_fsm_81 = 139'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st83_fsm_82 = 139'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st84_fsm_83 = 139'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st85_fsm_84 = 139'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st86_fsm_85 = 139'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st87_fsm_86 = 139'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st88_fsm_87 = 139'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st89_fsm_88 = 139'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st90_fsm_89 = 139'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st91_fsm_90 = 139'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st92_fsm_91 = 139'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st93_fsm_92 = 139'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st94_fsm_93 = 139'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st95_fsm_94 = 139'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st96_fsm_95 = 139'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st97_fsm_96 = 139'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st98_fsm_97 = 139'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st99_fsm_98 = 139'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st100_fsm_99 = 139'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st101_fsm_100 = 139'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st102_fsm_101 = 139'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st103_fsm_102 = 139'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st104_fsm_103 = 139'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st105_fsm_104 = 139'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st106_fsm_105 = 139'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st107_fsm_106 = 139'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st108_fsm_107 = 139'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st109_fsm_108 = 139'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st110_fsm_109 = 139'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st111_fsm_110 = 139'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st112_fsm_111 = 139'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st113_fsm_112 = 139'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st114_fsm_113 = 139'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st115_fsm_114 = 139'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st116_fsm_115 = 139'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st117_fsm_116 = 139'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st118_fsm_117 = 139'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st119_fsm_118 = 139'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st120_fsm_119 = 139'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st121_fsm_120 = 139'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st122_fsm_121 = 139'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st123_fsm_122 = 139'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st124_fsm_123 = 139'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st125_fsm_124 = 139'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st126_fsm_125 = 139'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st127_fsm_126 = 139'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st128_fsm_127 = 139'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st129_fsm_128 = 139'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st130_fsm_129 = 139'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st131_fsm_130 = 139'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st132_fsm_131 = 139'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st133_fsm_132 = 139'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st134_fsm_133 = 139'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st135_fsm_134 = 139'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st136_fsm_135 = 139'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st137_fsm_136 = 139'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st138_fsm_137 = 139'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st139_fsm_138 = 139'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_48 = 32'b1001000;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_4C = 32'b1001100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_51 = 32'b1010001;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_64 = 32'b1100100;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_69 = 32'b1101001;
parameter    ap_const_lv32_44 = 32'b1000100;
parameter    ap_const_lv32_88 = 32'b10001000;
parameter    ap_const_lv32_45 = 32'b1000101;
parameter    ap_const_lv32_89 = 32'b10001001;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_47 = 32'b1000111;
parameter    ap_const_lv32_49 = 32'b1001001;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_46 = 32'b1000110;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv15_0 = 15'b000000000000000;
parameter    ap_const_lv32_8A = 32'b10001010;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_52 = 32'b1010010;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_4D = 32'b1001101;
parameter    ap_const_lv64_3FF0000000000000 = 64'b11111111110000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_65 = 32'b1100101;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_6A = 32'b1101010;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_53 = 32'b1010011;
parameter    ap_const_lv10_372 = 10'b1101110010;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv5_19 = 5'b11001;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv10_373 = 10'b1101110011;
parameter    ap_const_lv15_19 = 15'b11001;
parameter    ap_const_lv32_80000000 = 32'b10000000000000000000000000000000;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv5_1A = 5'b11010;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] pattern_address0;
output   pattern_ce0;
input  [31:0] pattern_q0;
output  [1:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [31:0] output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg pattern_ce0;
reg[1:0] output_r_address0;
reg output_r_ce0;
reg output_r_we0;
reg[31:0] output_r_d0;
(* fsm_encoding = "none" *) reg   [138:0] ap_CS_fsm = 139'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_157;
reg   [9:0] input_r_address0;
reg    input_r_ce0;
reg    input_r_we0;
wire   [31:0] input_r_d0;
wire   [31:0] input_r_q0;
reg   [4:0] hidden_address0;
reg    hidden_ce0;
reg    hidden_we0;
reg   [31:0] hidden_d0;
wire   [31:0] hidden_q0;
wire   [14:0] weightIH_address0;
reg    weightIH_ce0;
wire   [31:0] weightIH_q0;
wire   [6:0] weightHO_address0;
reg    weightHO_ce0;
wire   [31:0] weightHO_q0;
wire   [63:0] grp_fu_262_p1;
reg   [63:0] reg_280;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_216;
wire   [0:0] exitcond2_fu_357_p2;
reg    ap_sig_cseq_ST_st73_fsm_72;
reg    ap_sig_bdd_228;
wire   [0:0] exitcond_fu_426_p2;
wire   [31:0] grp_fu_251_p2;
reg   [31:0] reg_285;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_242;
reg    ap_sig_cseq_ST_st77_fsm_76;
reg    ap_sig_bdd_249;
wire   [31:0] grp_fu_245_p2;
reg   [31:0] reg_290;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_259;
reg    ap_sig_cseq_ST_st82_fsm_81;
reg    ap_sig_bdd_266;
wire   [63:0] grp_fu_275_p2;
reg   [63:0] reg_298;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_bdd_276;
reg    ap_sig_cseq_ST_st101_fsm_100;
reg    ap_sig_bdd_283;
wire   [63:0] grp_fu_265_p2;
reg   [63:0] reg_303;
reg    ap_sig_cseq_ST_st38_fsm_37;
reg    ap_sig_bdd_293;
reg    ap_sig_cseq_ST_st106_fsm_105;
reg    ap_sig_bdd_300;
wire   [63:0] grp_fu_270_p2;
reg   [63:0] reg_308;
reg    ap_sig_cseq_ST_st69_fsm_68;
reg    ap_sig_bdd_310;
reg    ap_sig_cseq_ST_st137_fsm_136;
reg    ap_sig_bdd_317;
wire   [31:0] grp_fu_259_p1;
reg   [31:0] reg_313;
reg    ap_sig_cseq_ST_st70_fsm_69;
reg    ap_sig_bdd_327;
reg    ap_sig_cseq_ST_st138_fsm_137;
reg    ap_sig_bdd_334;
wire   [9:0] j_1_fu_325_p2;
reg   [9:0] j_1_reg_483;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_344;
wire   [63:0] tmp_fu_331_p1;
reg   [63:0] tmp_reg_488;
wire   [0:0] exitcond4_fu_319_p2;
wire   [4:0] j_2_fu_342_p2;
reg   [4:0] j_2_reg_501;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_360;
reg   [4:0] hidden_addr_reg_506;
wire   [0:0] exitcond3_fu_336_p2;
wire   [14:0] tmp_2_trn_cast_fu_353_p1;
reg   [14:0] tmp_2_trn_cast_reg_511;
wire   [9:0] k_1_fu_363_p2;
reg   [9:0] k_1_reg_519;
wire   [14:0] next_mul_fu_374_p2;
reg   [14:0] next_mul_reg_529;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_384;
wire   [2:0] j_3_fu_411_p2;
reg   [2:0] j_3_reg_552;
reg    ap_sig_cseq_ST_st72_fsm_71;
reg    ap_sig_bdd_394;
reg   [1:0] output_addr_reg_557;
wire   [0:0] exitcond1_fu_405_p2;
wire   [7:0] tmp_4_trn_cast_fu_422_p1;
reg   [7:0] tmp_4_trn_cast_reg_562;
wire   [4:0] k_2_fu_432_p2;
reg   [4:0] k_2_reg_570;
reg    ap_sig_cseq_ST_st74_fsm_73;
reg    ap_sig_bdd_416;
reg   [9:0] j_reg_155;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_430;
reg   [4:0] j1_reg_166;
reg    ap_sig_cseq_ST_st71_fsm_70;
reg    ap_sig_bdd_439;
reg   [31:0] tmp_3_reg_177;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_451;
reg   [9:0] k_reg_189;
reg   [14:0] phi_mul_reg_200;
reg   [2:0] j2_reg_211;
reg    ap_sig_cseq_ST_st139_fsm_138;
reg    ap_sig_bdd_465;
reg   [31:0] tmp_12_reg_222;
reg    ap_sig_cseq_ST_st83_fsm_82;
reg    ap_sig_bdd_477;
reg   [4:0] k3_reg_234;
wire   [63:0] tmp_2_fu_348_p1;
wire   [63:0] tmp_1_fu_369_p1;
wire   [63:0] tmp_22_fu_385_p1;
wire   [63:0] tmp_4_fu_417_p1;
wire   [63:0] tmp_19_fu_438_p1;
wire   [63:0] tmp_24_fu_460_p1;
reg   [31:0] grp_fu_245_p0;
wire   [31:0] grp_fu_245_p1;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_508;
reg    ap_sig_cseq_ST_st78_fsm_77;
reg    ap_sig_bdd_515;
reg   [31:0] grp_fu_251_p0;
reg   [31:0] grp_fu_251_p1;
wire   [63:0] grp_fu_259_p0;
reg   [31:0] grp_fu_262_p0;
wire   [31:0] tmp_5_fu_400_p1;
wire   [31:0] tmp_13_fu_475_p1;
wire   [63:0] grp_fu_265_p0;
wire   [63:0] grp_fu_265_p1;
reg    ap_sig_cseq_ST_st34_fsm_33;
reg    ap_sig_bdd_532;
reg    ap_sig_cseq_ST_st102_fsm_101;
reg    ap_sig_bdd_539;
wire   [63:0] grp_fu_270_p0;
wire   [63:0] grp_fu_270_p1;
reg    ap_sig_cseq_ST_st39_fsm_38;
reg    ap_sig_bdd_549;
reg    ap_sig_cseq_ST_st107_fsm_106;
reg    ap_sig_bdd_556;
wire   [63:0] grp_fu_275_p1;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_565;
reg    ap_sig_cseq_ST_st84_fsm_83;
reg    ap_sig_bdd_572;
wire   [14:0] weightIH_addr2_fu_380_p2;
wire   [31:0] tmp_5_to_int_fu_390_p1;
wire   [31:0] tmp_5_neg_fu_394_p2;
wire   [6:0] tmp_23_fu_443_p3;
wire   [7:0] weightHO_addr3_cast_fu_451_p1;
wire   [7:0] weightHO_addr4_fu_455_p2;
wire   [31:0] tmp_13_to_int_fu_465_p1;
wire   [31:0] tmp_13_neg_fu_469_p2;
wire    grp_fu_245_ce;
wire    grp_fu_251_ce;
wire    grp_fu_265_ce;
wire    grp_fu_270_ce;
wire   [63:0] grp_fu_275_p0;
wire    grp_fu_275_ce;
reg   [138:0] ap_NS_fsm;


voicerec_feedForward_input_r #(
    .DataWidth( 32 ),
    .AddressRange( 883 ),
    .AddressWidth( 10 ))
input_r_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( input_r_address0 ),
    .ce0( input_r_ce0 ),
    .we0( input_r_we0 ),
    .d0( input_r_d0 ),
    .q0( input_r_q0 )
);

voicerec_processChunk_e #(
    .DataWidth( 32 ),
    .AddressRange( 26 ),
    .AddressWidth( 5 ))
hidden_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( hidden_address0 ),
    .ce0( hidden_ce0 ),
    .we0( hidden_we0 ),
    .d0( hidden_d0 ),
    .q0( hidden_q0 )
);

voicerec_feedForward_weightIH #(
    .DataWidth( 32 ),
    .AddressRange( 22075 ),
    .AddressWidth( 15 ))
weightIH_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( weightIH_address0 ),
    .ce0( weightIH_ce0 ),
    .q0( weightIH_q0 )
);

voicerec_feedForward_weightHO #(
    .DataWidth( 32 ),
    .AddressRange( 104 ),
    .AddressWidth( 7 ))
weightHO_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( weightHO_address0 ),
    .ce0( weightHO_ce0 ),
    .q0( weightHO_q0 )
);

voicerec_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_fadd_32ns_32ns_32_5_full_dsp_U34(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_245_p0 ),
    .din1( grp_fu_245_p1 ),
    .ce( grp_fu_245_ce ),
    .dout( grp_fu_245_p2 )
);

voicerec_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_fmul_32ns_32ns_32_4_max_dsp_U35(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_251_p0 ),
    .din1( grp_fu_251_p1 ),
    .ce( grp_fu_251_ce ),
    .dout( grp_fu_251_p2 )
);

voicerec_fptrunc_64ns_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
voicerec_fptrunc_64ns_32_1_U36(
    .din0( grp_fu_259_p0 ),
    .dout( grp_fu_259_p1 )
);

voicerec_fpext_32ns_64_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
voicerec_fpext_32ns_64_1_U37(
    .din0( grp_fu_262_p0 ),
    .dout( grp_fu_262_p1 )
);

voicerec_dadd_64ns_64ns_64_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
voicerec_dadd_64ns_64ns_64_5_full_dsp_U38(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_265_p0 ),
    .din1( grp_fu_265_p1 ),
    .ce( grp_fu_265_ce ),
    .dout( grp_fu_265_p2 )
);

voicerec_ddiv_64ns_64ns_64_31 #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
voicerec_ddiv_64ns_64ns_64_31_U39(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_270_p0 ),
    .din1( grp_fu_270_p1 ),
    .ce( grp_fu_270_ce ),
    .dout( grp_fu_270_p2 )
);

voicerec_dexp_64ns_64ns_64_18_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
voicerec_dexp_64ns_64ns_64_18_full_dsp_U40(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_275_p0 ),
    .din1( grp_fu_275_p1 ),
    .ce( grp_fu_275_ce ),
    .dout( grp_fu_275_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond4_fu_319_p2))) begin
        j1_reg_166 <= ap_const_lv5_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st71_fsm_70)) begin
        j1_reg_166 <= j_2_reg_501;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == exitcond3_fu_336_p2))) begin
        j2_reg_211 <= ap_const_lv3_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st139_fsm_138)) begin
        j2_reg_211 <= j_3_reg_552;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        j_reg_155 <= j_1_reg_483;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        j_reg_155 <= ap_const_lv10_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st83_fsm_82)) begin
        k3_reg_234 <= k_2_reg_570;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st72_fsm_71) & (ap_const_lv1_0 == exitcond1_fu_405_p2))) begin
        k3_reg_234 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        k_reg_189 <= k_1_reg_519;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond3_fu_336_p2))) begin
        k_reg_189 <= ap_const_lv10_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        phi_mul_reg_200 <= next_mul_reg_529;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond3_fu_336_p2))) begin
        phi_mul_reg_200 <= ap_const_lv15_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st83_fsm_82)) begin
        tmp_12_reg_222 <= reg_290;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st72_fsm_71) & (ap_const_lv1_0 == exitcond1_fu_405_p2))) begin
        tmp_12_reg_222 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        tmp_3_reg_177 <= reg_290;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond3_fu_336_p2))) begin
        tmp_3_reg_177 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond3_fu_336_p2))) begin
        hidden_addr_reg_506 <= tmp_2_fu_348_p1;
        tmp_2_trn_cast_reg_511[4 : 0] <= tmp_2_trn_cast_fu_353_p1[4 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        j_1_reg_483 <= j_1_fu_325_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        j_2_reg_501 <= j_2_fu_342_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st72_fsm_71)) begin
        j_3_reg_552 <= j_3_fu_411_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        k_1_reg_519 <= k_1_fu_363_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st73_fsm_72)) begin
        k_2_reg_570 <= k_2_fu_432_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (exitcond2_fu_357_p2 == ap_const_lv1_0))) begin
        next_mul_reg_529 <= next_mul_fu_374_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st72_fsm_71) & (ap_const_lv1_0 == exitcond1_fu_405_p2))) begin
        output_addr_reg_557 <= tmp_4_fu_417_p1;
        tmp_4_trn_cast_reg_562[2 : 0] <= tmp_4_trn_cast_fu_422_p1[2 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~(exitcond2_fu_357_p2 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st73_fsm_72) & ~(ap_const_lv1_0 == exitcond_fu_426_p2)))) begin
        reg_280 <= grp_fu_262_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_76))) begin
        reg_285 <= grp_fu_251_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) | (ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81))) begin
        reg_290 <= grp_fu_245_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) | (ap_const_logic_1 == ap_sig_cseq_ST_st101_fsm_100))) begin
        reg_298 <= grp_fu_275_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37) | (ap_const_logic_1 == ap_sig_cseq_ST_st106_fsm_105))) begin
        reg_303 <= grp_fu_265_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st69_fsm_68) | (ap_const_logic_1 == ap_sig_cseq_ST_st137_fsm_136))) begin
        reg_308 <= grp_fu_270_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st70_fsm_69) | (ap_const_logic_1 == ap_sig_cseq_ST_st138_fsm_137))) begin
        reg_313 <= grp_fu_259_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond4_fu_319_p2))) begin
        tmp_reg_488[9 : 0] <= tmp_fu_331_p1[9 : 0];
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st72_fsm_71 or exitcond1_fu_405_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st72_fsm_71) & ~(ap_const_lv1_0 == exitcond1_fu_405_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st72_fsm_71 or exitcond1_fu_405_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st72_fsm_71) & ~(ap_const_lv1_0 == exitcond1_fu_405_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st101_fsm_100 assign process. ///
always @ (ap_sig_bdd_283)
begin
    if (ap_sig_bdd_283) begin
        ap_sig_cseq_ST_st101_fsm_100 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st101_fsm_100 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st102_fsm_101 assign process. ///
always @ (ap_sig_bdd_539)
begin
    if (ap_sig_bdd_539) begin
        ap_sig_cseq_ST_st102_fsm_101 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st102_fsm_101 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st106_fsm_105 assign process. ///
always @ (ap_sig_bdd_300)
begin
    if (ap_sig_bdd_300) begin
        ap_sig_cseq_ST_st106_fsm_105 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st106_fsm_105 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st107_fsm_106 assign process. ///
always @ (ap_sig_bdd_556)
begin
    if (ap_sig_bdd_556) begin
        ap_sig_cseq_ST_st107_fsm_106 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st107_fsm_106 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st10_fsm_9 assign process. ///
always @ (ap_sig_bdd_508)
begin
    if (ap_sig_bdd_508) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st137_fsm_136 assign process. ///
always @ (ap_sig_bdd_317)
begin
    if (ap_sig_bdd_317) begin
        ap_sig_cseq_ST_st137_fsm_136 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st137_fsm_136 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st138_fsm_137 assign process. ///
always @ (ap_sig_bdd_334)
begin
    if (ap_sig_bdd_334) begin
        ap_sig_cseq_ST_st138_fsm_137 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st138_fsm_137 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st139_fsm_138 assign process. ///
always @ (ap_sig_bdd_465)
begin
    if (ap_sig_bdd_465) begin
        ap_sig_cseq_ST_st139_fsm_138 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st139_fsm_138 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st14_fsm_13 assign process. ///
always @ (ap_sig_bdd_259)
begin
    if (ap_sig_bdd_259) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st15_fsm_14 assign process. ///
always @ (ap_sig_bdd_451)
begin
    if (ap_sig_bdd_451) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st16_fsm_15 assign process. ///
always @ (ap_sig_bdd_565)
begin
    if (ap_sig_bdd_565) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_157)
begin
    if (ap_sig_bdd_157) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_344)
begin
    if (ap_sig_bdd_344) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st33_fsm_32 assign process. ///
always @ (ap_sig_bdd_276)
begin
    if (ap_sig_bdd_276) begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st34_fsm_33 assign process. ///
always @ (ap_sig_bdd_532)
begin
    if (ap_sig_bdd_532) begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st38_fsm_37 assign process. ///
always @ (ap_sig_bdd_293)
begin
    if (ap_sig_bdd_293) begin
        ap_sig_cseq_ST_st38_fsm_37 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st38_fsm_37 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st39_fsm_38 assign process. ///
always @ (ap_sig_bdd_549)
begin
    if (ap_sig_bdd_549) begin
        ap_sig_cseq_ST_st39_fsm_38 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st39_fsm_38 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_430)
begin
    if (ap_sig_bdd_430) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_360)
begin
    if (ap_sig_bdd_360) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_216)
begin
    if (ap_sig_bdd_216) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st69_fsm_68 assign process. ///
always @ (ap_sig_bdd_310)
begin
    if (ap_sig_bdd_310) begin
        ap_sig_cseq_ST_st69_fsm_68 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st69_fsm_68 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_384)
begin
    if (ap_sig_bdd_384) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st70_fsm_69 assign process. ///
always @ (ap_sig_bdd_327)
begin
    if (ap_sig_bdd_327) begin
        ap_sig_cseq_ST_st70_fsm_69 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st70_fsm_69 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st71_fsm_70 assign process. ///
always @ (ap_sig_bdd_439)
begin
    if (ap_sig_bdd_439) begin
        ap_sig_cseq_ST_st71_fsm_70 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st71_fsm_70 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st72_fsm_71 assign process. ///
always @ (ap_sig_bdd_394)
begin
    if (ap_sig_bdd_394) begin
        ap_sig_cseq_ST_st72_fsm_71 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st72_fsm_71 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st73_fsm_72 assign process. ///
always @ (ap_sig_bdd_228)
begin
    if (ap_sig_bdd_228) begin
        ap_sig_cseq_ST_st73_fsm_72 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st73_fsm_72 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st74_fsm_73 assign process. ///
always @ (ap_sig_bdd_416)
begin
    if (ap_sig_bdd_416) begin
        ap_sig_cseq_ST_st74_fsm_73 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st74_fsm_73 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st77_fsm_76 assign process. ///
always @ (ap_sig_bdd_249)
begin
    if (ap_sig_bdd_249) begin
        ap_sig_cseq_ST_st77_fsm_76 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st77_fsm_76 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st78_fsm_77 assign process. ///
always @ (ap_sig_bdd_515)
begin
    if (ap_sig_bdd_515) begin
        ap_sig_cseq_ST_st78_fsm_77 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st78_fsm_77 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st82_fsm_81 assign process. ///
always @ (ap_sig_bdd_266)
begin
    if (ap_sig_bdd_266) begin
        ap_sig_cseq_ST_st82_fsm_81 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st82_fsm_81 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st83_fsm_82 assign process. ///
always @ (ap_sig_bdd_477)
begin
    if (ap_sig_bdd_477) begin
        ap_sig_cseq_ST_st83_fsm_82 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st83_fsm_82 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st84_fsm_83 assign process. ///
always @ (ap_sig_bdd_572)
begin
    if (ap_sig_bdd_572) begin
        ap_sig_cseq_ST_st84_fsm_83 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st84_fsm_83 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_242)
begin
    if (ap_sig_bdd_242) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

/// grp_fu_245_p0 assign process. ///
always @ (tmp_3_reg_177 or tmp_12_reg_222 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st78_fsm_77)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_77)) begin
        grp_fu_245_p0 = tmp_12_reg_222;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        grp_fu_245_p0 = tmp_3_reg_177;
    end else begin
        grp_fu_245_p0 = 'bx;
    end
end

/// grp_fu_251_p0 assign process. ///
always @ (input_r_q0 or hidden_q0 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st74_fsm_73)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st74_fsm_73)) begin
        grp_fu_251_p0 = hidden_q0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        grp_fu_251_p0 = input_r_q0;
    end else begin
        grp_fu_251_p0 = 'bx;
    end
end

/// grp_fu_251_p1 assign process. ///
always @ (weightIH_q0 or weightHO_q0 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st74_fsm_73)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st74_fsm_73)) begin
        grp_fu_251_p1 = weightHO_q0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        grp_fu_251_p1 = weightIH_q0;
    end else begin
        grp_fu_251_p1 = 'bx;
    end
end

/// grp_fu_262_p0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st73_fsm_72 or tmp_5_fu_400_p1 or tmp_13_fu_475_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st73_fsm_72)) begin
        grp_fu_262_p0 = tmp_13_fu_475_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        grp_fu_262_p0 = tmp_5_fu_400_p1;
    end else begin
        grp_fu_262_p0 = 'bx;
    end
end

/// hidden_address0 assign process. ///
always @ (ap_sig_cseq_ST_st73_fsm_72 or ap_sig_cseq_ST_st4_fsm_3 or hidden_addr_reg_506 or ap_sig_cseq_ST_st71_fsm_70 or ap_sig_cseq_ST_st15_fsm_14 or tmp_2_fu_348_p1 or tmp_19_fu_438_p1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st71_fsm_70) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14))) begin
        hidden_address0 = hidden_addr_reg_506;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        hidden_address0 = tmp_2_fu_348_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st73_fsm_72)) begin
        hidden_address0 = tmp_19_fu_438_p1;
    end else begin
        hidden_address0 = 'bx;
    end
end

/// hidden_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st73_fsm_72 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st71_fsm_70 or ap_sig_cseq_ST_st15_fsm_14)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st73_fsm_72) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st71_fsm_70) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14))) begin
        hidden_ce0 = ap_const_logic_1;
    end else begin
        hidden_ce0 = ap_const_logic_0;
    end
end

/// hidden_d0 assign process. ///
always @ (reg_290 or reg_313 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st71_fsm_70 or ap_sig_cseq_ST_st15_fsm_14)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st71_fsm_70)) begin
        hidden_d0 = reg_313;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        hidden_d0 = reg_290;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        hidden_d0 = ap_const_lv32_0;
    end else begin
        hidden_d0 = 'bx;
    end
end

/// hidden_we0 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3 or exitcond3_fu_336_p2 or ap_sig_cseq_ST_st71_fsm_70 or ap_sig_cseq_ST_st15_fsm_14)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond3_fu_336_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st71_fsm_70) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14))) begin
        hidden_we0 = ap_const_logic_1;
    end else begin
        hidden_we0 = ap_const_logic_0;
    end
end

/// input_r_address0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or tmp_reg_488 or ap_sig_cseq_ST_st3_fsm_2 or tmp_1_fu_369_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        input_r_address0 = tmp_reg_488;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        input_r_address0 = tmp_1_fu_369_p1;
    end else begin
        input_r_address0 = 'bx;
    end
end

/// input_r_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st3_fsm_2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2))) begin
        input_r_ce0 = ap_const_logic_1;
    end else begin
        input_r_ce0 = ap_const_logic_0;
    end
end

/// input_r_we0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        input_r_we0 = ap_const_logic_1;
    end else begin
        input_r_we0 = ap_const_logic_0;
    end
end

/// output_r_address0 assign process. ///
always @ (ap_sig_cseq_ST_st72_fsm_71 or output_addr_reg_557 or ap_sig_cseq_ST_st139_fsm_138 or ap_sig_cseq_ST_st83_fsm_82 or tmp_4_fu_417_p1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st139_fsm_138) | (ap_const_logic_1 == ap_sig_cseq_ST_st83_fsm_82))) begin
        output_r_address0 = output_addr_reg_557;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st72_fsm_71)) begin
        output_r_address0 = tmp_4_fu_417_p1;
    end else begin
        output_r_address0 = 'bx;
    end
end

/// output_r_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st72_fsm_71 or ap_sig_cseq_ST_st139_fsm_138 or ap_sig_cseq_ST_st83_fsm_82)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st72_fsm_71) | (ap_const_logic_1 == ap_sig_cseq_ST_st139_fsm_138) | (ap_const_logic_1 == ap_sig_cseq_ST_st83_fsm_82))) begin
        output_r_ce0 = ap_const_logic_1;
    end else begin
        output_r_ce0 = ap_const_logic_0;
    end
end

/// output_r_d0 assign process. ///
always @ (reg_290 or reg_313 or ap_sig_cseq_ST_st72_fsm_71 or ap_sig_cseq_ST_st139_fsm_138 or ap_sig_cseq_ST_st83_fsm_82)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st139_fsm_138)) begin
        output_r_d0 = reg_313;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st83_fsm_82)) begin
        output_r_d0 = reg_290;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st72_fsm_71)) begin
        output_r_d0 = ap_const_lv32_0;
    end else begin
        output_r_d0 = 'bx;
    end
end

/// output_r_we0 assign process. ///
always @ (ap_sig_cseq_ST_st72_fsm_71 or exitcond1_fu_405_p2 or ap_sig_cseq_ST_st139_fsm_138 or ap_sig_cseq_ST_st83_fsm_82)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st72_fsm_71) & (ap_const_lv1_0 == exitcond1_fu_405_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st139_fsm_138) | (ap_const_logic_1 == ap_sig_cseq_ST_st83_fsm_82))) begin
        output_r_we0 = ap_const_logic_1;
    end else begin
        output_r_we0 = ap_const_logic_0;
    end
end

/// pattern_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        pattern_ce0 = ap_const_logic_1;
    end else begin
        pattern_ce0 = ap_const_logic_0;
    end
end

/// weightHO_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st73_fsm_72)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st73_fsm_72)) begin
        weightHO_ce0 = ap_const_logic_1;
    end else begin
        weightHO_ce0 = ap_const_logic_0;
    end
end

/// weightIH_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        weightIH_ce0 = ap_const_logic_1;
    end else begin
        weightIH_ce0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond2_fu_357_p2 or exitcond_fu_426_p2 or exitcond4_fu_319_p2 or exitcond3_fu_336_p2 or exitcond1_fu_405_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_lv1_0 == exitcond4_fu_319_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st4_fsm_3 : 
        begin
            if ((ap_const_lv1_0 == exitcond3_fu_336_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st72_fsm_71;
            end
        end
        ap_ST_st5_fsm_4 : 
        begin
            if (~(exitcond2_fu_357_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : 
        begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : 
        begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : 
        begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : 
        begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : 
        begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : 
        begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : 
        begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : 
        begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : 
        begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : 
        begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : 
        begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : 
        begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : 
        begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : 
        begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : 
        begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : 
        begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st66_fsm_65 : 
        begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : 
        begin
            ap_NS_fsm = ap_ST_st68_fsm_67;
        end
        ap_ST_st68_fsm_67 : 
        begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : 
        begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st70_fsm_69 : 
        begin
            ap_NS_fsm = ap_ST_st71_fsm_70;
        end
        ap_ST_st71_fsm_70 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st72_fsm_71 : 
        begin
            if (~(ap_const_lv1_0 == exitcond1_fu_405_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st73_fsm_72;
            end
        end
        ap_ST_st73_fsm_72 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_fu_426_p2)) begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end else begin
                ap_NS_fsm = ap_ST_st74_fsm_73;
            end
        end
        ap_ST_st74_fsm_73 : 
        begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : 
        begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st76_fsm_75 : 
        begin
            ap_NS_fsm = ap_ST_st77_fsm_76;
        end
        ap_ST_st77_fsm_76 : 
        begin
            ap_NS_fsm = ap_ST_st78_fsm_77;
        end
        ap_ST_st78_fsm_77 : 
        begin
            ap_NS_fsm = ap_ST_st79_fsm_78;
        end
        ap_ST_st79_fsm_78 : 
        begin
            ap_NS_fsm = ap_ST_st80_fsm_79;
        end
        ap_ST_st80_fsm_79 : 
        begin
            ap_NS_fsm = ap_ST_st81_fsm_80;
        end
        ap_ST_st81_fsm_80 : 
        begin
            ap_NS_fsm = ap_ST_st82_fsm_81;
        end
        ap_ST_st82_fsm_81 : 
        begin
            ap_NS_fsm = ap_ST_st83_fsm_82;
        end
        ap_ST_st83_fsm_82 : 
        begin
            ap_NS_fsm = ap_ST_st73_fsm_72;
        end
        ap_ST_st84_fsm_83 : 
        begin
            ap_NS_fsm = ap_ST_st85_fsm_84;
        end
        ap_ST_st85_fsm_84 : 
        begin
            ap_NS_fsm = ap_ST_st86_fsm_85;
        end
        ap_ST_st86_fsm_85 : 
        begin
            ap_NS_fsm = ap_ST_st87_fsm_86;
        end
        ap_ST_st87_fsm_86 : 
        begin
            ap_NS_fsm = ap_ST_st88_fsm_87;
        end
        ap_ST_st88_fsm_87 : 
        begin
            ap_NS_fsm = ap_ST_st89_fsm_88;
        end
        ap_ST_st89_fsm_88 : 
        begin
            ap_NS_fsm = ap_ST_st90_fsm_89;
        end
        ap_ST_st90_fsm_89 : 
        begin
            ap_NS_fsm = ap_ST_st91_fsm_90;
        end
        ap_ST_st91_fsm_90 : 
        begin
            ap_NS_fsm = ap_ST_st92_fsm_91;
        end
        ap_ST_st92_fsm_91 : 
        begin
            ap_NS_fsm = ap_ST_st93_fsm_92;
        end
        ap_ST_st93_fsm_92 : 
        begin
            ap_NS_fsm = ap_ST_st94_fsm_93;
        end
        ap_ST_st94_fsm_93 : 
        begin
            ap_NS_fsm = ap_ST_st95_fsm_94;
        end
        ap_ST_st95_fsm_94 : 
        begin
            ap_NS_fsm = ap_ST_st96_fsm_95;
        end
        ap_ST_st96_fsm_95 : 
        begin
            ap_NS_fsm = ap_ST_st97_fsm_96;
        end
        ap_ST_st97_fsm_96 : 
        begin
            ap_NS_fsm = ap_ST_st98_fsm_97;
        end
        ap_ST_st98_fsm_97 : 
        begin
            ap_NS_fsm = ap_ST_st99_fsm_98;
        end
        ap_ST_st99_fsm_98 : 
        begin
            ap_NS_fsm = ap_ST_st100_fsm_99;
        end
        ap_ST_st100_fsm_99 : 
        begin
            ap_NS_fsm = ap_ST_st101_fsm_100;
        end
        ap_ST_st101_fsm_100 : 
        begin
            ap_NS_fsm = ap_ST_st102_fsm_101;
        end
        ap_ST_st102_fsm_101 : 
        begin
            ap_NS_fsm = ap_ST_st103_fsm_102;
        end
        ap_ST_st103_fsm_102 : 
        begin
            ap_NS_fsm = ap_ST_st104_fsm_103;
        end
        ap_ST_st104_fsm_103 : 
        begin
            ap_NS_fsm = ap_ST_st105_fsm_104;
        end
        ap_ST_st105_fsm_104 : 
        begin
            ap_NS_fsm = ap_ST_st106_fsm_105;
        end
        ap_ST_st106_fsm_105 : 
        begin
            ap_NS_fsm = ap_ST_st107_fsm_106;
        end
        ap_ST_st107_fsm_106 : 
        begin
            ap_NS_fsm = ap_ST_st108_fsm_107;
        end
        ap_ST_st108_fsm_107 : 
        begin
            ap_NS_fsm = ap_ST_st109_fsm_108;
        end
        ap_ST_st109_fsm_108 : 
        begin
            ap_NS_fsm = ap_ST_st110_fsm_109;
        end
        ap_ST_st110_fsm_109 : 
        begin
            ap_NS_fsm = ap_ST_st111_fsm_110;
        end
        ap_ST_st111_fsm_110 : 
        begin
            ap_NS_fsm = ap_ST_st112_fsm_111;
        end
        ap_ST_st112_fsm_111 : 
        begin
            ap_NS_fsm = ap_ST_st113_fsm_112;
        end
        ap_ST_st113_fsm_112 : 
        begin
            ap_NS_fsm = ap_ST_st114_fsm_113;
        end
        ap_ST_st114_fsm_113 : 
        begin
            ap_NS_fsm = ap_ST_st115_fsm_114;
        end
        ap_ST_st115_fsm_114 : 
        begin
            ap_NS_fsm = ap_ST_st116_fsm_115;
        end
        ap_ST_st116_fsm_115 : 
        begin
            ap_NS_fsm = ap_ST_st117_fsm_116;
        end
        ap_ST_st117_fsm_116 : 
        begin
            ap_NS_fsm = ap_ST_st118_fsm_117;
        end
        ap_ST_st118_fsm_117 : 
        begin
            ap_NS_fsm = ap_ST_st119_fsm_118;
        end
        ap_ST_st119_fsm_118 : 
        begin
            ap_NS_fsm = ap_ST_st120_fsm_119;
        end
        ap_ST_st120_fsm_119 : 
        begin
            ap_NS_fsm = ap_ST_st121_fsm_120;
        end
        ap_ST_st121_fsm_120 : 
        begin
            ap_NS_fsm = ap_ST_st122_fsm_121;
        end
        ap_ST_st122_fsm_121 : 
        begin
            ap_NS_fsm = ap_ST_st123_fsm_122;
        end
        ap_ST_st123_fsm_122 : 
        begin
            ap_NS_fsm = ap_ST_st124_fsm_123;
        end
        ap_ST_st124_fsm_123 : 
        begin
            ap_NS_fsm = ap_ST_st125_fsm_124;
        end
        ap_ST_st125_fsm_124 : 
        begin
            ap_NS_fsm = ap_ST_st126_fsm_125;
        end
        ap_ST_st126_fsm_125 : 
        begin
            ap_NS_fsm = ap_ST_st127_fsm_126;
        end
        ap_ST_st127_fsm_126 : 
        begin
            ap_NS_fsm = ap_ST_st128_fsm_127;
        end
        ap_ST_st128_fsm_127 : 
        begin
            ap_NS_fsm = ap_ST_st129_fsm_128;
        end
        ap_ST_st129_fsm_128 : 
        begin
            ap_NS_fsm = ap_ST_st130_fsm_129;
        end
        ap_ST_st130_fsm_129 : 
        begin
            ap_NS_fsm = ap_ST_st131_fsm_130;
        end
        ap_ST_st131_fsm_130 : 
        begin
            ap_NS_fsm = ap_ST_st132_fsm_131;
        end
        ap_ST_st132_fsm_131 : 
        begin
            ap_NS_fsm = ap_ST_st133_fsm_132;
        end
        ap_ST_st133_fsm_132 : 
        begin
            ap_NS_fsm = ap_ST_st134_fsm_133;
        end
        ap_ST_st134_fsm_133 : 
        begin
            ap_NS_fsm = ap_ST_st135_fsm_134;
        end
        ap_ST_st135_fsm_134 : 
        begin
            ap_NS_fsm = ap_ST_st136_fsm_135;
        end
        ap_ST_st136_fsm_135 : 
        begin
            ap_NS_fsm = ap_ST_st137_fsm_136;
        end
        ap_ST_st137_fsm_136 : 
        begin
            ap_NS_fsm = ap_ST_st138_fsm_137;
        end
        ap_ST_st138_fsm_137 : 
        begin
            ap_NS_fsm = ap_ST_st139_fsm_138;
        end
        ap_ST_st139_fsm_138 : 
        begin
            ap_NS_fsm = ap_ST_st72_fsm_71;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_157 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_157 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_216 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_216 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_228 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_228 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_48]);
end

/// ap_sig_bdd_242 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_242 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_249 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_249 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4C]);
end

/// ap_sig_bdd_259 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_259 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_266 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_266 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_51]);
end

/// ap_sig_bdd_276 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_276 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_20]);
end

/// ap_sig_bdd_283 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_283 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_64]);
end

/// ap_sig_bdd_293 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_293 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_25]);
end

/// ap_sig_bdd_300 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_300 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_69]);
end

/// ap_sig_bdd_310 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_310 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_44]);
end

/// ap_sig_bdd_317 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_317 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_88]);
end

/// ap_sig_bdd_327 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_327 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_45]);
end

/// ap_sig_bdd_334 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_334 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_89]);
end

/// ap_sig_bdd_344 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_344 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_360 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_360 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_384 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_384 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_394 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_394 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_47]);
end

/// ap_sig_bdd_416 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_416 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_49]);
end

/// ap_sig_bdd_430 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_430 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_439 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_439 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_46]);
end

/// ap_sig_bdd_451 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_451 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end

/// ap_sig_bdd_465 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_465 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8A]);
end

/// ap_sig_bdd_477 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_477 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_52]);
end

/// ap_sig_bdd_508 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_508 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_515 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_515 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4D]);
end

/// ap_sig_bdd_532 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_532 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_21]);
end

/// ap_sig_bdd_539 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_539 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_65]);
end

/// ap_sig_bdd_549 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_549 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_26]);
end

/// ap_sig_bdd_556 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_556 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6A]);
end

/// ap_sig_bdd_565 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_565 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end

/// ap_sig_bdd_572 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_572 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_53]);
end
assign exitcond1_fu_405_p2 = (j2_reg_211 == ap_const_lv3_4? 1'b1: 1'b0);
assign exitcond2_fu_357_p2 = (k_reg_189 == ap_const_lv10_373? 1'b1: 1'b0);
assign exitcond3_fu_336_p2 = (j1_reg_166 == ap_const_lv5_19? 1'b1: 1'b0);
assign exitcond4_fu_319_p2 = (j_reg_155 == ap_const_lv10_372? 1'b1: 1'b0);
assign exitcond_fu_426_p2 = (k3_reg_234 == ap_const_lv5_1A? 1'b1: 1'b0);
assign grp_fu_245_ce = ap_const_logic_1;
assign grp_fu_245_p1 = reg_285;
assign grp_fu_251_ce = ap_const_logic_1;
assign grp_fu_259_p0 = reg_308;
assign grp_fu_265_ce = ap_const_logic_1;
assign grp_fu_265_p0 = reg_298;
assign grp_fu_265_p1 = ap_const_lv64_3FF0000000000000;
assign grp_fu_270_ce = ap_const_logic_1;
assign grp_fu_270_p0 = ap_const_lv64_3FF0000000000000;
assign grp_fu_270_p1 = reg_303;
assign grp_fu_275_ce = ap_const_logic_1;
assign grp_fu_275_p0 = ap_const_lv64_0;
assign grp_fu_275_p1 = reg_280;
assign input_r_d0 = pattern_q0;
assign j_1_fu_325_p2 = (j_reg_155 + ap_const_lv10_1);
assign j_2_fu_342_p2 = (j1_reg_166 + ap_const_lv5_1);
assign j_3_fu_411_p2 = (j2_reg_211 + ap_const_lv3_1);
assign k_1_fu_363_p2 = (k_reg_189 + ap_const_lv10_1);
assign k_2_fu_432_p2 = (k3_reg_234 + ap_const_lv5_1);
assign next_mul_fu_374_p2 = (phi_mul_reg_200 + ap_const_lv15_19);
assign pattern_address0 = tmp_fu_331_p1;
assign tmp_13_fu_475_p1 = tmp_13_neg_fu_469_p2;
assign tmp_13_neg_fu_469_p2 = (tmp_13_to_int_fu_465_p1 ^ ap_const_lv32_80000000);
assign tmp_13_to_int_fu_465_p1 = tmp_12_reg_222;
assign tmp_19_fu_438_p1 = k3_reg_234;
assign tmp_1_fu_369_p1 = k_reg_189;
assign tmp_22_fu_385_p1 = weightIH_addr2_fu_380_p2;
assign tmp_23_fu_443_p3 = {{k3_reg_234}, {ap_const_lv2_0}};
assign tmp_24_fu_460_p1 = weightHO_addr4_fu_455_p2;
assign tmp_2_fu_348_p1 = j1_reg_166;
assign tmp_2_trn_cast_fu_353_p1 = j1_reg_166;
assign tmp_4_fu_417_p1 = j2_reg_211;
assign tmp_4_trn_cast_fu_422_p1 = j2_reg_211;
assign tmp_5_fu_400_p1 = tmp_5_neg_fu_394_p2;
assign tmp_5_neg_fu_394_p2 = (tmp_5_to_int_fu_390_p1 ^ ap_const_lv32_80000000);
assign tmp_5_to_int_fu_390_p1 = tmp_3_reg_177;
assign tmp_fu_331_p1 = j_reg_155;
assign weightHO_addr3_cast_fu_451_p1 = tmp_23_fu_443_p3;
assign weightHO_addr4_fu_455_p2 = (tmp_4_trn_cast_reg_562 + weightHO_addr3_cast_fu_451_p1);
assign weightHO_address0 = tmp_24_fu_460_p1;
assign weightIH_addr2_fu_380_p2 = (tmp_2_trn_cast_reg_511 + phi_mul_reg_200);
assign weightIH_address0 = tmp_22_fu_385_p1;
always @ (posedge ap_clk)
begin
    tmp_reg_488[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    tmp_2_trn_cast_reg_511[14:5] <= 10'b0000000000;
    tmp_4_trn_cast_reg_562[7:3] <= 5'b00000;
end



endmodule //voicerec_feedForward

