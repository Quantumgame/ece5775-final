-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.3
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity voicerec_preprocessSound is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_inSound_AWVALID : OUT STD_LOGIC;
    m_axi_inSound_AWREADY : IN STD_LOGIC;
    m_axi_inSound_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_inSound_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_inSound_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_inSound_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_inSound_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_inSound_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_inSound_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_inSound_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_inSound_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_inSound_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_inSound_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_inSound_WVALID : OUT STD_LOGIC;
    m_axi_inSound_WREADY : IN STD_LOGIC;
    m_axi_inSound_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_inSound_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_inSound_WLAST : OUT STD_LOGIC;
    m_axi_inSound_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_inSound_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_inSound_ARVALID : OUT STD_LOGIC;
    m_axi_inSound_ARREADY : IN STD_LOGIC;
    m_axi_inSound_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_inSound_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_inSound_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_inSound_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_inSound_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_inSound_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_inSound_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_inSound_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_inSound_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_inSound_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_inSound_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_inSound_RVALID : IN STD_LOGIC;
    m_axi_inSound_RREADY : OUT STD_LOGIC;
    m_axi_inSound_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_inSound_RLAST : IN STD_LOGIC;
    m_axi_inSound_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_inSound_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_inSound_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_inSound_BVALID : IN STD_LOGIC;
    m_axi_inSound_BREADY : OUT STD_LOGIC;
    m_axi_inSound_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_inSound_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_inSound_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    outSound_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    outSound_ce0 : OUT STD_LOGIC;
    outSound_we0 : OUT STD_LOGIC;
    outSound_d0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of voicerec_preprocessSound is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000100000000000000000";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000001000000000000000000";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000010000000000000000000";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000100000000000000000000";
    constant ap_ST_st22_fsm_21 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000001000000000000000000000";
    constant ap_ST_st23_fsm_22 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000010000000000000000000000";
    constant ap_ST_st24_fsm_23 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000100000000000000000000000";
    constant ap_ST_st25_fsm_24 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000001000000000000000000000000";
    constant ap_ST_st26_fsm_25 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000010000000000000000000000000";
    constant ap_ST_st27_fsm_26 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000100000000000000000000000000";
    constant ap_ST_st28_fsm_27 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000001000000000000000000000000000";
    constant ap_ST_st29_fsm_28 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000010000000000000000000000000000";
    constant ap_ST_st30_fsm_29 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000100000000000000000000000000000";
    constant ap_ST_st31_fsm_30 : STD_LOGIC_VECTOR (40 downto 0) := "00000000001000000000000000000000000000000";
    constant ap_ST_st32_fsm_31 : STD_LOGIC_VECTOR (40 downto 0) := "00000000010000000000000000000000000000000";
    constant ap_ST_st33_fsm_32 : STD_LOGIC_VECTOR (40 downto 0) := "00000000100000000000000000000000000000000";
    constant ap_ST_st34_fsm_33 : STD_LOGIC_VECTOR (40 downto 0) := "00000001000000000000000000000000000000000";
    constant ap_ST_st35_fsm_34 : STD_LOGIC_VECTOR (40 downto 0) := "00000010000000000000000000000000000000000";
    constant ap_ST_st36_fsm_35 : STD_LOGIC_VECTOR (40 downto 0) := "00000100000000000000000000000000000000000";
    constant ap_ST_st37_fsm_36 : STD_LOGIC_VECTOR (40 downto 0) := "00001000000000000000000000000000000000000";
    constant ap_ST_st38_fsm_37 : STD_LOGIC_VECTOR (40 downto 0) := "00010000000000000000000000000000000000000";
    constant ap_ST_st39_fsm_38 : STD_LOGIC_VECTOR (40 downto 0) := "00100000000000000000000000000000000000000";
    constant ap_ST_st40_fsm_39 : STD_LOGIC_VECTOR (40 downto 0) := "01000000000000000000000000000000000000000";
    constant ap_ST_st41_fsm_40 : STD_LOGIC_VECTOR (40 downto 0) := "10000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv14_3E80 : STD_LOGIC_VECTOR (13 downto 0) := "11111010000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_3E80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000011111010000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv64_3FC3333333333333 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111000011001100110011001100110011001100110011001100110011";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv15_7FFF : STD_LOGIC_VECTOR (14 downto 0) := "111111111111111";
    constant ap_const_lv32_C8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001000";
    constant ap_const_lv32_1F40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001111101000000";
    constant ap_const_lv32_1F3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001111100111111";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_59 : BOOLEAN;
    signal reg_258 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_bdd_129 : BOOLEAN;
    signal tmp_fu_264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_137 : BOOLEAN;
    signal ap_sig_cseq_ST_st17_fsm_16 : STD_LOGIC;
    signal ap_sig_bdd_146 : BOOLEAN;
    signal ap_sig_cseq_ST_st26_fsm_25 : STD_LOGIC;
    signal ap_sig_bdd_156 : BOOLEAN;
    signal ap_sig_cseq_ST_st40_fsm_39 : STD_LOGIC;
    signal ap_sig_bdd_165 : BOOLEAN;
    signal tmp_reg_756 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_270_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_reg_760 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_19_fu_312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_765 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_bdd_179 : BOOLEAN;
    signal last_2_fu_322_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal last_2_reg_769 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_bdd_188 : BOOLEAN;
    signal last_2_cast5_fu_328_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal last_2_cast5_reg_774 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_332_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_25_reg_779 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_47_fu_336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_784 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_bdd_203 : BOOLEAN;
    signal ap_sig_ioackin_m_axi_inSound_ARREADY : STD_LOGIC;
    signal tmp_24_fu_388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_794 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st18_fsm_17 : STD_LOGIC;
    signal ap_sig_bdd_216 : BOOLEAN;
    signal i_5_fu_404_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_5_reg_822 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_sig_cseq_ST_st20_fsm_19 : STD_LOGIC;
    signal ap_sig_bdd_225 : BOOLEAN;
    signal exitcond1_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_827 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_844 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st27_fsm_26 : STD_LOGIC;
    signal ap_sig_bdd_247 : BOOLEAN;
    signal tmp_36_fu_503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_reg_848 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_reg_853 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_8_fu_561_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal j_8_reg_860 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_sig_cseq_ST_st28_fsm_27 : STD_LOGIC;
    signal ap_sig_bdd_264 : BOOLEAN;
    signal exitcond_fu_555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_fu_585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_m_axi_inSound_AWREADY : STD_LOGIC;
    signal or_cond4_reg_865 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_4_fu_628_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_4_reg_877 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_sig_cseq_ST_st34_fsm_33 : STD_LOGIC;
    signal ap_sig_bdd_299 : BOOLEAN;
    signal exitcond2_fu_622_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond6_fu_658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond6_reg_882 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_reg_138 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_322 : BOOLEAN;
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_bdd_329 : BOOLEAN;
    signal first1_reg_150 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_1_in_reg_163 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_sig_cseq_ST_st19_fsm_18 : STD_LOGIC;
    signal ap_sig_bdd_352 : BOOLEAN;
    signal last_reg_174 : STD_LOGIC_VECTOR (14 downto 0);
    signal markBegin_2_reg_186 : STD_LOGIC_VECTOR (13 downto 0);
    signal j9_reg_198 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_sig_cseq_ST_st33_fsm_32 : STD_LOGIC;
    signal ap_sig_bdd_388 : BOOLEAN;
    signal ap_sig_bdd_394 : BOOLEAN;
    signal i_3_reg_209 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_sig_cseq_ST_st41_fsm_40 : STD_LOGIC;
    signal ap_sig_bdd_411 : BOOLEAN;
    signal tmp_59_fu_687_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_cond7_fu_681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_fu_751_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_fu_745_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_342_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_57_fu_428_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_65_fu_591_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_56_fu_664_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_m_axi_inSound_ARREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_m_axi_inSound_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_m_axi_inSound_WREADY : STD_LOGIC := '0';
    signal ap_sig_ioackin_m_axi_inSound_WREADY : STD_LOGIC;
    signal ap_sig_cseq_ST_st29_fsm_28 : STD_LOGIC;
    signal ap_sig_bdd_478 : BOOLEAN;
    signal deleteFlag_fu_82 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_deleteFlag_fu_533_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal count_fu_86 : STD_LOGIC_VECTOR (31 downto 0);
    signal count_1_fu_521_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal markBegin_fu_90 : STD_LOGIC_VECTOR (31 downto 0);
    signal markBegin_1_cast_fu_609_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_fu_94 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_247_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_220_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_i_i_i_i_i_fu_470_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_i_i_i_i_i2_fu_712_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_220_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal inSound_load_to_int_fu_276_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_280_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_21_fu_290_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal notrhs1_fu_300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs1_fu_294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_in_cast_fu_318_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal inSound_load_1_to_int_fu_352_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_fu_356_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_26_fu_366_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal notrhs2_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs2_fu_370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal markBegin_2_cast_fu_394_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_49_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_fu_450_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_fu_454_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_s_fu_462_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_33_fu_475_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_32_fu_458_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal notrhs4_fu_491_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs4_fu_485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_fu_527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j9_cast3_fu_551_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal slt_fu_567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_fu_579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal markBegin_1_fu_602_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_3_cast_fu_618_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_52_fu_640_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_fu_634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_fu_675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_1_fu_692_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_fu_696_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_1_fu_704_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_fu_717_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_38_fu_700_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal notrhs3_fu_733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs3_fu_727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_220_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (40 downto 0);
    signal ap_sig_bdd_434 : BOOLEAN;
    signal ap_sig_bdd_441 : BOOLEAN;
    signal ap_sig_bdd_432 : BOOLEAN;
    signal ap_sig_bdd_436 : BOOLEAN;

    component voicerec_dcmp_64ns_64ns_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    voicerec_dcmp_64ns_64ns_1_1_U1 : component voicerec_dcmp_64ns_64ns_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_220_p0,
        din1 => grp_fu_220_p1,
        opcode => grp_fu_220_opcode,
        dout => grp_fu_220_p2);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_m_axi_inSound_ARREADY assign process. --
    ap_reg_ioackin_m_axi_inSound_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_inSound_ARREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_ARREADY))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) and (ap_const_lv1_0 = exitcond1_fu_398_p2) and (ap_const_lv1_0 = or_cond_fu_422_p2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_ARREADY) and (ap_const_lv1_0 = exitcond1_fu_398_p2) and (ap_const_lv1_0 = or_cond_fu_422_p2)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33) and (ap_const_lv1_0 = exitcond2_fu_622_p2) and (ap_const_lv1_0 = or_cond6_fu_658_p2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_ARREADY) and (ap_const_lv1_0 = exitcond2_fu_622_p2) and (ap_const_lv1_0 = or_cond6_fu_658_p2)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_ARREADY) or (ap_start = ap_const_logic_0)))))) then 
                    ap_reg_ioackin_m_axi_inSound_ARREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and (ap_const_logic_1 = m_axi_inSound_ARREADY) and not((ap_start = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and (ap_const_logic_1 = m_axi_inSound_ARREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) and (ap_const_lv1_0 = exitcond1_fu_398_p2) and (ap_const_lv1_0 = or_cond_fu_422_p2) and (ap_const_logic_1 = m_axi_inSound_ARREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33) and (ap_const_lv1_0 = exitcond2_fu_622_p2) and (ap_const_lv1_0 = or_cond6_fu_658_p2) and (ap_const_logic_1 = m_axi_inSound_ARREADY)))) then 
                    ap_reg_ioackin_m_axi_inSound_ARREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_m_axi_inSound_AWREADY assign process. --
    ap_reg_ioackin_m_axi_inSound_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_inSound_AWREADY <= ap_const_logic_0;
            else
                if (ap_sig_bdd_434) then
                    if (not(((ap_const_lv1_0 = or_cond_reg_827) and (ap_const_lv1_0 = tmp_54_reg_844) and (ap_const_lv1_0 = tmp_36_reg_848) and not((ap_const_lv1_0 = tmp_62_reg_853)) and (ap_const_lv1_0 = exitcond_fu_555_p2) and not((ap_const_lv1_0 = or_cond4_fu_585_p2)) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_AWREADY)))) then 
                        ap_reg_ioackin_m_axi_inSound_AWREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = m_axi_inSound_AWREADY)) then 
                        ap_reg_ioackin_m_axi_inSound_AWREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_m_axi_inSound_WREADY assign process. --
    ap_reg_ioackin_m_axi_inSound_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_inSound_WREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st29_fsm_28)) then
                    if (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_WREADY))) then 
                        ap_reg_ioackin_m_axi_inSound_WREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = m_axi_inSound_WREADY)) then 
                        ap_reg_ioackin_m_axi_inSound_WREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- count_fu_86 assign process. --
    count_fu_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26) and (ap_const_lv1_0 = tmp_54_fu_444_p2) and not((ap_const_lv1_0 = tmp_36_fu_503_p2)))) then 
                count_fu_86 <= count_1_fu_521_p2;
            elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) and (not((ap_const_lv1_0 = tmp_24_reg_794)) or not((ap_const_lv1_0 = tmp_47_reg_784)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27) and not(((ap_const_lv1_0 = or_cond_reg_827) and (ap_const_lv1_0 = tmp_54_reg_844) and (ap_const_lv1_0 = tmp_36_reg_848) and not((ap_const_lv1_0 = tmp_62_reg_853)) and (ap_const_lv1_0 = exitcond_fu_555_p2) and not((ap_const_lv1_0 = or_cond4_fu_585_p2)) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_AWREADY))) and (((ap_const_lv1_0 = or_cond_reg_827) and (ap_const_lv1_0 = tmp_54_reg_844) and (ap_const_lv1_0 = tmp_36_reg_848) and (ap_const_lv1_0 = tmp_62_reg_853)) or ((ap_const_lv1_0 = or_cond_reg_827) and (ap_const_lv1_0 = tmp_54_reg_844) and (ap_const_lv1_0 = tmp_36_reg_848) and not((ap_const_lv1_0 = exitcond_fu_555_p2))))))) then 
                count_fu_86 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    -- deleteFlag_fu_82 assign process. --
    deleteFlag_fu_82_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26) and (ap_const_lv1_0 = tmp_54_fu_444_p2) and not((ap_const_lv1_0 = tmp_36_fu_503_p2)))) then 
                deleteFlag_fu_82 <= p_deleteFlag_fu_533_p3;
            elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) and (not((ap_const_lv1_0 = tmp_24_reg_794)) or not((ap_const_lv1_0 = tmp_47_reg_784)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27) and not(((ap_const_lv1_0 = or_cond_reg_827) and (ap_const_lv1_0 = tmp_54_reg_844) and (ap_const_lv1_0 = tmp_36_reg_848) and not((ap_const_lv1_0 = tmp_62_reg_853)) and (ap_const_lv1_0 = exitcond_fu_555_p2) and not((ap_const_lv1_0 = or_cond4_fu_585_p2)) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_AWREADY))) and (((ap_const_lv1_0 = or_cond_reg_827) and (ap_const_lv1_0 = tmp_54_reg_844) and (ap_const_lv1_0 = tmp_36_reg_848) and (ap_const_lv1_0 = tmp_62_reg_853)) or ((ap_const_lv1_0 = or_cond_reg_827) and (ap_const_lv1_0 = tmp_54_reg_844) and (ap_const_lv1_0 = tmp_36_reg_848) and not((ap_const_lv1_0 = exitcond_fu_555_p2))))))) then 
                deleteFlag_fu_82 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    -- first1_reg_150 assign process. --
    first1_reg_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((ap_const_lv1_0 = tmp_reg_756)) and not((ap_const_lv1_0 = tmp_19_reg_765)))) then 
                first1_reg_150 <= first_reg_138;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (tmp_fu_264_p2 = ap_const_lv1_0) and not(ap_sig_bdd_137))) then 
                first1_reg_150 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;

    -- first_reg_138 assign process. --
    first_reg_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and (ap_const_lv1_0 = tmp_19_reg_765) and not((ap_const_lv1_0 = tmp_reg_756)))) then 
                first_reg_138 <= i_reg_760;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                first_reg_138 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;

    -- i_1_in_reg_163 assign process. --
    i_1_in_reg_163_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) and (ap_const_lv1_0 = tmp_24_reg_794) and (ap_const_lv1_0 = tmp_47_reg_784))) then 
                i_1_in_reg_163 <= tmp_25_reg_779;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and ((ap_const_lv1_0 = tmp_reg_756) or not((ap_const_lv1_0 = tmp_19_reg_765))))) then 
                i_1_in_reg_163 <= ap_const_lv14_3E80;
            end if; 
        end if;
    end process;

    -- i_3_reg_209 assign process. --
    i_3_reg_209_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_40)) then 
                i_3_reg_209 <= i_4_reg_877;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_ARREADY) and (ap_const_lv1_0 = exitcond1_fu_398_p2) and (ap_const_lv1_0 = or_cond_fu_422_p2))) and not((ap_const_lv1_0 = exitcond1_fu_398_p2)))) then 
                i_3_reg_209 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;

    -- j9_reg_198 assign process. --
    j9_reg_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26) and (ap_const_lv1_0 = tmp_54_fu_444_p2) and (ap_const_lv1_0 = tmp_36_fu_503_p2) and not((ap_const_lv1_0 = tmp_62_fu_512_p2)))) then 
                j9_reg_198 <= ap_const_lv14_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st33_fsm_32) and not(ap_sig_bdd_394))) then 
                j9_reg_198 <= j_8_reg_860;
            end if; 
        end if;
    end process;

    -- j_1_fu_94 assign process. --
    j_1_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_40) and (ap_const_lv1_0 = or_cond6_reg_882) and not((ap_const_lv1_0 = tmp_30_fu_745_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33) and (ap_const_lv1_0 = exitcond2_fu_622_p2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_ARREADY) and (ap_const_lv1_0 = exitcond2_fu_622_p2) and (ap_const_lv1_0 = or_cond6_fu_658_p2))) and not((ap_const_lv1_0 = or_cond6_fu_658_p2)) and (ap_const_lv1_0 = or_cond7_fu_681_p2)))) then 
                j_1_fu_94 <= grp_fu_247_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_ARREADY) and (ap_const_lv1_0 = exitcond1_fu_398_p2) and (ap_const_lv1_0 = or_cond_fu_422_p2))) and not((ap_const_lv1_0 = exitcond1_fu_398_p2)))) then 
                j_1_fu_94 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    -- last_reg_174 assign process. --
    last_reg_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) and (ap_const_lv1_0 = tmp_47_reg_784) and not((ap_const_lv1_0 = tmp_24_reg_794)))) then 
                last_reg_174 <= last_2_reg_769;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not((ap_const_lv1_0 = tmp_47_fu_336_p2)))) then 
                last_reg_174 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    -- markBegin_2_reg_186 assign process. --
    markBegin_2_reg_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27) and not(((ap_const_lv1_0 = or_cond_reg_827) and (ap_const_lv1_0 = tmp_54_reg_844) and (ap_const_lv1_0 = tmp_36_reg_848) and not((ap_const_lv1_0 = tmp_62_reg_853)) and (ap_const_lv1_0 = exitcond_fu_555_p2) and not((ap_const_lv1_0 = or_cond4_fu_585_p2)) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_AWREADY))) and ((ap_const_lv1_0 = tmp_62_reg_853) or not((ap_const_lv1_0 = or_cond_reg_827)) or not((ap_const_lv1_0 = tmp_54_reg_844)) or not((ap_const_lv1_0 = tmp_36_reg_848)) or not((ap_const_lv1_0 = exitcond_fu_555_p2))))) then 
                markBegin_2_reg_186 <= i_5_reg_822;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) and (not((ap_const_lv1_0 = tmp_24_reg_794)) or not((ap_const_lv1_0 = tmp_47_reg_784))))) then 
                markBegin_2_reg_186 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;

    -- markBegin_fu_90 assign process. --
    markBegin_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27) and (ap_const_lv1_0 = or_cond_reg_827) and not(((ap_const_lv1_0 = or_cond_reg_827) and (ap_const_lv1_0 = tmp_54_reg_844) and (ap_const_lv1_0 = tmp_36_reg_848) and not((ap_const_lv1_0 = tmp_62_reg_853)) and (ap_const_lv1_0 = exitcond_fu_555_p2) and not((ap_const_lv1_0 = or_cond4_fu_585_p2)) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_AWREADY))) and not((ap_const_lv1_0 = tmp_54_reg_844)))) then 
                                markBegin_fu_90(13 downto 0) <= markBegin_1_cast_fu_609_p1(13 downto 0);
            elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) and (not((ap_const_lv1_0 = tmp_24_reg_794)) or not((ap_const_lv1_0 = tmp_47_reg_784)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27) and not(((ap_const_lv1_0 = or_cond_reg_827) and (ap_const_lv1_0 = tmp_54_reg_844) and (ap_const_lv1_0 = tmp_36_reg_848) and not((ap_const_lv1_0 = tmp_62_reg_853)) and (ap_const_lv1_0 = exitcond_fu_555_p2) and not((ap_const_lv1_0 = or_cond4_fu_585_p2)) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_AWREADY))) and (((ap_const_lv1_0 = or_cond_reg_827) and (ap_const_lv1_0 = tmp_54_reg_844) and (ap_const_lv1_0 = tmp_36_reg_848) and (ap_const_lv1_0 = tmp_62_reg_853)) or ((ap_const_lv1_0 = or_cond_reg_827) and (ap_const_lv1_0 = tmp_54_reg_844) and (ap_const_lv1_0 = tmp_36_reg_848) and not((ap_const_lv1_0 = exitcond_fu_555_p2))))))) then 
                markBegin_fu_90(0) <= '0';
                markBegin_fu_90(1) <= '0';
                markBegin_fu_90(2) <= '0';
                markBegin_fu_90(3) <= '0';
                markBegin_fu_90(4) <= '0';
                markBegin_fu_90(5) <= '0';
                markBegin_fu_90(6) <= '0';
                markBegin_fu_90(7) <= '0';
                markBegin_fu_90(8) <= '0';
                markBegin_fu_90(9) <= '0';
                markBegin_fu_90(10) <= '0';
                markBegin_fu_90(11) <= '0';
                markBegin_fu_90(12) <= '0';
                markBegin_fu_90(13) <= '0';
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_ARREADY) and (ap_const_lv1_0 = exitcond2_fu_622_p2) and (ap_const_lv1_0 = or_cond6_fu_658_p2))))) then
                i_4_reg_877 <= i_4_fu_628_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_ARREADY) and (ap_const_lv1_0 = exitcond1_fu_398_p2) and (ap_const_lv1_0 = or_cond_fu_422_p2))))) then
                i_5_reg_822 <= i_5_fu_404_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not(ap_sig_bdd_137))) then
                i_reg_760 <= i_fu_270_p2;
                tmp_reg_756 <= tmp_fu_264_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27) and (ap_const_lv1_0 = or_cond_reg_827) and (ap_const_lv1_0 = tmp_54_reg_844) and (ap_const_lv1_0 = tmp_36_reg_848) and not((ap_const_lv1_0 = tmp_62_reg_853)) and not(((ap_const_lv1_0 = or_cond_reg_827) and (ap_const_lv1_0 = tmp_54_reg_844) and (ap_const_lv1_0 = tmp_36_reg_848) and not((ap_const_lv1_0 = tmp_62_reg_853)) and (ap_const_lv1_0 = exitcond_fu_555_p2) and not((ap_const_lv1_0 = or_cond4_fu_585_p2)) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_AWREADY))))) then
                j_8_reg_860 <= j_8_fu_561_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then
                last_2_cast5_reg_774 <= last_2_cast5_fu_328_p1;
                last_2_reg_769 <= last_2_fu_322_p2;
                tmp_25_reg_779 <= tmp_25_fu_332_p1;
                tmp_47_reg_784 <= tmp_47_fu_336_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27) and (ap_const_lv1_0 = or_cond_reg_827) and (ap_const_lv1_0 = tmp_54_reg_844) and (ap_const_lv1_0 = tmp_36_reg_848) and not((ap_const_lv1_0 = tmp_62_reg_853)) and (ap_const_lv1_0 = exitcond_fu_555_p2) and not(((ap_const_lv1_0 = or_cond_reg_827) and (ap_const_lv1_0 = tmp_54_reg_844) and (ap_const_lv1_0 = tmp_36_reg_848) and not((ap_const_lv1_0 = tmp_62_reg_853)) and (ap_const_lv1_0 = exitcond_fu_555_p2) and not((ap_const_lv1_0 = or_cond4_fu_585_p2)) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_AWREADY))))) then
                or_cond4_reg_865 <= or_cond4_fu_585_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33) and (ap_const_lv1_0 = exitcond2_fu_622_p2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_ARREADY) and (ap_const_lv1_0 = exitcond2_fu_622_p2) and (ap_const_lv1_0 = or_cond6_fu_658_p2))))) then
                or_cond6_reg_882 <= or_cond6_fu_658_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) and (ap_const_lv1_0 = exitcond1_fu_398_p2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_ARREADY) and (ap_const_lv1_0 = exitcond1_fu_398_p2) and (ap_const_lv1_0 = or_cond_fu_422_p2))))) then
                or_cond_reg_827 <= or_cond_fu_422_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((tmp_fu_264_p2 = ap_const_lv1_0)) and not(ap_sig_bdd_137)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) and not((m_axi_inSound_RVALID = ap_const_logic_0))) or (not((m_axi_inSound_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25)) or (not((m_axi_inSound_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39)))) then
                reg_258 <= m_axi_inSound_RDATA;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then
                tmp_19_reg_765 <= tmp_19_fu_312_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then
                tmp_24_reg_794 <= tmp_24_fu_388_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26)) then
                tmp_36_reg_848 <= tmp_36_fu_503_p2;
                tmp_54_reg_844 <= tmp_54_fu_444_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26) and (ap_const_lv1_0 = tmp_54_fu_444_p2) and (ap_const_lv1_0 = tmp_36_fu_503_p2))) then
                tmp_62_reg_853 <= tmp_62_fu_512_p2;
            end if;
        end if;
    end process;
    markBegin_fu_90(31 downto 14) <= "000000000000000000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, m_axi_inSound_RVALID, tmp_fu_264_p2, ap_sig_bdd_137, tmp_reg_756, tmp_19_reg_765, tmp_47_fu_336_p2, tmp_47_reg_784, ap_sig_ioackin_m_axi_inSound_ARREADY, tmp_24_reg_794, exitcond1_fu_398_p2, or_cond_fu_422_p2, or_cond_reg_827, tmp_54_reg_844, tmp_36_reg_848, tmp_62_reg_853, exitcond_fu_555_p2, or_cond4_fu_585_p2, ap_sig_ioackin_m_axi_inSound_AWREADY, exitcond2_fu_622_p2, or_cond6_fu_658_p2, ap_sig_bdd_394, ap_sig_ioackin_m_axi_inSound_WREADY)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_ARREADY) or (ap_start = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                if (((tmp_fu_264_p2 = ap_const_lv1_0) and not(ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                elsif ((not((tmp_fu_264_p2 = ap_const_lv1_0)) and not(ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                if (((ap_const_lv1_0 = tmp_reg_756) or not((ap_const_lv1_0 = tmp_19_reg_765)))) then
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st10_fsm_9 => 
                if (not((ap_const_lv1_0 = tmp_47_fu_336_p2))) then
                    ap_NS_fsm <= ap_ST_st19_fsm_18;
                else
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                end if;
            when ap_ST_st11_fsm_10 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_ARREADY))) then
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                else
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                end if;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                if (not((m_axi_inSound_RVALID = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st18_fsm_17;
                else
                    ap_NS_fsm <= ap_ST_st17_fsm_16;
                end if;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st19_fsm_18;
            when ap_ST_st19_fsm_18 => 
                if ((not((ap_const_lv1_0 = tmp_24_reg_794)) or not((ap_const_lv1_0 = tmp_47_reg_784)))) then
                    ap_NS_fsm <= ap_ST_st20_fsm_19;
                else
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                end if;
            when ap_ST_st20_fsm_19 => 
                if ((not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_ARREADY) and (ap_const_lv1_0 = exitcond1_fu_398_p2) and (ap_const_lv1_0 = or_cond_fu_422_p2))) and not((ap_const_lv1_0 = exitcond1_fu_398_p2)))) then
                    ap_NS_fsm <= ap_ST_st34_fsm_33;
                elsif (((ap_const_lv1_0 = exitcond1_fu_398_p2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_ARREADY) and (ap_const_lv1_0 = exitcond1_fu_398_p2) and (ap_const_lv1_0 = or_cond_fu_422_p2))) and not((ap_const_lv1_0 = or_cond_fu_422_p2)))) then
                    ap_NS_fsm <= ap_ST_st28_fsm_27;
                elsif (((ap_const_lv1_0 = exitcond1_fu_398_p2) and (ap_const_lv1_0 = or_cond_fu_422_p2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_ARREADY) and (ap_const_lv1_0 = exitcond1_fu_398_p2) and (ap_const_lv1_0 = or_cond_fu_422_p2))))) then
                    ap_NS_fsm <= ap_ST_st21_fsm_20;
                else
                    ap_NS_fsm <= ap_ST_st20_fsm_19;
                end if;
            when ap_ST_st21_fsm_20 => 
                ap_NS_fsm <= ap_ST_st22_fsm_21;
            when ap_ST_st22_fsm_21 => 
                ap_NS_fsm <= ap_ST_st23_fsm_22;
            when ap_ST_st23_fsm_22 => 
                ap_NS_fsm <= ap_ST_st24_fsm_23;
            when ap_ST_st24_fsm_23 => 
                ap_NS_fsm <= ap_ST_st25_fsm_24;
            when ap_ST_st25_fsm_24 => 
                ap_NS_fsm <= ap_ST_st26_fsm_25;
            when ap_ST_st26_fsm_25 => 
                if (not((m_axi_inSound_RVALID = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st27_fsm_26;
                else
                    ap_NS_fsm <= ap_ST_st26_fsm_25;
                end if;
            when ap_ST_st27_fsm_26 => 
                ap_NS_fsm <= ap_ST_st28_fsm_27;
            when ap_ST_st28_fsm_27 => 
                if ((not(((ap_const_lv1_0 = or_cond_reg_827) and (ap_const_lv1_0 = tmp_54_reg_844) and (ap_const_lv1_0 = tmp_36_reg_848) and not((ap_const_lv1_0 = tmp_62_reg_853)) and (ap_const_lv1_0 = exitcond_fu_555_p2) and not((ap_const_lv1_0 = or_cond4_fu_585_p2)) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_AWREADY))) and ((ap_const_lv1_0 = tmp_62_reg_853) or not((ap_const_lv1_0 = or_cond_reg_827)) or not((ap_const_lv1_0 = tmp_54_reg_844)) or not((ap_const_lv1_0 = tmp_36_reg_848)) or not((ap_const_lv1_0 = exitcond_fu_555_p2))))) then
                    ap_NS_fsm <= ap_ST_st20_fsm_19;
                elsif (((ap_const_lv1_0 = or_cond_reg_827) and (ap_const_lv1_0 = tmp_54_reg_844) and (ap_const_lv1_0 = tmp_36_reg_848) and not((ap_const_lv1_0 = tmp_62_reg_853)) and (ap_const_lv1_0 = exitcond_fu_555_p2) and (ap_const_lv1_0 = or_cond4_fu_585_p2) and not(((ap_const_lv1_0 = or_cond_reg_827) and (ap_const_lv1_0 = tmp_54_reg_844) and (ap_const_lv1_0 = tmp_36_reg_848) and not((ap_const_lv1_0 = tmp_62_reg_853)) and (ap_const_lv1_0 = exitcond_fu_555_p2) and not((ap_const_lv1_0 = or_cond4_fu_585_p2)) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_AWREADY))))) then
                    ap_NS_fsm <= ap_ST_st33_fsm_32;
                elsif (((ap_const_lv1_0 = or_cond_reg_827) and (ap_const_lv1_0 = tmp_54_reg_844) and (ap_const_lv1_0 = tmp_36_reg_848) and not((ap_const_lv1_0 = tmp_62_reg_853)) and (ap_const_lv1_0 = exitcond_fu_555_p2) and not((ap_const_lv1_0 = or_cond4_fu_585_p2)) and not(((ap_const_lv1_0 = or_cond_reg_827) and (ap_const_lv1_0 = tmp_54_reg_844) and (ap_const_lv1_0 = tmp_36_reg_848) and not((ap_const_lv1_0 = tmp_62_reg_853)) and (ap_const_lv1_0 = exitcond_fu_555_p2) and not((ap_const_lv1_0 = or_cond4_fu_585_p2)) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_AWREADY))))) then
                    ap_NS_fsm <= ap_ST_st29_fsm_28;
                else
                    ap_NS_fsm <= ap_ST_st28_fsm_27;
                end if;
            when ap_ST_st29_fsm_28 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_WREADY))) then
                    ap_NS_fsm <= ap_ST_st30_fsm_29;
                else
                    ap_NS_fsm <= ap_ST_st29_fsm_28;
                end if;
            when ap_ST_st30_fsm_29 => 
                ap_NS_fsm <= ap_ST_st31_fsm_30;
            when ap_ST_st31_fsm_30 => 
                ap_NS_fsm <= ap_ST_st32_fsm_31;
            when ap_ST_st32_fsm_31 => 
                ap_NS_fsm <= ap_ST_st33_fsm_32;
            when ap_ST_st33_fsm_32 => 
                if (not(ap_sig_bdd_394)) then
                    ap_NS_fsm <= ap_ST_st28_fsm_27;
                else
                    ap_NS_fsm <= ap_ST_st33_fsm_32;
                end if;
            when ap_ST_st34_fsm_33 => 
                if ((not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_ARREADY) and (ap_const_lv1_0 = exitcond2_fu_622_p2) and (ap_const_lv1_0 = or_cond6_fu_658_p2))) and not((ap_const_lv1_0 = exitcond2_fu_622_p2)))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                elsif (((ap_const_lv1_0 = exitcond2_fu_622_p2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_ARREADY) and (ap_const_lv1_0 = exitcond2_fu_622_p2) and (ap_const_lv1_0 = or_cond6_fu_658_p2))) and not((ap_const_lv1_0 = or_cond6_fu_658_p2)))) then
                    ap_NS_fsm <= ap_ST_st41_fsm_40;
                elsif (((ap_const_lv1_0 = exitcond2_fu_622_p2) and (ap_const_lv1_0 = or_cond6_fu_658_p2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_ARREADY) and (ap_const_lv1_0 = exitcond2_fu_622_p2) and (ap_const_lv1_0 = or_cond6_fu_658_p2))))) then
                    ap_NS_fsm <= ap_ST_st35_fsm_34;
                else
                    ap_NS_fsm <= ap_ST_st34_fsm_33;
                end if;
            when ap_ST_st35_fsm_34 => 
                ap_NS_fsm <= ap_ST_st36_fsm_35;
            when ap_ST_st36_fsm_35 => 
                ap_NS_fsm <= ap_ST_st37_fsm_36;
            when ap_ST_st37_fsm_36 => 
                ap_NS_fsm <= ap_ST_st38_fsm_37;
            when ap_ST_st38_fsm_37 => 
                ap_NS_fsm <= ap_ST_st39_fsm_38;
            when ap_ST_st39_fsm_38 => 
                ap_NS_fsm <= ap_ST_st40_fsm_39;
            when ap_ST_st40_fsm_39 => 
                if (not((m_axi_inSound_RVALID = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st41_fsm_40;
                else
                    ap_NS_fsm <= ap_ST_st40_fsm_39;
                end if;
            when ap_ST_st41_fsm_40 => 
                ap_NS_fsm <= ap_ST_st34_fsm_33;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_ioackin_m_axi_inSound_ARREADY, ap_sig_cseq_ST_st34_fsm_33, exitcond2_fu_622_p2, or_cond6_fu_658_p2)
    begin
        if (((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_ARREADY) and (ap_const_lv1_0 = exitcond2_fu_622_p2) and (ap_const_lv1_0 = or_cond6_fu_658_p2))) and not((ap_const_lv1_0 = exitcond2_fu_622_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_ioackin_m_axi_inSound_ARREADY, ap_sig_cseq_ST_st34_fsm_33, exitcond2_fu_622_p2, or_cond6_fu_658_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_ARREADY) and (ap_const_lv1_0 = exitcond2_fu_622_p2) and (ap_const_lv1_0 = or_cond6_fu_658_p2))) and not((ap_const_lv1_0 = exitcond2_fu_622_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_129 assign process. --
    ap_sig_bdd_129_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_129 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    -- ap_sig_bdd_137 assign process. --
    ap_sig_bdd_137_assign_proc : process(m_axi_inSound_RVALID, tmp_fu_264_p2)
    begin
                ap_sig_bdd_137 <= ((m_axi_inSound_RVALID = ap_const_logic_0) and not((tmp_fu_264_p2 = ap_const_lv1_0)));
    end process;


    -- ap_sig_bdd_146 assign process. --
    ap_sig_bdd_146_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_146 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    -- ap_sig_bdd_156 assign process. --
    ap_sig_bdd_156_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_156 <= (ap_const_lv1_1 = ap_CS_fsm(25 downto 25));
    end process;


    -- ap_sig_bdd_165 assign process. --
    ap_sig_bdd_165_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_165 <= (ap_const_lv1_1 = ap_CS_fsm(39 downto 39));
    end process;


    -- ap_sig_bdd_179 assign process. --
    ap_sig_bdd_179_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_179 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    -- ap_sig_bdd_188 assign process. --
    ap_sig_bdd_188_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_188 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    -- ap_sig_bdd_203 assign process. --
    ap_sig_bdd_203_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_203 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    -- ap_sig_bdd_216 assign process. --
    ap_sig_bdd_216_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_216 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    -- ap_sig_bdd_225 assign process. --
    ap_sig_bdd_225_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_225 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    -- ap_sig_bdd_247 assign process. --
    ap_sig_bdd_247_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_247 <= (ap_const_lv1_1 = ap_CS_fsm(26 downto 26));
    end process;


    -- ap_sig_bdd_264 assign process. --
    ap_sig_bdd_264_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_264 <= (ap_const_lv1_1 = ap_CS_fsm(27 downto 27));
    end process;


    -- ap_sig_bdd_299 assign process. --
    ap_sig_bdd_299_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_299 <= (ap_const_lv1_1 = ap_CS_fsm(33 downto 33));
    end process;


    -- ap_sig_bdd_322 assign process. --
    ap_sig_bdd_322_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_322 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_329 assign process. --
    ap_sig_bdd_329_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_329 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    -- ap_sig_bdd_352 assign process. --
    ap_sig_bdd_352_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_352 <= (ap_const_lv1_1 = ap_CS_fsm(18 downto 18));
    end process;


    -- ap_sig_bdd_388 assign process. --
    ap_sig_bdd_388_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_388 <= (ap_const_lv1_1 = ap_CS_fsm(32 downto 32));
    end process;


    -- ap_sig_bdd_394 assign process. --
    ap_sig_bdd_394_assign_proc : process(m_axi_inSound_BVALID, or_cond4_reg_865)
    begin
                ap_sig_bdd_394 <= ((m_axi_inSound_BVALID = ap_const_logic_0) and not((ap_const_lv1_0 = or_cond4_reg_865)));
    end process;


    -- ap_sig_bdd_411 assign process. --
    ap_sig_bdd_411_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_411 <= (ap_const_lv1_1 = ap_CS_fsm(40 downto 40));
    end process;


    -- ap_sig_bdd_432 assign process. --
    ap_sig_bdd_432_assign_proc : process(ap_sig_cseq_ST_st20_fsm_19, exitcond1_fu_398_p2, or_cond_fu_422_p2)
    begin
                ap_sig_bdd_432 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) and (ap_const_lv1_0 = exitcond1_fu_398_p2) and (ap_const_lv1_0 = or_cond_fu_422_p2));
    end process;


    -- ap_sig_bdd_434 assign process. --
    ap_sig_bdd_434_assign_proc : process(or_cond_reg_827, tmp_54_reg_844, tmp_36_reg_848, tmp_62_reg_853, ap_sig_cseq_ST_st28_fsm_27, exitcond_fu_555_p2, or_cond4_fu_585_p2)
    begin
                ap_sig_bdd_434 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27) and (ap_const_lv1_0 = or_cond_reg_827) and (ap_const_lv1_0 = tmp_54_reg_844) and (ap_const_lv1_0 = tmp_36_reg_848) and not((ap_const_lv1_0 = tmp_62_reg_853)) and (ap_const_lv1_0 = exitcond_fu_555_p2) and not((ap_const_lv1_0 = or_cond4_fu_585_p2)));
    end process;


    -- ap_sig_bdd_436 assign process. --
    ap_sig_bdd_436_assign_proc : process(ap_sig_cseq_ST_st34_fsm_33, exitcond2_fu_622_p2, or_cond6_fu_658_p2)
    begin
                ap_sig_bdd_436 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33) and (ap_const_lv1_0 = exitcond2_fu_622_p2) and (ap_const_lv1_0 = or_cond6_fu_658_p2));
    end process;


    -- ap_sig_bdd_441 assign process. --
    ap_sig_bdd_441_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
                ap_sig_bdd_441 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_478 assign process. --
    ap_sig_bdd_478_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_478 <= (ap_const_lv1_1 = ap_CS_fsm(28 downto 28));
    end process;


    -- ap_sig_bdd_59 assign process. --
    ap_sig_bdd_59_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_59 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_cseq_ST_st10_fsm_9 assign process. --
    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_bdd_188)
    begin
        if (ap_sig_bdd_188) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st11_fsm_10 assign process. --
    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_bdd_203)
    begin
        if (ap_sig_bdd_203) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st17_fsm_16 assign process. --
    ap_sig_cseq_ST_st17_fsm_16_assign_proc : process(ap_sig_bdd_146)
    begin
        if (ap_sig_bdd_146) then 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st18_fsm_17 assign process. --
    ap_sig_cseq_ST_st18_fsm_17_assign_proc : process(ap_sig_bdd_216)
    begin
        if (ap_sig_bdd_216) then 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st19_fsm_18 assign process. --
    ap_sig_cseq_ST_st19_fsm_18_assign_proc : process(ap_sig_bdd_352)
    begin
        if (ap_sig_bdd_352) then 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_59)
    begin
        if (ap_sig_bdd_59) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st20_fsm_19 assign process. --
    ap_sig_cseq_ST_st20_fsm_19_assign_proc : process(ap_sig_bdd_225)
    begin
        if (ap_sig_bdd_225) then 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st26_fsm_25 assign process. --
    ap_sig_cseq_ST_st26_fsm_25_assign_proc : process(ap_sig_bdd_156)
    begin
        if (ap_sig_bdd_156) then 
            ap_sig_cseq_ST_st26_fsm_25 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st26_fsm_25 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st27_fsm_26 assign process. --
    ap_sig_cseq_ST_st27_fsm_26_assign_proc : process(ap_sig_bdd_247)
    begin
        if (ap_sig_bdd_247) then 
            ap_sig_cseq_ST_st27_fsm_26 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st27_fsm_26 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st28_fsm_27 assign process. --
    ap_sig_cseq_ST_st28_fsm_27_assign_proc : process(ap_sig_bdd_264)
    begin
        if (ap_sig_bdd_264) then 
            ap_sig_cseq_ST_st28_fsm_27 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st28_fsm_27 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st29_fsm_28 assign process. --
    ap_sig_cseq_ST_st29_fsm_28_assign_proc : process(ap_sig_bdd_478)
    begin
        if (ap_sig_bdd_478) then 
            ap_sig_cseq_ST_st29_fsm_28 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st29_fsm_28 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st33_fsm_32 assign process. --
    ap_sig_cseq_ST_st33_fsm_32_assign_proc : process(ap_sig_bdd_388)
    begin
        if (ap_sig_bdd_388) then 
            ap_sig_cseq_ST_st33_fsm_32 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st33_fsm_32 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st34_fsm_33 assign process. --
    ap_sig_cseq_ST_st34_fsm_33_assign_proc : process(ap_sig_bdd_299)
    begin
        if (ap_sig_bdd_299) then 
            ap_sig_cseq_ST_st34_fsm_33 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st34_fsm_33 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st40_fsm_39 assign process. --
    ap_sig_cseq_ST_st40_fsm_39_assign_proc : process(ap_sig_bdd_165)
    begin
        if (ap_sig_bdd_165) then 
            ap_sig_cseq_ST_st40_fsm_39 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st40_fsm_39 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st41_fsm_40 assign process. --
    ap_sig_cseq_ST_st41_fsm_40_assign_proc : process(ap_sig_bdd_411)
    begin
        if (ap_sig_bdd_411) then 
            ap_sig_cseq_ST_st41_fsm_40 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st41_fsm_40 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st6_fsm_5 assign process. --
    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_bdd_322)
    begin
        if (ap_sig_bdd_322) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st7_fsm_6 assign process. --
    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_bdd_129)
    begin
        if (ap_sig_bdd_129) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st8_fsm_7 assign process. --
    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_bdd_179)
    begin
        if (ap_sig_bdd_179) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st9_fsm_8 assign process. --
    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_bdd_329)
    begin
        if (ap_sig_bdd_329) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ioackin_m_axi_inSound_ARREADY assign process. --
    ap_sig_ioackin_m_axi_inSound_ARREADY_assign_proc : process(m_axi_inSound_ARREADY, ap_reg_ioackin_m_axi_inSound_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_inSound_ARREADY)) then 
            ap_sig_ioackin_m_axi_inSound_ARREADY <= m_axi_inSound_ARREADY;
        else 
            ap_sig_ioackin_m_axi_inSound_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_m_axi_inSound_AWREADY assign process. --
    ap_sig_ioackin_m_axi_inSound_AWREADY_assign_proc : process(m_axi_inSound_AWREADY, ap_reg_ioackin_m_axi_inSound_AWREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_inSound_AWREADY)) then 
            ap_sig_ioackin_m_axi_inSound_AWREADY <= m_axi_inSound_AWREADY;
        else 
            ap_sig_ioackin_m_axi_inSound_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_m_axi_inSound_WREADY assign process. --
    ap_sig_ioackin_m_axi_inSound_WREADY_assign_proc : process(m_axi_inSound_WREADY, ap_reg_ioackin_m_axi_inSound_WREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_inSound_WREADY)) then 
            ap_sig_ioackin_m_axi_inSound_WREADY <= m_axi_inSound_WREADY;
        else 
            ap_sig_ioackin_m_axi_inSound_WREADY <= ap_const_logic_1;
        end if; 
    end process;

    count_1_fu_521_p2 <= std_logic_vector(unsigned(count_fu_86) + unsigned(ap_const_lv32_1));
    exitcond1_fu_398_p2 <= "1" when (markBegin_2_reg_186 = ap_const_lv14_3E80) else "0";
    exitcond2_fu_622_p2 <= "1" when (i_3_reg_209 = ap_const_lv14_3E80) else "0";
    exitcond_fu_555_p2 <= "1" when (j9_reg_198 = ap_const_lv14_3E80) else "0";

    -- grp_fu_220_opcode assign process. --
    grp_fu_220_opcode_assign_proc : process(ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st18_fsm_17, ap_sig_cseq_ST_st27_fsm_26, or_cond6_reg_882, ap_sig_cseq_ST_st41_fsm_40)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26)) then 
            grp_fu_220_opcode <= ap_const_lv5_4;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) or ((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_40) and (ap_const_lv1_0 = or_cond6_reg_882)))) then 
            grp_fu_220_opcode <= ap_const_lv5_2;
        else 
            grp_fu_220_opcode <= "XXXXX";
        end if; 
    end process;


    -- grp_fu_220_p0 assign process. --
    grp_fu_220_p0_assign_proc : process(reg_258, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st18_fsm_17, ap_sig_cseq_ST_st27_fsm_26, ap_sig_cseq_ST_st41_fsm_40, ret_i_i_i_i_i_fu_470_p1, ret_i_i_i_i_i2_fu_712_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_40)) then 
            grp_fu_220_p0 <= ret_i_i_i_i_i2_fu_712_p1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26)) then 
            grp_fu_220_p0 <= ret_i_i_i_i_i_fu_470_p1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17))) then 
            grp_fu_220_p0 <= reg_258;
        else 
            grp_fu_220_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_220_p1 assign process. --
    grp_fu_220_p1_assign_proc : process(ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st18_fsm_17, ap_sig_cseq_ST_st27_fsm_26, ap_sig_cseq_ST_st41_fsm_40)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_40)) then 
            grp_fu_220_p1 <= ap_const_lv64_0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) or (ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26))) then 
            grp_fu_220_p1 <= ap_const_lv64_3FC3333333333333;
        else 
            grp_fu_220_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_247_p2 <= std_logic_vector(unsigned(j_1_fu_94) + unsigned(ap_const_lv32_1));
    i_1_in_cast_fu_318_p1 <= std_logic_vector(resize(unsigned(i_1_in_reg_163),15));
    i_3_cast_fu_618_p1 <= std_logic_vector(resize(unsigned(i_3_reg_209),15));
    i_4_fu_628_p2 <= std_logic_vector(unsigned(i_3_reg_209) + unsigned(ap_const_lv14_1));
    i_5_fu_404_p2 <= std_logic_vector(unsigned(markBegin_2_reg_186) + unsigned(ap_const_lv14_1));
    i_fu_270_p2 <= std_logic_vector(unsigned(first_reg_138) + unsigned(ap_const_lv14_1));
    inSound_load_1_to_int_fu_352_p1 <= reg_258;
    inSound_load_to_int_fu_276_p1 <= reg_258;
    j9_cast3_fu_551_p1 <= std_logic_vector(resize(unsigned(j9_reg_198),32));
    j_8_fu_561_p2 <= std_logic_vector(unsigned(j9_reg_198) + unsigned(ap_const_lv14_1));
        last_2_cast5_fu_328_p1 <= std_logic_vector(resize(signed(last_2_fu_322_p2),32));

    last_2_fu_322_p2 <= std_logic_vector(signed(ap_const_lv15_7FFF) + signed(i_1_in_cast_fu_318_p1));

    -- m_axi_inSound_ARADDR assign process. --
    m_axi_inSound_ARADDR_assign_proc : process(ap_sig_cseq_ST_st11_fsm_10, tmp_48_fu_342_p1, tmp_57_fu_428_p1, tmp_56_fu_664_p1, ap_reg_ioackin_m_axi_inSound_ARREADY, ap_sig_bdd_441, ap_sig_bdd_432, ap_sig_bdd_436)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_inSound_ARREADY)) then
            if (ap_sig_bdd_436) then 
                m_axi_inSound_ARADDR <= tmp_56_fu_664_p1(32 - 1 downto 0);
            elsif (ap_sig_bdd_432) then 
                m_axi_inSound_ARADDR <= tmp_57_fu_428_p1(32 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
                m_axi_inSound_ARADDR <= tmp_48_fu_342_p1(32 - 1 downto 0);
            elsif (ap_sig_bdd_441) then 
                m_axi_inSound_ARADDR <= ap_const_lv32_0;
            else 
                m_axi_inSound_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axi_inSound_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_inSound_ARBURST <= ap_const_lv2_0;
    m_axi_inSound_ARCACHE <= ap_const_lv4_0;
    m_axi_inSound_ARID <= ap_const_lv1_0;

    -- m_axi_inSound_ARLEN assign process. --
    m_axi_inSound_ARLEN_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st20_fsm_19, exitcond1_fu_398_p2, or_cond_fu_422_p2, ap_sig_cseq_ST_st34_fsm_33, exitcond2_fu_622_p2, or_cond6_fu_658_p2, ap_reg_ioackin_m_axi_inSound_ARREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_inSound_ARREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) and (ap_const_lv1_0 = exitcond1_fu_398_p2) and (ap_const_lv1_0 = or_cond_fu_422_p2) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_inSound_ARREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33) and (ap_const_lv1_0 = exitcond2_fu_622_p2) and (ap_const_lv1_0 = or_cond6_fu_658_p2) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_inSound_ARREADY)))) then 
            m_axi_inSound_ARLEN <= ap_const_lv32_1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_inSound_ARREADY))) then 
            m_axi_inSound_ARLEN <= ap_const_lv32_3E80;
        else 
            m_axi_inSound_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_inSound_ARLOCK <= ap_const_lv2_0;
    m_axi_inSound_ARPROT <= ap_const_lv3_0;
    m_axi_inSound_ARQOS <= ap_const_lv4_0;
    m_axi_inSound_ARREGION <= ap_const_lv4_0;
    m_axi_inSound_ARSIZE <= ap_const_lv3_0;
    m_axi_inSound_ARUSER <= ap_const_lv1_0;

    -- m_axi_inSound_ARVALID assign process. --
    m_axi_inSound_ARVALID_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st20_fsm_19, exitcond1_fu_398_p2, or_cond_fu_422_p2, ap_sig_cseq_ST_st34_fsm_33, exitcond2_fu_622_p2, or_cond6_fu_658_p2, ap_reg_ioackin_m_axi_inSound_ARREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_inSound_ARREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_inSound_ARREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) and (ap_const_lv1_0 = exitcond1_fu_398_p2) and (ap_const_lv1_0 = or_cond_fu_422_p2) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_inSound_ARREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33) and (ap_const_lv1_0 = exitcond2_fu_622_p2) and (ap_const_lv1_0 = or_cond6_fu_658_p2) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_inSound_ARREADY)))) then 
            m_axi_inSound_ARVALID <= ap_const_logic_1;
        else 
            m_axi_inSound_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_inSound_AWADDR <= tmp_65_fu_591_p1(32 - 1 downto 0);
    m_axi_inSound_AWBURST <= ap_const_lv2_0;
    m_axi_inSound_AWCACHE <= ap_const_lv4_0;
    m_axi_inSound_AWID <= ap_const_lv1_0;
    m_axi_inSound_AWLEN <= ap_const_lv32_1;
    m_axi_inSound_AWLOCK <= ap_const_lv2_0;
    m_axi_inSound_AWPROT <= ap_const_lv3_0;
    m_axi_inSound_AWQOS <= ap_const_lv4_0;
    m_axi_inSound_AWREGION <= ap_const_lv4_0;
    m_axi_inSound_AWSIZE <= ap_const_lv3_0;
    m_axi_inSound_AWUSER <= ap_const_lv1_0;

    -- m_axi_inSound_AWVALID assign process. --
    m_axi_inSound_AWVALID_assign_proc : process(or_cond_reg_827, tmp_54_reg_844, tmp_36_reg_848, tmp_62_reg_853, ap_sig_cseq_ST_st28_fsm_27, exitcond_fu_555_p2, or_cond4_fu_585_p2, ap_reg_ioackin_m_axi_inSound_AWREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27) and (ap_const_lv1_0 = or_cond_reg_827) and (ap_const_lv1_0 = tmp_54_reg_844) and (ap_const_lv1_0 = tmp_36_reg_848) and not((ap_const_lv1_0 = tmp_62_reg_853)) and (ap_const_lv1_0 = exitcond_fu_555_p2) and not((ap_const_lv1_0 = or_cond4_fu_585_p2)) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_inSound_AWREADY))) then 
            m_axi_inSound_AWVALID <= ap_const_logic_1;
        else 
            m_axi_inSound_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- m_axi_inSound_BREADY assign process. --
    m_axi_inSound_BREADY_assign_proc : process(or_cond4_reg_865, ap_sig_cseq_ST_st33_fsm_32, ap_sig_bdd_394)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st33_fsm_32) and not((ap_const_lv1_0 = or_cond4_reg_865)) and not(ap_sig_bdd_394))) then 
            m_axi_inSound_BREADY <= ap_const_logic_1;
        else 
            m_axi_inSound_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- m_axi_inSound_RREADY assign process. --
    m_axi_inSound_RREADY_assign_proc : process(m_axi_inSound_RVALID, ap_sig_cseq_ST_st7_fsm_6, tmp_fu_264_p2, ap_sig_bdd_137, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st26_fsm_25, ap_sig_cseq_ST_st40_fsm_39)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((tmp_fu_264_p2 = ap_const_lv1_0)) and not(ap_sig_bdd_137)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) and not((m_axi_inSound_RVALID = ap_const_logic_0))) or (not((m_axi_inSound_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25)) or (not((m_axi_inSound_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39)))) then 
            m_axi_inSound_RREADY <= ap_const_logic_1;
        else 
            m_axi_inSound_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_inSound_WDATA <= ap_const_lv64_0;
    m_axi_inSound_WID <= ap_const_lv1_0;
    m_axi_inSound_WLAST <= ap_const_logic_0;
    m_axi_inSound_WSTRB <= ap_const_lv8_FF;
    m_axi_inSound_WUSER <= ap_const_lv1_0;

    -- m_axi_inSound_WVALID assign process. --
    m_axi_inSound_WVALID_assign_proc : process(ap_reg_ioackin_m_axi_inSound_WREADY, ap_sig_cseq_ST_st29_fsm_28)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st29_fsm_28) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_inSound_WREADY))) then 
            m_axi_inSound_WVALID <= ap_const_logic_1;
        else 
            m_axi_inSound_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    markBegin_1_cast_fu_609_p1 <= std_logic_vector(resize(unsigned(markBegin_1_fu_602_p3),32));
    markBegin_1_fu_602_p3 <= 
        markBegin_2_reg_186 when (tmp_36_reg_848(0) = '1') else 
        ap_const_lv14_0;
    markBegin_2_cast_fu_394_p1 <= std_logic_vector(resize(unsigned(markBegin_2_reg_186),15));
    notlhs1_fu_294_p2 <= "0" when (tmp_15_fu_280_p4 = ap_const_lv11_7FF) else "1";
    notlhs2_fu_370_p2 <= "0" when (tmp_20_fu_356_p4 = ap_const_lv11_7FF) else "1";
    notlhs3_fu_727_p2 <= "0" when (tmp_27_fu_717_p4 = ap_const_lv11_7FF) else "1";
    notlhs4_fu_485_p2 <= "0" when (tmp_33_fu_475_p4 = ap_const_lv11_7FF) else "1";
    notrhs1_fu_300_p2 <= "1" when (tmp_21_fu_290_p1 = ap_const_lv52_0) else "0";
    notrhs2_fu_376_p2 <= "1" when (tmp_26_fu_366_p1 = ap_const_lv52_0) else "0";
    notrhs3_fu_733_p2 <= "1" when (tmp_38_fu_700_p1 = ap_const_lv52_0) else "0";
    notrhs4_fu_491_p2 <= "1" when (tmp_32_fu_458_p1 = ap_const_lv52_0) else "0";
    or_cond4_fu_585_p2 <= (rev_fu_573_p2 and tmp_64_fu_579_p2);
    or_cond6_fu_658_p2 <= (tmp1_fu_652_p2 or tmp_51_fu_634_p2);
    or_cond7_fu_681_p2 <= (tmp_55_fu_675_p2 or tmp_51_fu_634_p2);
    or_cond_fu_422_p2 <= (tmp_49_fu_410_p2 or tmp_50_fu_416_p2);

    -- outSound_address0 assign process. --
    outSound_address0_assign_proc : process(ap_sig_cseq_ST_st34_fsm_33, ap_sig_cseq_ST_st41_fsm_40, tmp_59_fu_687_p1, tmp_60_fu_751_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_40)) then 
            outSound_address0 <= tmp_60_fu_751_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33)) then 
            outSound_address0 <= tmp_59_fu_687_p1(13 - 1 downto 0);
        else 
            outSound_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    -- outSound_ce0 assign process. --
    outSound_ce0_assign_proc : process(ap_sig_ioackin_m_axi_inSound_ARREADY, ap_sig_cseq_ST_st34_fsm_33, exitcond2_fu_622_p2, or_cond6_fu_658_p2, ap_sig_cseq_ST_st41_fsm_40)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_ARREADY) and (ap_const_lv1_0 = exitcond2_fu_622_p2) and (ap_const_lv1_0 = or_cond6_fu_658_p2)))) or (ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_40))) then 
            outSound_ce0 <= ap_const_logic_1;
        else 
            outSound_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- outSound_d0 assign process. --
    outSound_d0_assign_proc : process(reg_258, ap_sig_cseq_ST_st34_fsm_33, ap_sig_cseq_ST_st41_fsm_40)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_40)) then 
            outSound_d0 <= reg_258;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33)) then 
            outSound_d0 <= ap_const_lv64_0;
        else 
            outSound_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- outSound_we0 assign process. --
    outSound_we0_assign_proc : process(ap_sig_ioackin_m_axi_inSound_ARREADY, ap_sig_cseq_ST_st34_fsm_33, exitcond2_fu_622_p2, or_cond6_fu_658_p2, or_cond6_reg_882, ap_sig_cseq_ST_st41_fsm_40, or_cond7_fu_681_p2, tmp_30_fu_745_p2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_40) and (ap_const_lv1_0 = or_cond6_reg_882) and not((ap_const_lv1_0 = tmp_30_fu_745_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33) and (ap_const_lv1_0 = exitcond2_fu_622_p2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_inSound_ARREADY) and (ap_const_lv1_0 = exitcond2_fu_622_p2) and (ap_const_lv1_0 = or_cond6_fu_658_p2))) and not((ap_const_lv1_0 = or_cond6_fu_658_p2)) and (ap_const_lv1_0 = or_cond7_fu_681_p2)))) then 
            outSound_we0 <= ap_const_logic_1;
        else 
            outSound_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_1_fu_704_p3 <= (ap_const_lv1_0 & tmp_37_fu_696_p1);
    p_Result_s_fu_462_p3 <= (ap_const_lv1_0 & tmp_31_fu_454_p1);
    p_Val2_1_fu_692_p1 <= reg_258;
    p_Val2_s_fu_450_p1 <= reg_258;
    p_deleteFlag_fu_533_p3 <= 
        ap_const_lv32_1 when (tmp_61_fu_527_p2(0) = '1') else 
        deleteFlag_fu_82;
    ret_i_i_i_i_i2_fu_712_p1 <= p_Result_1_fu_704_p3;
    ret_i_i_i_i_i_fu_470_p1 <= p_Result_s_fu_462_p3;
    rev_fu_573_p2 <= (slt_fu_567_p2 xor ap_const_lv1_1);
    slt_fu_567_p2 <= "1" when (signed(j9_cast3_fu_551_p1) < signed(markBegin_fu_90)) else "0";
    tmp1_fu_652_p2 <= (tmp_52_fu_640_p2 or tmp_53_fu_646_p2);
    tmp_15_fu_280_p4 <= inSound_load_to_int_fu_276_p1(62 downto 52);
    tmp_17_fu_306_p2 <= (notrhs1_fu_300_p2 or notlhs1_fu_294_p2);
    tmp_19_fu_312_p2 <= (tmp_17_fu_306_p2 and grp_fu_220_p2);
    tmp_20_fu_356_p4 <= inSound_load_1_to_int_fu_352_p1(62 downto 52);
    tmp_21_fu_290_p1 <= inSound_load_to_int_fu_276_p1(52 - 1 downto 0);
    tmp_22_fu_382_p2 <= (notrhs2_fu_376_p2 or notlhs2_fu_370_p2);
    tmp_24_fu_388_p2 <= (tmp_22_fu_382_p2 and grp_fu_220_p2);
    tmp_25_fu_332_p1 <= last_2_fu_322_p2(14 - 1 downto 0);
    tmp_26_fu_366_p1 <= inSound_load_1_to_int_fu_352_p1(52 - 1 downto 0);
    tmp_27_fu_717_p4 <= p_Val2_1_fu_692_p1(62 downto 52);
    tmp_28_fu_739_p2 <= (notrhs3_fu_733_p2 or notlhs3_fu_727_p2);
    tmp_30_fu_745_p2 <= (tmp_28_fu_739_p2 and grp_fu_220_p2);
    tmp_31_fu_454_p1 <= p_Val2_s_fu_450_p1(63 - 1 downto 0);
    tmp_32_fu_458_p1 <= p_Val2_s_fu_450_p1(52 - 1 downto 0);
    tmp_33_fu_475_p4 <= p_Val2_s_fu_450_p1(62 downto 52);
    tmp_34_fu_497_p2 <= (notrhs4_fu_491_p2 or notlhs4_fu_485_p2);
    tmp_36_fu_503_p2 <= (tmp_34_fu_497_p2 and grp_fu_220_p2);
    tmp_37_fu_696_p1 <= p_Val2_1_fu_692_p1(63 - 1 downto 0);
    tmp_38_fu_700_p1 <= p_Val2_1_fu_692_p1(52 - 1 downto 0);
    tmp_47_fu_336_p2 <= "1" when (i_1_in_reg_163 = ap_const_lv14_0) else "0";
    tmp_48_fu_342_p1 <= std_logic_vector(resize(unsigned(last_2_cast5_reg_774),64));
    tmp_49_fu_410_p2 <= "1" when (unsigned(markBegin_2_reg_186) < unsigned(first1_reg_150)) else "0";
    tmp_50_fu_416_p2 <= "1" when (signed(markBegin_2_cast_fu_394_p1) > signed(last_reg_174)) else "0";
    tmp_51_fu_634_p2 <= "1" when (unsigned(i_3_reg_209) < unsigned(first1_reg_150)) else "0";
    tmp_52_fu_640_p2 <= "1" when (signed(i_3_cast_fu_618_p1) > signed(last_reg_174)) else "0";
    tmp_53_fu_646_p2 <= "1" when (j_1_fu_94 = ap_const_lv32_1F40) else "0";
    tmp_54_fu_444_p2 <= "1" when (markBegin_fu_90 = ap_const_lv32_0) else "0";
    tmp_55_fu_675_p2 <= "1" when (signed(j_1_fu_94) > signed(ap_const_lv32_1F3F)) else "0";
    tmp_56_fu_664_p1 <= std_logic_vector(resize(unsigned(i_3_reg_209),64));
    tmp_57_fu_428_p1 <= std_logic_vector(resize(unsigned(markBegin_2_reg_186),64));
        tmp_59_fu_687_p1 <= std_logic_vector(resize(signed(j_1_fu_94),64));

        tmp_60_fu_751_p1 <= std_logic_vector(resize(signed(j_1_fu_94),64));

    tmp_61_fu_527_p2 <= "1" when (count_1_fu_521_p2 = ap_const_lv32_C8) else "0";
    tmp_62_fu_512_p2 <= "1" when (deleteFlag_fu_82 = ap_const_lv32_1) else "0";
    tmp_64_fu_579_p2 <= "1" when (unsigned(j9_reg_198) < unsigned(markBegin_2_reg_186)) else "0";
    tmp_65_fu_591_p1 <= std_logic_vector(resize(unsigned(j9_reg_198),64));
    tmp_fu_264_p2 <= "1" when (unsigned(first_reg_138) < unsigned(ap_const_lv14_3E80)) else "0";
end behav;
