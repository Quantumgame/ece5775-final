// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module voicerec_FFT (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        c_address0,
        c_ce0,
        c_we0,
        c_d0,
        c_q0,
        c_address1,
        c_ce1,
        c_we1,
        c_d1,
        c_q1
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 42'b1;
parameter    ap_ST_st2_fsm_1 = 42'b10;
parameter    ap_ST_st3_fsm_2 = 42'b100;
parameter    ap_ST_st4_fsm_3 = 42'b1000;
parameter    ap_ST_st5_fsm_4 = 42'b10000;
parameter    ap_ST_st6_fsm_5 = 42'b100000;
parameter    ap_ST_st7_fsm_6 = 42'b1000000;
parameter    ap_ST_st8_fsm_7 = 42'b10000000;
parameter    ap_ST_st9_fsm_8 = 42'b100000000;
parameter    ap_ST_st10_fsm_9 = 42'b1000000000;
parameter    ap_ST_st11_fsm_10 = 42'b10000000000;
parameter    ap_ST_st12_fsm_11 = 42'b100000000000;
parameter    ap_ST_st13_fsm_12 = 42'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 42'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 42'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 42'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 42'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 42'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 42'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 42'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 42'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 42'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 42'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 42'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 42'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 42'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 42'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 42'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 42'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 42'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 42'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 42'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 42'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 42'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 42'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 42'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 42'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 42'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 42'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 42'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 42'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 42'b100000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_80 = 32'b10000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv9_100 = 9'b100000000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv32_101 = 32'b100000001;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_100 = 32'b100000000;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv8_80 = 8'b10000000;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] c_address0;
output   c_ce0;
output   c_we0;
output  [31:0] c_d0;
input  [31:0] c_q0;
output  [8:0] c_address1;
output   c_ce1;
output   c_we1;
output  [31:0] c_d1;
input  [31:0] c_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] c_address0;
reg c_ce0;
reg c_we0;
reg[31:0] c_d0;
reg[8:0] c_address1;
reg c_ce1;
reg c_we1;
reg[31:0] c_d1;
(* fsm_encoding = "none" *) reg   [41:0] ap_CS_fsm = 42'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_60;
wire   [7:0] cosVec_address0;
reg    cosVec_ce0;
wire   [31:0] cosVec_q0;
wire   [7:0] sinVec_address0;
reg    sinVec_ce0;
wire   [31:0] sinVec_q0;
reg   [31:0] reg_338;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_98;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_bdd_105;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_bdd_113;
reg   [31:0] reg_347;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_bdd_122;
wire   [31:0] grp_fu_302_p2;
reg   [31:0] reg_356;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_bdd_132;
reg    ap_sig_cseq_ST_st38_fsm_37;
reg    ap_sig_bdd_140;
wire   [31:0] grp_fu_306_p2;
reg   [31:0] reg_364;
wire   [8:0] k_2_fu_381_p2;
reg   [8:0] k_2_reg_703;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_153;
wire   [0:0] tmp_fu_387_p2;
reg   [0:0] tmp_reg_708;
wire   [0:0] exitcond3_fu_375_p2;
reg   [8:0] c_addr_reg_712;
reg   [8:0] c_addr_1_reg_717;
reg   [8:0] c_addr_2_reg_722;
reg   [8:0] c_addr_3_reg_727;
wire   [3:0] q_1_fu_443_p2;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_180;
wire   [31:0] j_2_fu_503_p3;
wire   [0:0] exitcond2_fu_437_p2;
wire   [31:0] n_1_fu_511_p3;
wire   [31:0] j_4_fu_519_p2;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_bdd_200;
reg   [31:0] wr_reg_768;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_bdd_210;
reg   [31:0] wi_reg_774;
wire   [31:0] grp_fu_531_p2;
reg   [31:0] nb_reg_780;
reg   [30:0] tmp_3_reg_785;
wire   [31:0] n_fu_559_p2;
reg   [31:0] n_reg_790;
wire   [10:0] tmp_7_fu_565_p1;
reg   [10:0] tmp_7_reg_796;
wire   [7:0] j_6_fu_579_p2;
reg   [7:0] j_6_reg_804;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_bdd_228;
wire   [7:0] k_3_fu_600_p2;
reg   [7:0] k_3_reg_815;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_bdd_237;
reg   [8:0] c_addr_4_reg_824;
wire   [0:0] exitcond_fu_594_p2;
wire   [0:0] tmp_20_fu_606_p2;
reg   [8:0] c_addr_5_reg_829;
reg   [8:0] c_addr_6_reg_834;
reg   [8:0] c_addr_7_reg_839;
wire   [31:0] grp_fu_310_p2;
reg   [31:0] tmp_31_reg_844;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_bdd_261;
wire   [31:0] grp_fu_315_p2;
reg   [31:0] tmp_32_reg_849;
wire   [31:0] grp_fu_320_p2;
reg   [31:0] tmp_33_reg_854;
wire   [31:0] grp_fu_325_p2;
reg   [31:0] tmp_34_reg_859;
reg   [31:0] tmp_23_reg_864;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_bdd_275;
reg   [31:0] tmp_24_reg_869;
reg   [31:0] tmp_25_reg_874;
reg   [31:0] tmp_26_reg_879;
reg   [31:0] wrk_reg_884;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_bdd_286;
reg   [31:0] wik_1_reg_889;
reg   [31:0] tmp_29_reg_894;
wire  signed [63:0] cp_addr_rec_fu_694_p2;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_bdd_297;
reg   [8:0] k_reg_157;
reg   [31:0] j_reg_168;
reg   [3:0] q_reg_180;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_315;
reg   [31:0] j_1_reg_191;
reg   [31:0] n3_reg_201;
reg   [31:0] n_2_reg_212;
wire   [0:0] exitcond1_fu_573_p2;
reg   [7:0] j_3_reg_224;
reg   [63:0] cp_rec_reg_235;
reg   [31:0] d_reg_247;
wire   [0:0] tmp_19_fu_585_p2;
reg    ap_sig_cseq_ST_st41_fsm_40;
reg    ap_sig_bdd_349;
reg   [31:0] wik_reg_262;
reg   [7:0] k_1_reg_277;
reg   [31:0] cp_s_reg_290;
wire   [63:0] tmp_8_fu_399_p1;
wire   [63:0] tmp_10_fu_410_p1;
wire  signed [63:0] tmp_11_fu_421_p1;
wire  signed [63:0] tmp_13_fu_432_p1;
wire  signed [63:0] tmp_15_fu_543_p1;
wire   [63:0] cp_sum_cast_fu_631_p1;
wire   [63:0] cp_sum9_cast_fu_652_p1;
wire   [63:0] cp_sum1_cast_fu_668_p1;
wire   [63:0] cp_sum2_cast_fu_685_p1;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_378;
reg    ap_sig_cseq_ST_st40_fsm_39;
reg    ap_sig_bdd_392;
reg    ap_sig_cseq_ST_st39_fsm_38;
reg    ap_sig_bdd_406;
reg   [31:0] grp_fu_302_p0;
reg   [31:0] grp_fu_302_p1;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_bdd_422;
reg    ap_sig_cseq_ST_st34_fsm_33;
reg    ap_sig_bdd_429;
reg   [31:0] grp_fu_306_p0;
reg   [31:0] grp_fu_306_p1;
reg   [31:0] grp_fu_310_p0;
reg   [31:0] grp_fu_310_p1;
reg   [31:0] grp_fu_315_p0;
reg   [31:0] grp_fu_315_p1;
reg   [31:0] grp_fu_320_p0;
reg   [31:0] grp_fu_320_p1;
reg   [31:0] grp_fu_325_p0;
reg   [31:0] grp_fu_325_p1;
wire   [31:0] k_cast3_fu_371_p1;
wire   [8:0] i0_fu_393_p2;
wire   [8:0] tmp_9_fu_404_p2;
wire   [31:0] i1_fu_415_p2;
wire   [31:0] tmp_12_fu_426_p2;
wire   [0:0] slt_fu_449_p2;
wire   [30:0] tmp_18_fu_461_p4;
wire   [0:0] rev5_fu_455_p2;
wire   [0:0] icmp_fu_471_p2;
wire   [30:0] tmp_5_fu_489_p4;
wire   [0:0] or_cond_fu_477_p2;
wire   [31:0] j_5_fu_483_p2;
wire   [31:0] n_3_fu_499_p1;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_515;
wire   [10:0] grp_fu_531_p0;
wire   [31:0] grp_fu_531_p1;
wire   [31:0] tmp_14_fu_537_p2;
wire   [31:0] j_3_cast2_fu_569_p1;
wire   [30:0] k_1_cast1_fu_590_p1;
wire   [7:0] i0_1_fu_611_p2;
wire   [10:0] tmp_36_fu_621_p1;
wire   [10:0] tmp_35_fu_617_p1;
wire   [10:0] cp_sum_fu_625_p2;
wire   [7:0] tmp_22_fu_636_p2;
wire   [10:0] tmp_23_cast_fu_642_p1;
wire   [10:0] cp_sum9_fu_646_p2;
wire   [10:0] tmp_24_cast_fu_657_p2;
wire   [10:0] cp_sum1_fu_662_p2;
wire   [10:0] tmp_26_cast_fu_673_p2;
wire   [10:0] cp_sum2_fu_679_p2;
wire  signed [63:0] cp_cast_fu_690_p1;
reg   [1:0] grp_fu_302_opcode;
wire    grp_fu_302_ce;
reg   [1:0] grp_fu_306_opcode;
wire    grp_fu_306_ce;
wire    grp_fu_310_ce;
wire    grp_fu_315_ce;
wire    grp_fu_320_ce;
wire    grp_fu_325_ce;
wire   [0:0] tmp_s_fu_525_p2;
reg    voicerec_sdiv_11ns_32ns_32_15_seq_U11_ap_start;
wire    grp_fu_531_ce;
reg   [41:0] ap_NS_fsm;


voicerec_FFT_cosVec #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
cosVec_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( cosVec_address0 ),
    .ce0( cosVec_ce0 ),
    .q0( cosVec_q0 )
);

voicerec_FFT_sinVec #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
sinVec_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( sinVec_address0 ),
    .ce0( sinVec_ce0 ),
    .q0( sinVec_q0 )
);

voicerec_faddfsub_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_faddfsub_32ns_32ns_32_5_full_dsp_U5(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_302_p0 ),
    .din1( grp_fu_302_p1 ),
    .opcode( grp_fu_302_opcode ),
    .ce( grp_fu_302_ce ),
    .dout( grp_fu_302_p2 )
);

voicerec_faddfsub_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_faddfsub_32ns_32ns_32_5_full_dsp_U6(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_306_p0 ),
    .din1( grp_fu_306_p1 ),
    .opcode( grp_fu_306_opcode ),
    .ce( grp_fu_306_ce ),
    .dout( grp_fu_306_p2 )
);

voicerec_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_fmul_32ns_32ns_32_4_max_dsp_U7(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_310_p0 ),
    .din1( grp_fu_310_p1 ),
    .ce( grp_fu_310_ce ),
    .dout( grp_fu_310_p2 )
);

voicerec_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_fmul_32ns_32ns_32_4_max_dsp_U8(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_315_p0 ),
    .din1( grp_fu_315_p1 ),
    .ce( grp_fu_315_ce ),
    .dout( grp_fu_315_p2 )
);

voicerec_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_fmul_32ns_32ns_32_4_max_dsp_U9(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_320_p0 ),
    .din1( grp_fu_320_p1 ),
    .ce( grp_fu_320_ce ),
    .dout( grp_fu_320_p2 )
);

voicerec_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_fmul_32ns_32ns_32_4_max_dsp_U10(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_325_p0 ),
    .din1( grp_fu_325_p1 ),
    .ce( grp_fu_325_ce ),
    .dout( grp_fu_325_p2 )
);

voicerec_sdiv_11ns_32ns_32_15_seq #(
    .ID( 1 ),
    .NUM_STAGE( 15 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_sdiv_11ns_32ns_32_15_seq_U11(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .start( voicerec_sdiv_11ns_32ns_32_15_seq_U11_ap_start ),
    .din0( grp_fu_531_p0 ),
    .din1( grp_fu_531_p1 ),
    .ce( grp_fu_531_ce ),
    .dout( grp_fu_531_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        cp_rec_reg_235 <= cp_addr_rec_fu_694_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        cp_rec_reg_235 <= ap_const_lv64_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) & ~(ap_const_lv1_0 == exitcond_fu_594_p2))) begin
        cp_s_reg_290[2] <= n_reg_790[2];
        cp_s_reg_290[3] <= n_reg_790[3];
        cp_s_reg_290[4] <= n_reg_790[4];
        cp_s_reg_290[5] <= n_reg_790[5];
        cp_s_reg_290[6] <= n_reg_790[6];
        cp_s_reg_290[7] <= n_reg_790[7];
        cp_s_reg_290[8] <= n_reg_790[8];
        cp_s_reg_290[9] <= n_reg_790[9];
        cp_s_reg_290[10] <= n_reg_790[10];
        cp_s_reg_290[11] <= n_reg_790[11];
        cp_s_reg_290[12] <= n_reg_790[12];
        cp_s_reg_290[13] <= n_reg_790[13];
        cp_s_reg_290[14] <= n_reg_790[14];
        cp_s_reg_290[15] <= n_reg_790[15];
        cp_s_reg_290[16] <= n_reg_790[16];
        cp_s_reg_290[17] <= n_reg_790[17];
        cp_s_reg_290[18] <= n_reg_790[18];
        cp_s_reg_290[19] <= n_reg_790[19];
        cp_s_reg_290[20] <= n_reg_790[20];
        cp_s_reg_290[21] <= n_reg_790[21];
        cp_s_reg_290[22] <= n_reg_790[22];
        cp_s_reg_290[23] <= n_reg_790[23];
        cp_s_reg_290[24] <= n_reg_790[24];
        cp_s_reg_290[25] <= n_reg_790[25];
        cp_s_reg_290[26] <= n_reg_790[26];
        cp_s_reg_290[27] <= n_reg_790[27];
        cp_s_reg_290[28] <= n_reg_790[28];
        cp_s_reg_290[29] <= n_reg_790[29];
        cp_s_reg_290[30] <= n_reg_790[30];
        cp_s_reg_290[31] <= n_reg_790[31];
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & (ap_const_lv1_0 == exitcond1_fu_573_p2) & (ap_const_lv1_0 == tmp_19_fu_585_p2))) begin
        cp_s_reg_290[2] <= 1'b0;
        cp_s_reg_290[3] <= 1'b0;
        cp_s_reg_290[4] <= 1'b0;
        cp_s_reg_290[5] <= 1'b0;
        cp_s_reg_290[6] <= 1'b0;
        cp_s_reg_290[7] <= 1'b0;
        cp_s_reg_290[8] <= 1'b0;
        cp_s_reg_290[9] <= 1'b0;
        cp_s_reg_290[10] <= 1'b0;
        cp_s_reg_290[11] <= 1'b0;
        cp_s_reg_290[12] <= 1'b0;
        cp_s_reg_290[13] <= 1'b0;
        cp_s_reg_290[14] <= 1'b0;
        cp_s_reg_290[15] <= 1'b0;
        cp_s_reg_290[16] <= 1'b0;
        cp_s_reg_290[17] <= 1'b0;
        cp_s_reg_290[18] <= 1'b0;
        cp_s_reg_290[19] <= 1'b0;
        cp_s_reg_290[20] <= 1'b0;
        cp_s_reg_290[21] <= 1'b0;
        cp_s_reg_290[22] <= 1'b0;
        cp_s_reg_290[23] <= 1'b0;
        cp_s_reg_290[24] <= 1'b0;
        cp_s_reg_290[25] <= 1'b0;
        cp_s_reg_290[26] <= 1'b0;
        cp_s_reg_290[27] <= 1'b0;
        cp_s_reg_290[28] <= 1'b0;
        cp_s_reg_290[29] <= 1'b0;
        cp_s_reg_290[30] <= 1'b0;
        cp_s_reg_290[31] <= 1'b0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) & (ap_const_lv1_0 == exitcond_fu_594_p2) & (ap_const_lv1_0 == tmp_20_fu_606_p2))) begin
        d_reg_247 <= d_reg_247;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        d_reg_247 <= wrk_reg_884;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & (ap_const_lv1_0 == exitcond1_fu_573_p2) & ~(ap_const_lv1_0 == tmp_19_fu_585_p2))) begin
        d_reg_247 <= ap_const_lv32_3F800000;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == exitcond2_fu_437_p2))) begin
        j_1_reg_191 <= j_2_fu_503_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        j_1_reg_191 <= j_reg_168;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        j_3_reg_224 <= j_6_reg_804;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        j_3_reg_224 <= ap_const_lv8_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == exitcond2_fu_437_p2))) begin
        j_reg_168 <= j_4_fu_519_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        j_reg_168 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) & (ap_const_lv1_0 == exitcond_fu_594_p2) & (ap_const_lv1_0 == tmp_20_fu_606_p2))) begin
        k_1_reg_277 <= k_3_fu_600_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        k_1_reg_277 <= k_3_reg_815;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & (ap_const_lv1_0 == exitcond1_fu_573_p2) & ~(ap_const_lv1_0 == tmp_19_fu_585_p2))) begin
        k_1_reg_277 <= ap_const_lv8_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == exitcond2_fu_437_p2))) begin
        k_reg_157 <= k_2_reg_703;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        k_reg_157 <= ap_const_lv9_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == exitcond2_fu_437_p2))) begin
        n3_reg_201 <= n_1_fu_511_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        n3_reg_201 <= ap_const_lv32_80;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & ~(ap_const_lv1_0 == exitcond1_fu_573_p2))) begin
        n_2_reg_212[1] <= n_reg_790[1];
        n_2_reg_212[2] <= n_reg_790[2];
        n_2_reg_212[3] <= n_reg_790[3];
        n_2_reg_212[4] <= n_reg_790[4];
        n_2_reg_212[5] <= n_reg_790[5];
        n_2_reg_212[6] <= n_reg_790[6];
        n_2_reg_212[7] <= n_reg_790[7];
        n_2_reg_212[8] <= n_reg_790[8];
        n_2_reg_212[9] <= n_reg_790[9];
        n_2_reg_212[10] <= n_reg_790[10];
        n_2_reg_212[11] <= n_reg_790[11];
        n_2_reg_212[12] <= n_reg_790[12];
        n_2_reg_212[13] <= n_reg_790[13];
        n_2_reg_212[14] <= n_reg_790[14];
        n_2_reg_212[15] <= n_reg_790[15];
        n_2_reg_212[16] <= n_reg_790[16];
        n_2_reg_212[17] <= n_reg_790[17];
        n_2_reg_212[18] <= n_reg_790[18];
        n_2_reg_212[19] <= n_reg_790[19];
        n_2_reg_212[20] <= n_reg_790[20];
        n_2_reg_212[21] <= n_reg_790[21];
        n_2_reg_212[22] <= n_reg_790[22];
        n_2_reg_212[23] <= n_reg_790[23];
        n_2_reg_212[24] <= n_reg_790[24];
        n_2_reg_212[25] <= n_reg_790[25];
        n_2_reg_212[26] <= n_reg_790[26];
        n_2_reg_212[27] <= n_reg_790[27];
        n_2_reg_212[28] <= n_reg_790[28];
        n_2_reg_212[29] <= n_reg_790[29];
        n_2_reg_212[30] <= n_reg_790[30];
        n_2_reg_212[31] <= n_reg_790[31];
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond3_fu_375_p2 == ap_const_lv1_0))) begin
        n_2_reg_212[1] <= 1'b1;
        n_2_reg_212[2] <= 1'b0;
        n_2_reg_212[3] <= 1'b0;
        n_2_reg_212[4] <= 1'b0;
        n_2_reg_212[5] <= 1'b0;
        n_2_reg_212[6] <= 1'b0;
        n_2_reg_212[7] <= 1'b0;
        n_2_reg_212[8] <= 1'b0;
        n_2_reg_212[9] <= 1'b0;
        n_2_reg_212[10] <= 1'b0;
        n_2_reg_212[11] <= 1'b0;
        n_2_reg_212[12] <= 1'b0;
        n_2_reg_212[13] <= 1'b0;
        n_2_reg_212[14] <= 1'b0;
        n_2_reg_212[15] <= 1'b0;
        n_2_reg_212[16] <= 1'b0;
        n_2_reg_212[17] <= 1'b0;
        n_2_reg_212[18] <= 1'b0;
        n_2_reg_212[19] <= 1'b0;
        n_2_reg_212[20] <= 1'b0;
        n_2_reg_212[21] <= 1'b0;
        n_2_reg_212[22] <= 1'b0;
        n_2_reg_212[23] <= 1'b0;
        n_2_reg_212[24] <= 1'b0;
        n_2_reg_212[25] <= 1'b0;
        n_2_reg_212[26] <= 1'b0;
        n_2_reg_212[27] <= 1'b0;
        n_2_reg_212[28] <= 1'b0;
        n_2_reg_212[29] <= 1'b0;
        n_2_reg_212[30] <= 1'b0;
        n_2_reg_212[31] <= 1'b0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == exitcond2_fu_437_p2))) begin
        q_reg_180 <= q_1_fu_443_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        q_reg_180 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) & (ap_const_lv1_0 == exitcond_fu_594_p2) & (ap_const_lv1_0 == tmp_20_fu_606_p2))) begin
        wik_reg_262 <= wik_reg_262;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        wik_reg_262 <= wik_1_reg_889;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & (ap_const_lv1_0 == exitcond1_fu_573_p2) & ~(ap_const_lv1_0 == tmp_19_fu_585_p2))) begin
        wik_reg_262 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond3_fu_375_p2 == ap_const_lv1_0) & ~(tmp_fu_387_p2 == ap_const_lv1_0))) begin
        c_addr_1_reg_717[1] <= tmp_10_fu_410_p1[1];
c_addr_1_reg_717[2] <= tmp_10_fu_410_p1[2];
c_addr_1_reg_717[3] <= tmp_10_fu_410_p1[3];
c_addr_1_reg_717[4] <= tmp_10_fu_410_p1[4];
c_addr_1_reg_717[5] <= tmp_10_fu_410_p1[5];
c_addr_1_reg_717[6] <= tmp_10_fu_410_p1[6];
c_addr_1_reg_717[7] <= tmp_10_fu_410_p1[7];
c_addr_1_reg_717[8] <= tmp_10_fu_410_p1[8];
        c_addr_reg_712[1] <= tmp_8_fu_399_p1[1];
c_addr_reg_712[2] <= tmp_8_fu_399_p1[2];
c_addr_reg_712[3] <= tmp_8_fu_399_p1[3];
c_addr_reg_712[4] <= tmp_8_fu_399_p1[4];
c_addr_reg_712[5] <= tmp_8_fu_399_p1[5];
c_addr_reg_712[6] <= tmp_8_fu_399_p1[6];
c_addr_reg_712[7] <= tmp_8_fu_399_p1[7];
c_addr_reg_712[8] <= tmp_8_fu_399_p1[8];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        c_addr_2_reg_722[1] <= tmp_11_fu_421_p1[1];
c_addr_2_reg_722[2] <= tmp_11_fu_421_p1[2];
c_addr_2_reg_722[3] <= tmp_11_fu_421_p1[3];
c_addr_2_reg_722[4] <= tmp_11_fu_421_p1[4];
c_addr_2_reg_722[5] <= tmp_11_fu_421_p1[5];
c_addr_2_reg_722[6] <= tmp_11_fu_421_p1[6];
c_addr_2_reg_722[7] <= tmp_11_fu_421_p1[7];
c_addr_2_reg_722[8] <= tmp_11_fu_421_p1[8];
        c_addr_3_reg_727[1] <= tmp_13_fu_432_p1[1];
c_addr_3_reg_727[2] <= tmp_13_fu_432_p1[2];
c_addr_3_reg_727[3] <= tmp_13_fu_432_p1[3];
c_addr_3_reg_727[4] <= tmp_13_fu_432_p1[4];
c_addr_3_reg_727[5] <= tmp_13_fu_432_p1[5];
c_addr_3_reg_727[6] <= tmp_13_fu_432_p1[6];
c_addr_3_reg_727[7] <= tmp_13_fu_432_p1[7];
c_addr_3_reg_727[8] <= tmp_13_fu_432_p1[8];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) & (ap_const_lv1_0 == exitcond_fu_594_p2) & ~(ap_const_lv1_0 == tmp_20_fu_606_p2))) begin
        c_addr_4_reg_824 <= cp_sum_cast_fu_631_p1;
        c_addr_5_reg_829 <= cp_sum9_cast_fu_652_p1;
        c_addr_6_reg_834 <= cp_sum1_cast_fu_668_p1;
        c_addr_7_reg_839 <= cp_sum2_cast_fu_685_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        j_6_reg_804 <= j_6_fu_579_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        k_2_reg_703 <= k_2_fu_381_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        k_3_reg_815 <= k_3_fu_600_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        n_reg_790[2] <= n_fu_559_p2[2];
n_reg_790[3] <= n_fu_559_p2[3];
n_reg_790[4] <= n_fu_559_p2[4];
n_reg_790[5] <= n_fu_559_p2[5];
n_reg_790[6] <= n_fu_559_p2[6];
n_reg_790[7] <= n_fu_559_p2[7];
n_reg_790[8] <= n_fu_559_p2[8];
n_reg_790[9] <= n_fu_559_p2[9];
n_reg_790[10] <= n_fu_559_p2[10];
n_reg_790[11] <= n_fu_559_p2[11];
n_reg_790[12] <= n_fu_559_p2[12];
n_reg_790[13] <= n_fu_559_p2[13];
n_reg_790[14] <= n_fu_559_p2[14];
n_reg_790[15] <= n_fu_559_p2[15];
n_reg_790[16] <= n_fu_559_p2[16];
n_reg_790[17] <= n_fu_559_p2[17];
n_reg_790[18] <= n_fu_559_p2[18];
n_reg_790[19] <= n_fu_559_p2[19];
n_reg_790[20] <= n_fu_559_p2[20];
n_reg_790[21] <= n_fu_559_p2[21];
n_reg_790[22] <= n_fu_559_p2[22];
n_reg_790[23] <= n_fu_559_p2[23];
n_reg_790[24] <= n_fu_559_p2[24];
n_reg_790[25] <= n_fu_559_p2[25];
n_reg_790[26] <= n_fu_559_p2[26];
n_reg_790[27] <= n_fu_559_p2[27];
n_reg_790[28] <= n_fu_559_p2[28];
n_reg_790[29] <= n_fu_559_p2[29];
n_reg_790[30] <= n_fu_559_p2[30];
n_reg_790[31] <= n_fu_559_p2[31];
        nb_reg_780 <= grp_fu_531_p2;
        tmp_3_reg_785 <= {{n_2_reg_212[ap_const_lv32_1F : ap_const_lv32_1]}};
        tmp_7_reg_796[1] <= tmp_7_fu_565_p1[1];
tmp_7_reg_796[2] <= tmp_7_fu_565_p1[2];
tmp_7_reg_796[3] <= tmp_7_fu_565_p1[3];
tmp_7_reg_796[4] <= tmp_7_fu_565_p1[4];
tmp_7_reg_796[5] <= tmp_7_fu_565_p1[5];
tmp_7_reg_796[6] <= tmp_7_fu_565_p1[6];
tmp_7_reg_796[7] <= tmp_7_fu_565_p1[7];
tmp_7_reg_796[8] <= tmp_7_fu_565_p1[8];
tmp_7_reg_796[9] <= tmp_7_fu_565_p1[9];
tmp_7_reg_796[10] <= tmp_7_fu_565_p1[10];
        wi_reg_774 <= sinVec_q0;
        wr_reg_768 <= cosVec_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31))) begin
        reg_338 <= c_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32))) begin
        reg_347 <= c_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) | (ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36) | (ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37))) begin
        reg_356 <= grp_fu_302_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) | (ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37))) begin
        reg_364 <= grp_fu_306_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        tmp_23_reg_864 <= grp_fu_310_p2;
        tmp_24_reg_869 <= grp_fu_315_p2;
        tmp_25_reg_874 <= grp_fu_320_p2;
        tmp_26_reg_879 <= grp_fu_325_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        tmp_29_reg_894 <= grp_fu_306_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        tmp_31_reg_844 <= grp_fu_310_p2;
        tmp_32_reg_849 <= grp_fu_315_p2;
        tmp_33_reg_854 <= grp_fu_320_p2;
        tmp_34_reg_859 <= grp_fu_325_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond3_fu_375_p2 == ap_const_lv1_0))) begin
        tmp_reg_708 <= tmp_fu_387_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        wik_1_reg_889 <= grp_fu_306_p2;
        wrk_reg_884 <= grp_fu_302_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st7_fsm_6 or tmp_s_fu_525_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & (ap_const_lv1_0 == tmp_s_fu_525_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or tmp_s_fu_525_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & (ap_const_lv1_0 == tmp_s_fu_525_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_60)
begin
    if (ap_sig_bdd_60) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st20_fsm_19 assign process. ///
always @ (ap_sig_bdd_200)
begin
    if (ap_sig_bdd_200) begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st21_fsm_20 assign process. ///
always @ (ap_sig_bdd_210)
begin
    if (ap_sig_bdd_210) begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st22_fsm_21 assign process. ///
always @ (ap_sig_bdd_228)
begin
    if (ap_sig_bdd_228) begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st23_fsm_22 assign process. ///
always @ (ap_sig_bdd_237)
begin
    if (ap_sig_bdd_237) begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st24_fsm_23 assign process. ///
always @ (ap_sig_bdd_105)
begin
    if (ap_sig_bdd_105) begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st26_fsm_25 assign process. ///
always @ (ap_sig_bdd_261)
begin
    if (ap_sig_bdd_261) begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st27_fsm_26 assign process. ///
always @ (ap_sig_bdd_275)
begin
    if (ap_sig_bdd_275) begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st28_fsm_27 assign process. ///
always @ (ap_sig_bdd_422)
begin
    if (ap_sig_bdd_422) begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_153)
begin
    if (ap_sig_bdd_153) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st31_fsm_30 assign process. ///
always @ (ap_sig_bdd_286)
begin
    if (ap_sig_bdd_286) begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st32_fsm_31 assign process. ///
always @ (ap_sig_bdd_113)
begin
    if (ap_sig_bdd_113) begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st33_fsm_32 assign process. ///
always @ (ap_sig_bdd_122)
begin
    if (ap_sig_bdd_122) begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st34_fsm_33 assign process. ///
always @ (ap_sig_bdd_429)
begin
    if (ap_sig_bdd_429) begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st37_fsm_36 assign process. ///
always @ (ap_sig_bdd_132)
begin
    if (ap_sig_bdd_132) begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st38_fsm_37 assign process. ///
always @ (ap_sig_bdd_140)
begin
    if (ap_sig_bdd_140) begin
        ap_sig_cseq_ST_st38_fsm_37 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st38_fsm_37 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st39_fsm_38 assign process. ///
always @ (ap_sig_bdd_406)
begin
    if (ap_sig_bdd_406) begin
        ap_sig_cseq_ST_st39_fsm_38 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st39_fsm_38 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_98)
begin
    if (ap_sig_bdd_98) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st40_fsm_39 assign process. ///
always @ (ap_sig_bdd_392)
begin
    if (ap_sig_bdd_392) begin
        ap_sig_cseq_ST_st40_fsm_39 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st40_fsm_39 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st41_fsm_40 assign process. ///
always @ (ap_sig_bdd_349)
begin
    if (ap_sig_bdd_349) begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st42_fsm_41 assign process. ///
always @ (ap_sig_bdd_297)
begin
    if (ap_sig_bdd_297) begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_378)
begin
    if (ap_sig_bdd_378) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_315)
begin
    if (ap_sig_bdd_315) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_180)
begin
    if (ap_sig_bdd_180) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_515)
begin
    if (ap_sig_bdd_515) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// c_address0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st38_fsm_37 or ap_sig_cseq_ST_st2_fsm_1 or c_addr_reg_712 or c_addr_2_reg_722 or ap_sig_cseq_ST_st23_fsm_22 or c_addr_4_reg_824 or c_addr_6_reg_834 or ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st5_fsm_4 or tmp_8_fu_399_p1 or tmp_11_fu_421_p1 or cp_sum1_cast_fu_668_p1 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st40_fsm_39)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_39)) begin
        c_address0 = c_addr_6_reg_834;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        c_address0 = c_addr_2_reg_722;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c_address0 = c_addr_reg_712;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37) | (ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30))) begin
        c_address0 = c_addr_4_reg_824;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        c_address0 = cp_sum1_cast_fu_668_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        c_address0 = tmp_11_fu_421_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        c_address0 = tmp_8_fu_399_p1;
    end else begin
        c_address0 = 'bx;
    end
end

/// c_address1 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st32_fsm_31 or ap_sig_cseq_ST_st2_fsm_1 or c_addr_1_reg_717 or c_addr_3_reg_727 or ap_sig_cseq_ST_st23_fsm_22 or c_addr_5_reg_829 or c_addr_7_reg_839 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st41_fsm_40 or tmp_10_fu_410_p1 or tmp_13_fu_432_p1 or cp_sum2_cast_fu_685_p1 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st39_fsm_38)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        c_address1 = c_addr_7_reg_839;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        c_address1 = c_addr_3_reg_727;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c_address1 = c_addr_1_reg_717;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) | (ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_38))) begin
        c_address1 = c_addr_5_reg_829;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        c_address1 = cp_sum2_cast_fu_685_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        c_address1 = tmp_13_fu_432_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        c_address1 = tmp_10_fu_410_p1;
    end else begin
        c_address1 = 'bx;
    end
end

/// c_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st38_fsm_37 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st23_fsm_22 or ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st40_fsm_39)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37) | (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) | (ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_39))) begin
        c_ce0 = ap_const_logic_1;
    end else begin
        c_ce0 = ap_const_logic_0;
    end
end

/// c_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st32_fsm_31 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st23_fsm_22 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st41_fsm_40 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st39_fsm_38)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) | (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_38))) begin
        c_ce1 = ap_const_logic_1;
    end else begin
        c_ce1 = ap_const_logic_0;
    end
end

/// c_d0 assign process. ///
always @ (c_q0 or reg_338 or reg_356 or ap_sig_cseq_ST_st38_fsm_37 or tmp_29_reg_894 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st40_fsm_39)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_39)) begin
        c_d0 = tmp_29_reg_894;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37)) begin
        c_d0 = reg_356;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        c_d0 = reg_338;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c_d0 = c_q0;
    end else begin
        c_d0 = 'bx;
    end
end

/// c_d1 assign process. ///
always @ (c_q1 or reg_347 or reg_356 or reg_364 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st41_fsm_40 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st39_fsm_38)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        c_d1 = reg_364;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_38)) begin
        c_d1 = reg_356;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        c_d1 = reg_347;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c_d1 = c_q1;
    end else begin
        c_d1 = 'bx;
    end
end

/// c_we0 assign process. ///
always @ (ap_sig_cseq_ST_st38_fsm_37 or tmp_reg_708 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st40_fsm_39)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~(tmp_reg_708 == ap_const_lv1_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_39))) begin
        c_we0 = ap_const_logic_1;
    end else begin
        c_we0 = ap_const_logic_0;
    end
end

/// c_we1 assign process. ///
always @ (tmp_reg_708 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st41_fsm_40 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st39_fsm_38)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~(tmp_reg_708 == ap_const_lv1_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_38))) begin
        c_we1 = ap_const_logic_1;
    end else begin
        c_we1 = ap_const_logic_0;
    end
end

/// cosVec_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st20_fsm_19)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        cosVec_ce0 = ap_const_logic_1;
    end else begin
        cosVec_ce0 = ap_const_logic_0;
    end
end

/// grp_fu_302_opcode assign process. ///
always @ (ap_sig_cseq_ST_st33_fsm_32 or ap_sig_cseq_ST_st27_fsm_26 or ap_sig_cseq_ST_st28_fsm_27 or ap_sig_cseq_ST_st34_fsm_33)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26) | (ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27))) begin
        grp_fu_302_opcode = ap_const_lv2_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) | (ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33))) begin
        grp_fu_302_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_302_opcode = 'bx;
    end
end

/// grp_fu_302_p0 assign process. ///
always @ (reg_338 or reg_347 or ap_sig_cseq_ST_st33_fsm_32 or tmp_31_reg_844 or tmp_23_reg_864 or ap_sig_cseq_ST_st27_fsm_26 or ap_sig_cseq_ST_st28_fsm_27 or ap_sig_cseq_ST_st34_fsm_33)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        grp_fu_302_p0 = reg_347;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_fu_302_p0 = reg_338;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        grp_fu_302_p0 = tmp_23_reg_864;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        grp_fu_302_p0 = tmp_31_reg_844;
    end else begin
        grp_fu_302_p0 = 'bx;
    end
end

/// grp_fu_302_p1 assign process. ///
always @ (ap_sig_cseq_ST_st33_fsm_32 or reg_356 or reg_364 or tmp_32_reg_849 or ap_sig_cseq_ST_st27_fsm_26 or tmp_24_reg_869 or ap_sig_cseq_ST_st28_fsm_27 or ap_sig_cseq_ST_st34_fsm_33)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        grp_fu_302_p1 = reg_364;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_fu_302_p1 = reg_356;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        grp_fu_302_p1 = tmp_24_reg_869;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        grp_fu_302_p1 = tmp_32_reg_849;
    end else begin
        grp_fu_302_p1 = 'bx;
    end
end

/// grp_fu_306_opcode assign process. ///
always @ (ap_sig_cseq_ST_st33_fsm_32 or ap_sig_cseq_ST_st27_fsm_26 or ap_sig_cseq_ST_st28_fsm_27 or ap_sig_cseq_ST_st34_fsm_33)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) | (ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33))) begin
        grp_fu_306_opcode = ap_const_lv2_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26) | (ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27))) begin
        grp_fu_306_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_306_opcode = 'bx;
    end
end

/// grp_fu_306_p0 assign process. ///
always @ (reg_338 or reg_347 or ap_sig_cseq_ST_st33_fsm_32 or tmp_33_reg_854 or ap_sig_cseq_ST_st27_fsm_26 or tmp_25_reg_874 or ap_sig_cseq_ST_st28_fsm_27 or ap_sig_cseq_ST_st34_fsm_33)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        grp_fu_306_p0 = reg_347;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_fu_306_p0 = reg_338;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        grp_fu_306_p0 = tmp_25_reg_874;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        grp_fu_306_p0 = tmp_33_reg_854;
    end else begin
        grp_fu_306_p0 = 'bx;
    end
end

/// grp_fu_306_p1 assign process. ///
always @ (ap_sig_cseq_ST_st33_fsm_32 or reg_356 or reg_364 or tmp_34_reg_859 or ap_sig_cseq_ST_st27_fsm_26 or tmp_26_reg_879 or ap_sig_cseq_ST_st28_fsm_27 or ap_sig_cseq_ST_st34_fsm_33)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        grp_fu_306_p1 = reg_364;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_fu_306_p1 = reg_356;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        grp_fu_306_p1 = tmp_26_reg_879;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        grp_fu_306_p1 = tmp_34_reg_859;
    end else begin
        grp_fu_306_p1 = 'bx;
    end
end

/// grp_fu_310_p0 assign process. ///
always @ (ap_sig_cseq_ST_st24_fsm_23 or wr_reg_768 or ap_sig_cseq_ST_st23_fsm_22 or d_reg_247)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_310_p0 = d_reg_247;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_310_p0 = wr_reg_768;
    end else begin
        grp_fu_310_p0 = 'bx;
    end
end

/// grp_fu_310_p1 assign process. ///
always @ (c_q0 or ap_sig_cseq_ST_st24_fsm_23 or ap_sig_cseq_ST_st23_fsm_22 or d_reg_247)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_310_p1 = c_q0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_310_p1 = d_reg_247;
    end else begin
        grp_fu_310_p1 = 'bx;
    end
end

/// grp_fu_315_p0 assign process. ///
always @ (ap_sig_cseq_ST_st24_fsm_23 or wi_reg_774 or ap_sig_cseq_ST_st23_fsm_22 or wik_reg_262)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_315_p0 = wik_reg_262;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_315_p0 = wi_reg_774;
    end else begin
        grp_fu_315_p0 = 'bx;
    end
end

/// grp_fu_315_p1 assign process. ///
always @ (c_q1 or ap_sig_cseq_ST_st24_fsm_23 or ap_sig_cseq_ST_st23_fsm_22 or wik_reg_262)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_315_p1 = c_q1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_315_p1 = wik_reg_262;
    end else begin
        grp_fu_315_p1 = 'bx;
    end
end

/// grp_fu_320_p0 assign process. ///
always @ (ap_sig_cseq_ST_st24_fsm_23 or wr_reg_768 or ap_sig_cseq_ST_st23_fsm_22 or d_reg_247)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_320_p0 = d_reg_247;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_320_p0 = wr_reg_768;
    end else begin
        grp_fu_320_p0 = 'bx;
    end
end

/// grp_fu_320_p1 assign process. ///
always @ (c_q1 or ap_sig_cseq_ST_st24_fsm_23 or ap_sig_cseq_ST_st23_fsm_22 or wik_reg_262)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_320_p1 = c_q1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_320_p1 = wik_reg_262;
    end else begin
        grp_fu_320_p1 = 'bx;
    end
end

/// grp_fu_325_p0 assign process. ///
always @ (ap_sig_cseq_ST_st24_fsm_23 or wi_reg_774 or ap_sig_cseq_ST_st23_fsm_22 or wik_reg_262)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_325_p0 = wik_reg_262;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_325_p0 = wi_reg_774;
    end else begin
        grp_fu_325_p0 = 'bx;
    end
end

/// grp_fu_325_p1 assign process. ///
always @ (c_q0 or ap_sig_cseq_ST_st24_fsm_23 or ap_sig_cseq_ST_st23_fsm_22 or d_reg_247)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_325_p1 = c_q0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_325_p1 = d_reg_247;
    end else begin
        grp_fu_325_p1 = 'bx;
    end
end

/// sinVec_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st20_fsm_19)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        sinVec_ce0 = ap_const_logic_1;
    end else begin
        sinVec_ce0 = ap_const_logic_0;
    end
end

/// voicerec_sdiv_11ns_32ns_32_15_seq_U11_ap_start assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or tmp_s_fu_525_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & ~(ap_const_lv1_0 == tmp_s_fu_525_p2))) begin
        voicerec_sdiv_11ns_32ns_32_15_seq_U11_ap_start = ap_const_logic_1;
    end else begin
        voicerec_sdiv_11ns_32ns_32_15_seq_U11_ap_start = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or tmp_fu_387_p2 or exitcond3_fu_375_p2 or exitcond2_fu_437_p2 or exitcond_fu_594_p2 or tmp_20_fu_606_p2 or exitcond1_fu_573_p2 or tmp_19_fu_585_p2 or tmp_s_fu_525_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (((exitcond3_fu_375_p2 == ap_const_lv1_0) & (tmp_fu_387_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else if (((exitcond3_fu_375_p2 == ap_const_lv1_0) & ~(tmp_fu_387_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            if (~(ap_const_lv1_0 == exitcond2_fu_437_p2)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st7_fsm_6 : 
        begin
            if ((ap_const_lv1_0 == tmp_s_fu_525_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            if (((ap_const_lv1_0 == exitcond1_fu_573_p2) & (ap_const_lv1_0 == tmp_19_fu_585_p2))) begin
                ap_NS_fsm = ap_ST_st42_fsm_41;
            end else if (((ap_const_lv1_0 == exitcond1_fu_573_p2) & ~(ap_const_lv1_0 == tmp_19_fu_585_p2))) begin
                ap_NS_fsm = ap_ST_st23_fsm_22;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st23_fsm_22 : 
        begin
            if (((ap_const_lv1_0 == exitcond_fu_594_p2) & ~(ap_const_lv1_0 == tmp_20_fu_606_p2))) begin
                ap_NS_fsm = ap_ST_st24_fsm_23;
            end else if (((ap_const_lv1_0 == exitcond_fu_594_p2) & (ap_const_lv1_0 == tmp_20_fu_606_p2))) begin
                ap_NS_fsm = ap_ST_st23_fsm_22;
            end else begin
                ap_NS_fsm = ap_ST_st42_fsm_41;
            end
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st42_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_105 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_105 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end

/// ap_sig_bdd_113 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_113 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1F]);
end

/// ap_sig_bdd_122 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_122 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_20]);
end

/// ap_sig_bdd_132 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_132 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_24]);
end

/// ap_sig_bdd_140 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_140 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_25]);
end

/// ap_sig_bdd_153 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_153 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_180 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_180 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_200 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_200 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end

/// ap_sig_bdd_210 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_210 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end

/// ap_sig_bdd_228 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_228 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_15]);
end

/// ap_sig_bdd_237 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_237 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_16]);
end

/// ap_sig_bdd_261 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_261 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_19]);
end

/// ap_sig_bdd_275 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_275 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end

/// ap_sig_bdd_286 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_286 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1E]);
end

/// ap_sig_bdd_297 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_297 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_29]);
end

/// ap_sig_bdd_315 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_315 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_349 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_349 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_28]);
end

/// ap_sig_bdd_378 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_378 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_392 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_392 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_27]);
end

/// ap_sig_bdd_406 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_406 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_26]);
end

/// ap_sig_bdd_422 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_422 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1B]);
end

/// ap_sig_bdd_429 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_429 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_21]);
end

/// ap_sig_bdd_515 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_515 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_60 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_60 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_98 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_98 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end
assign cosVec_address0 = tmp_15_fu_543_p1;
assign cp_addr_rec_fu_694_p2 = ($signed(cp_cast_fu_690_p1) + $signed(cp_rec_reg_235));
assign cp_cast_fu_690_p1 = $signed(cp_s_reg_290);
assign cp_sum1_cast_fu_668_p1 = cp_sum1_fu_662_p2;
assign cp_sum1_fu_662_p2 = (tmp_36_fu_621_p1 + tmp_24_cast_fu_657_p2);
assign cp_sum2_cast_fu_685_p1 = cp_sum2_fu_679_p2;
assign cp_sum2_fu_679_p2 = (tmp_36_fu_621_p1 + tmp_26_cast_fu_673_p2);
assign cp_sum9_cast_fu_652_p1 = cp_sum9_fu_646_p2;
assign cp_sum9_fu_646_p2 = (tmp_36_fu_621_p1 + tmp_23_cast_fu_642_p1);
assign cp_sum_cast_fu_631_p1 = cp_sum_fu_625_p2;
assign cp_sum_fu_625_p2 = (tmp_36_fu_621_p1 + tmp_35_fu_617_p1);
assign exitcond1_fu_573_p2 = (j_3_reg_224 == ap_const_lv8_80? 1'b1: 1'b0);
assign exitcond2_fu_437_p2 = (q_reg_180 == ap_const_lv4_8? 1'b1: 1'b0);
assign exitcond3_fu_375_p2 = (k_reg_157 == ap_const_lv9_100? 1'b1: 1'b0);
assign exitcond_fu_594_p2 = (k_1_reg_277 == ap_const_lv8_80? 1'b1: 1'b0);
assign grp_fu_302_ce = ap_const_logic_1;
assign grp_fu_306_ce = ap_const_logic_1;
assign grp_fu_310_ce = ap_const_logic_1;
assign grp_fu_315_ce = ap_const_logic_1;
assign grp_fu_320_ce = ap_const_logic_1;
assign grp_fu_325_ce = ap_const_logic_1;
assign grp_fu_531_ce = ap_const_logic_1;
assign grp_fu_531_p0 = ap_const_lv32_100;
assign grp_fu_531_p1 = n_2_reg_212;
assign i0_1_fu_611_p2 = k_1_reg_277 << ap_const_lv8_1;
assign i0_fu_393_p2 = k_reg_157 << ap_const_lv9_1;
assign i1_fu_415_p2 = j_reg_168 << ap_const_lv32_1;
assign icmp_fu_471_p2 = ($signed(tmp_18_fu_461_p4) > $signed(31'b0000000000000000000000000000000)? 1'b1: 1'b0);
assign j_2_fu_503_p3 = ((or_cond_fu_477_p2)? j_5_fu_483_p2: j_1_reg_191);
assign j_3_cast2_fu_569_p1 = j_3_reg_224;
assign j_4_fu_519_p2 = (j_1_reg_191 + n3_reg_201);
assign j_5_fu_483_p2 = (j_1_reg_191 - n3_reg_201);
assign j_6_fu_579_p2 = (j_3_reg_224 + ap_const_lv8_1);
assign k_1_cast1_fu_590_p1 = k_1_reg_277;
assign k_2_fu_381_p2 = (k_reg_157 + ap_const_lv9_1);
assign k_3_fu_600_p2 = (k_1_reg_277 + ap_const_lv8_1);
assign k_cast3_fu_371_p1 = k_reg_157;
assign n_1_fu_511_p3 = ((or_cond_fu_477_p2)? n_3_fu_499_p1: n3_reg_201);
assign n_3_fu_499_p1 = tmp_5_fu_489_p4;
assign n_fu_559_p2 = n_2_reg_212 << ap_const_lv32_1;
assign or_cond_fu_477_p2 = (rev5_fu_455_p2 & icmp_fu_471_p2);
assign q_1_fu_443_p2 = (q_reg_180 + ap_const_lv4_1);
assign rev5_fu_455_p2 = (slt_fu_449_p2 ^ ap_const_lv1_1);
assign sinVec_address0 = tmp_15_fu_543_p1;
assign slt_fu_449_p2 = ($signed(j_1_reg_191) < $signed(n3_reg_201)? 1'b1: 1'b0);
assign tmp_10_fu_410_p1 = tmp_9_fu_404_p2;
assign tmp_11_fu_421_p1 = $signed(i1_fu_415_p2);
assign tmp_12_fu_426_p2 = (i1_fu_415_p2 | ap_const_lv32_1);
assign tmp_13_fu_432_p1 = $signed(tmp_12_fu_426_p2);
assign tmp_14_fu_537_p2 = ($signed(n_2_reg_212) + $signed(ap_const_lv32_FFFFFFFF));
assign tmp_15_fu_543_p1 = $signed(tmp_14_fu_537_p2);
assign tmp_18_fu_461_p4 = {{n3_reg_201[ap_const_lv32_1F : ap_const_lv32_1]}};
assign tmp_19_fu_585_p2 = ($signed(j_3_cast2_fu_569_p1) < $signed(nb_reg_780)? 1'b1: 1'b0);
assign tmp_20_fu_606_p2 = ($signed(k_1_cast1_fu_590_p1) < $signed(tmp_3_reg_785)? 1'b1: 1'b0);
assign tmp_22_fu_636_p2 = (i0_1_fu_611_p2 | ap_const_lv8_1);
assign tmp_23_cast_fu_642_p1 = tmp_22_fu_636_p2;
assign tmp_24_cast_fu_657_p2 = (tmp_35_fu_617_p1 + tmp_7_reg_796);
assign tmp_26_cast_fu_673_p2 = (tmp_24_cast_fu_657_p2 | ap_const_lv11_1);
assign tmp_35_fu_617_p1 = i0_1_fu_611_p2;
assign tmp_36_fu_621_p1 = cp_rec_reg_235[10:0];
assign tmp_5_fu_489_p4 = {{n3_reg_201[ap_const_lv32_1F : ap_const_lv32_1]}};
assign tmp_7_fu_565_p1 = n_2_reg_212[10:0];
assign tmp_8_fu_399_p1 = i0_fu_393_p2;
assign tmp_9_fu_404_p2 = (i0_fu_393_p2 | ap_const_lv9_1);
assign tmp_fu_387_p2 = ($signed(k_cast3_fu_371_p1) < $signed(j_reg_168)? 1'b1: 1'b0);
assign tmp_s_fu_525_p2 = ($signed(n_2_reg_212) < $signed(32'b100000001)? 1'b1: 1'b0);
always @ (posedge ap_clk)
begin
    c_addr_reg_712[0] <= 1'b0;
    c_addr_1_reg_717[0] <= 1'b1;
    c_addr_2_reg_722[0] <= 1'b0;
    c_addr_3_reg_727[0] <= 1'b1;
    n_reg_790[1:0] <= 2'b00;
    tmp_7_reg_796[0] <= 1'b0;
    n_2_reg_212[0] <= 1'b0;
    cp_s_reg_290[1:0] <= 2'b00;
end



endmodule //voicerec_FFT

