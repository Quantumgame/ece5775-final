// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.3
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module voicerec_FFT (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        c_address0,
        c_ce0,
        c_we0,
        c_d0,
        c_q0,
        c_address1,
        c_ce1,
        c_we1,
        c_d1,
        c_q1
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 45'b1;
parameter    ap_ST_st2_fsm_1 = 45'b10;
parameter    ap_ST_st3_fsm_2 = 45'b100;
parameter    ap_ST_st4_fsm_3 = 45'b1000;
parameter    ap_ST_st5_fsm_4 = 45'b10000;
parameter    ap_ST_st6_fsm_5 = 45'b100000;
parameter    ap_ST_st7_fsm_6 = 45'b1000000;
parameter    ap_ST_st8_fsm_7 = 45'b10000000;
parameter    ap_ST_st9_fsm_8 = 45'b100000000;
parameter    ap_ST_st10_fsm_9 = 45'b1000000000;
parameter    ap_ST_st11_fsm_10 = 45'b10000000000;
parameter    ap_ST_st12_fsm_11 = 45'b100000000000;
parameter    ap_ST_st13_fsm_12 = 45'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 45'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 45'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 45'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 45'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 45'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 45'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 45'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 45'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 45'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 45'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 45'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 45'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 45'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 45'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 45'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 45'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 45'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 45'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 45'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 45'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 45'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 45'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 45'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 45'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 45'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 45'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 45'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 45'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 45'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 45'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 45'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 45'b100000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_80 = 32'b10000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv39_0 = 39'b000000000000000000000000000000000000000;
parameter    ap_const_lv64_3FF0000000000000 = 64'b11111111110000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv9_100 = 9'b100000000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv3_7 = 3'b111;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv32_101 = 32'b100000001;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_100 = 32'b100000000;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv64_8000000000000000 = 64'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv8_80 = 8'b10000000;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] c_address0;
output   c_ce0;
output   c_we0;
output  [63:0] c_d0;
input  [63:0] c_q0;
output  [8:0] c_address1;
output   c_ce1;
output   c_we1;
output  [63:0] c_d1;
input  [63:0] c_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] c_address0;
reg c_ce0;
reg c_we0;
reg[63:0] c_d0;
reg[8:0] c_address1;
reg c_ce1;
reg c_we1;
reg[63:0] c_d1;
(* fsm_encoding = "none" *) reg   [44:0] ap_CS_fsm = 45'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_63;
wire   [7:0] cosVec_address0;
reg    cosVec_ce0;
wire   [63:0] cosVec_q0;
wire   [7:0] sinVec_address0;
reg    sinVec_ce0;
wire   [63:0] sinVec_q0;
reg   [63:0] reg_339;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_101;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_bdd_108;
reg    ap_sig_cseq_ST_st35_fsm_34;
reg    ap_sig_bdd_116;
reg   [63:0] reg_348;
reg    ap_sig_cseq_ST_st36_fsm_35;
reg    ap_sig_bdd_125;
wire   [63:0] grp_fu_307_p2;
reg   [63:0] reg_357;
reg    ap_sig_cseq_ST_st40_fsm_39;
reg    ap_sig_bdd_135;
reg    ap_sig_cseq_ST_st41_fsm_40;
reg    ap_sig_bdd_143;
wire   [63:0] grp_fu_311_p2;
reg   [63:0] reg_365;
wire   [8:0] k_3_fu_382_p2;
reg   [8:0] k_3_reg_718;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_156;
wire   [0:0] tmp_fu_388_p2;
reg   [0:0] tmp_reg_723;
wire   [0:0] exitcond3_fu_376_p2;
reg   [8:0] c_addr_reg_727;
reg   [8:0] c_addr_1_reg_732;
reg   [8:0] c_addr_2_reg_737;
reg   [8:0] c_addr_3_reg_742;
wire   [2:0] q_1_fu_444_p2;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_183;
wire   [31:0] j_2_fu_504_p3;
wire   [0:0] exitcond2_fu_438_p2;
wire   [31:0] n_1_fu_512_p3;
wire   [31:0] j_4_fu_520_p2;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_bdd_203;
reg   [63:0] wr_reg_783;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_bdd_213;
wire    grp_fu_532_ap_done;
wire   [63:0] wi_1_fu_560_p1;
reg   [63:0] wi_1_reg_789;
wire   [31:0] grp_fu_532_p2;
reg   [31:0] nb_reg_795;
reg   [30:0] tmp_3_reg_800;
wire   [31:0] n_3_fu_574_p2;
reg   [31:0] n_3_reg_805;
wire   [10:0] tmp_8_fu_580_p1;
reg   [10:0] tmp_8_reg_811;
wire   [7:0] j_5_fu_594_p2;
reg   [7:0] j_5_reg_819;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_bdd_236;
wire   [7:0] k_4_fu_615_p2;
reg   [7:0] k_4_reg_830;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_bdd_245;
reg   [8:0] c_addr_4_reg_839;
wire   [0:0] exitcond_fu_609_p2;
wire   [0:0] tmp_31_fu_621_p2;
reg   [8:0] c_addr_5_reg_844;
reg   [8:0] c_addr_6_reg_849;
reg   [8:0] c_addr_7_reg_854;
wire   [63:0] grp_fu_315_p2;
reg   [63:0] tmp_42_reg_859;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_bdd_269;
wire   [63:0] grp_fu_320_p2;
reg   [63:0] tmp_43_reg_864;
wire   [63:0] grp_fu_325_p2;
reg   [63:0] tmp_44_reg_869;
wire   [63:0] grp_fu_330_p2;
reg   [63:0] tmp_45_reg_874;
reg   [63:0] tmp_34_reg_879;
reg    ap_sig_cseq_ST_st30_fsm_29;
reg    ap_sig_bdd_283;
reg   [63:0] tmp_35_reg_884;
reg   [63:0] tmp_36_reg_889;
reg   [63:0] tmp_37_reg_894;
reg   [63:0] wrk_reg_899;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_bdd_294;
reg   [63:0] wik_1_reg_904;
reg   [63:0] tmp_40_reg_909;
wire  signed [38:0] cp_addr_rec_fu_709_p2;
reg    ap_sig_cseq_ST_st45_fsm_44;
reg    ap_sig_bdd_305;
reg   [8:0] k_reg_163;
reg   [31:0] j_reg_174;
reg   [2:0] q_reg_186;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_323;
reg   [31:0] j_1_reg_197;
reg   [31:0] n_reg_207;
reg   [31:0] n_2_reg_218;
wire   [0:0] exitcond1_fu_588_p2;
reg   [7:0] j_3_reg_230;
reg   [38:0] cp_rec_reg_241;
reg   [63:0] d_1_reg_253;
wire   [0:0] tmp_30_fu_600_p2;
reg    ap_sig_cseq_ST_st44_fsm_43;
reg    ap_sig_bdd_357;
wire   [63:0] wik_phi_fu_272_p6;
reg   [63:0] wik_reg_268;
reg   [7:0] k_1_reg_283;
reg   [31:0] cp_s_reg_296;
wire   [63:0] tmp_24_fu_400_p1;
wire   [63:0] tmp_26_fu_411_p1;
wire  signed [63:0] tmp_27_fu_422_p1;
wire  signed [63:0] tmp_29_fu_433_p1;
wire  signed [63:0] tmp_23_fu_544_p1;
wire   [63:0] cp_sum_cast_fu_646_p1;
wire   [63:0] cp_sum9_cast_fu_667_p1;
wire   [63:0] cp_sum1_cast_fu_683_p1;
wire   [63:0] cp_sum2_cast_fu_700_p1;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_387;
reg    ap_sig_cseq_ST_st34_fsm_33;
reg    ap_sig_bdd_399;
reg    ap_sig_cseq_ST_st43_fsm_42;
reg    ap_sig_bdd_408;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_bdd_422;
reg   [63:0] grp_fu_307_p0;
reg   [63:0] grp_fu_307_p1;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_bdd_438;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_bdd_445;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_bdd_452;
reg   [63:0] grp_fu_311_p0;
reg   [63:0] grp_fu_311_p1;
reg   [63:0] grp_fu_315_p0;
reg   [63:0] grp_fu_315_p1;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_bdd_463;
reg   [63:0] grp_fu_320_p0;
reg   [63:0] grp_fu_320_p1;
reg   [63:0] grp_fu_325_p0;
reg   [63:0] grp_fu_325_p1;
reg   [63:0] grp_fu_330_p0;
reg   [63:0] grp_fu_330_p1;
wire   [31:0] k_cast3_fu_372_p1;
wire   [8:0] i0_fu_394_p2;
wire   [8:0] tmp_25_fu_405_p2;
wire   [31:0] i1_fu_416_p2;
wire   [31:0] tmp_28_fu_427_p2;
wire   [0:0] slt_fu_450_p2;
wire   [30:0] tmp_11_fu_462_p4;
wire   [0:0] rev_fu_456_p2;
wire   [0:0] icmp_fu_472_p2;
wire   [30:0] tmp_5_fu_490_p4;
wire   [0:0] or_cond_fu_478_p2;
wire   [31:0] j_6_fu_484_p2;
wire   [31:0] n_4_fu_500_p1;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_546;
wire   [10:0] grp_fu_532_p0;
wire   [31:0] grp_fu_532_p1;
wire  signed [31:0] tmp_22_fu_538_p2;
wire   [63:0] wi_1_to_int_fu_550_p1;
wire   [63:0] wi_1_neg_fu_554_p2;
wire   [31:0] j_3_cast2_fu_584_p1;
wire   [30:0] k_1_cast1_fu_605_p1;
wire   [7:0] i0_1_fu_626_p2;
wire   [10:0] tmp_13_fu_636_p1;
wire   [10:0] tmp_32_fu_632_p1;
wire   [10:0] cp_sum_fu_640_p2;
wire   [7:0] tmp_33_fu_651_p2;
wire   [10:0] tmp_37_cast_fu_657_p1;
wire   [10:0] cp_sum9_fu_661_p2;
wire   [10:0] tmp_38_cast_fu_672_p2;
wire   [10:0] cp_sum1_fu_677_p2;
wire   [10:0] tmp_40_cast_fu_688_p2;
wire   [10:0] cp_sum2_fu_694_p2;
wire  signed [38:0] cp_cast_fu_705_p1;
reg   [1:0] grp_fu_307_opcode;
wire    grp_fu_307_ce;
reg   [1:0] grp_fu_311_opcode;
wire    grp_fu_311_ce;
wire    grp_fu_315_ce;
wire    grp_fu_320_ce;
wire    grp_fu_325_ce;
wire    grp_fu_330_ce;
wire   [0:0] tmp_s_fu_526_p2;
reg    grp_fu_532_ap_start;
wire    grp_fu_532_ce;
reg   [44:0] ap_NS_fsm;


voicerec_FFT_cosVec #(
    .DataWidth( 64 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
cosVec_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( cosVec_address0 ),
    .ce0( cosVec_ce0 ),
    .q0( cosVec_q0 )
);

voicerec_FFT_sinVec #(
    .DataWidth( 64 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
sinVec_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( sinVec_address0 ),
    .ce0( sinVec_ce0 ),
    .q0( sinVec_q0 )
);

voicerec_dadddsub_64ns_64ns_64_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
voicerec_dadddsub_64ns_64ns_64_5_full_dsp_U4(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_307_p0 ),
    .din1( grp_fu_307_p1 ),
    .opcode( grp_fu_307_opcode ),
    .ce( grp_fu_307_ce ),
    .dout( grp_fu_307_p2 )
);

voicerec_dadddsub_64ns_64ns_64_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
voicerec_dadddsub_64ns_64ns_64_5_full_dsp_U5(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_311_p0 ),
    .din1( grp_fu_311_p1 ),
    .opcode( grp_fu_311_opcode ),
    .ce( grp_fu_311_ce ),
    .dout( grp_fu_311_p2 )
);

voicerec_dmul_64ns_64ns_64_6_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
voicerec_dmul_64ns_64ns_64_6_max_dsp_U6(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_315_p0 ),
    .din1( grp_fu_315_p1 ),
    .ce( grp_fu_315_ce ),
    .dout( grp_fu_315_p2 )
);

voicerec_dmul_64ns_64ns_64_6_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
voicerec_dmul_64ns_64ns_64_6_max_dsp_U7(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_320_p0 ),
    .din1( grp_fu_320_p1 ),
    .ce( grp_fu_320_ce ),
    .dout( grp_fu_320_p2 )
);

voicerec_dmul_64ns_64ns_64_6_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
voicerec_dmul_64ns_64ns_64_6_max_dsp_U8(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_325_p0 ),
    .din1( grp_fu_325_p1 ),
    .ce( grp_fu_325_ce ),
    .dout( grp_fu_325_p2 )
);

voicerec_dmul_64ns_64ns_64_6_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
voicerec_dmul_64ns_64ns_64_6_max_dsp_U9(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_330_p0 ),
    .din1( grp_fu_330_p1 ),
    .ce( grp_fu_330_ce ),
    .dout( grp_fu_330_p2 )
);

voicerec_sdiv_11ns_32ns_32_15_seq #(
    .ID( 1 ),
    .NUM_STAGE( 15 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_sdiv_11ns_32ns_32_15_seq_U10(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .start( grp_fu_532_ap_start ),
    .done( grp_fu_532_ap_done ),
    .din0( grp_fu_532_p0 ),
    .din1( grp_fu_532_p1 ),
    .ce( grp_fu_532_ce ),
    .dout( grp_fu_532_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44)) begin
        cp_rec_reg_241 <= cp_addr_rec_fu_709_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) & ~(ap_const_logic_0 == grp_fu_532_ap_done))) begin
        cp_rec_reg_241 <= ap_const_lv39_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) & ~(ap_const_lv1_0 == exitcond_fu_609_p2))) begin
                cp_s_reg_296[31 : 2] <= n_3_reg_805[31 : 2];
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & (ap_const_lv1_0 == exitcond1_fu_588_p2) & (ap_const_lv1_0 == tmp_30_fu_600_p2))) begin
        cp_s_reg_296[2] <= 1'b0;
        cp_s_reg_296[3] <= 1'b0;
        cp_s_reg_296[4] <= 1'b0;
        cp_s_reg_296[5] <= 1'b0;
        cp_s_reg_296[6] <= 1'b0;
        cp_s_reg_296[7] <= 1'b0;
        cp_s_reg_296[8] <= 1'b0;
        cp_s_reg_296[9] <= 1'b0;
        cp_s_reg_296[10] <= 1'b0;
        cp_s_reg_296[11] <= 1'b0;
        cp_s_reg_296[12] <= 1'b0;
        cp_s_reg_296[13] <= 1'b0;
        cp_s_reg_296[14] <= 1'b0;
        cp_s_reg_296[15] <= 1'b0;
        cp_s_reg_296[16] <= 1'b0;
        cp_s_reg_296[17] <= 1'b0;
        cp_s_reg_296[18] <= 1'b0;
        cp_s_reg_296[19] <= 1'b0;
        cp_s_reg_296[20] <= 1'b0;
        cp_s_reg_296[21] <= 1'b0;
        cp_s_reg_296[22] <= 1'b0;
        cp_s_reg_296[23] <= 1'b0;
        cp_s_reg_296[24] <= 1'b0;
        cp_s_reg_296[25] <= 1'b0;
        cp_s_reg_296[26] <= 1'b0;
        cp_s_reg_296[27] <= 1'b0;
        cp_s_reg_296[28] <= 1'b0;
        cp_s_reg_296[29] <= 1'b0;
        cp_s_reg_296[30] <= 1'b0;
        cp_s_reg_296[31] <= 1'b0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) & (ap_const_lv1_0 == exitcond_fu_609_p2) & (ap_const_lv1_0 == tmp_31_fu_621_p2))) begin
        d_1_reg_253 <= d_1_reg_253;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        d_1_reg_253 <= wrk_reg_899;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & (ap_const_lv1_0 == exitcond1_fu_588_p2) & ~(ap_const_lv1_0 == tmp_30_fu_600_p2))) begin
        d_1_reg_253 <= ap_const_lv64_3FF0000000000000;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == exitcond2_fu_438_p2))) begin
        j_1_reg_197 <= j_2_fu_504_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        j_1_reg_197 <= j_reg_174;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44)) begin
        j_3_reg_230 <= j_5_reg_819;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) & ~(ap_const_logic_0 == grp_fu_532_ap_done))) begin
        j_3_reg_230 <= ap_const_lv8_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == exitcond2_fu_438_p2))) begin
        j_reg_174 <= j_4_fu_520_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        j_reg_174 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) & (ap_const_lv1_0 == exitcond_fu_609_p2) & (ap_const_lv1_0 == tmp_31_fu_621_p2))) begin
        k_1_reg_283 <= k_4_fu_615_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        k_1_reg_283 <= k_4_reg_830;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & (ap_const_lv1_0 == exitcond1_fu_588_p2) & ~(ap_const_lv1_0 == tmp_30_fu_600_p2))) begin
        k_1_reg_283 <= ap_const_lv8_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == exitcond2_fu_438_p2))) begin
        k_reg_163 <= k_3_reg_718;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        k_reg_163 <= ap_const_lv9_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & ~(ap_const_lv1_0 == exitcond1_fu_588_p2))) begin
                n_2_reg_218[31 : 1] <= n_3_reg_805[31 : 1];
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond3_fu_376_p2 == ap_const_lv1_0))) begin
        n_2_reg_218[1] <= 1'b1;
        n_2_reg_218[2] <= 1'b0;
        n_2_reg_218[3] <= 1'b0;
        n_2_reg_218[4] <= 1'b0;
        n_2_reg_218[5] <= 1'b0;
        n_2_reg_218[6] <= 1'b0;
        n_2_reg_218[7] <= 1'b0;
        n_2_reg_218[8] <= 1'b0;
        n_2_reg_218[9] <= 1'b0;
        n_2_reg_218[10] <= 1'b0;
        n_2_reg_218[11] <= 1'b0;
        n_2_reg_218[12] <= 1'b0;
        n_2_reg_218[13] <= 1'b0;
        n_2_reg_218[14] <= 1'b0;
        n_2_reg_218[15] <= 1'b0;
        n_2_reg_218[16] <= 1'b0;
        n_2_reg_218[17] <= 1'b0;
        n_2_reg_218[18] <= 1'b0;
        n_2_reg_218[19] <= 1'b0;
        n_2_reg_218[20] <= 1'b0;
        n_2_reg_218[21] <= 1'b0;
        n_2_reg_218[22] <= 1'b0;
        n_2_reg_218[23] <= 1'b0;
        n_2_reg_218[24] <= 1'b0;
        n_2_reg_218[25] <= 1'b0;
        n_2_reg_218[26] <= 1'b0;
        n_2_reg_218[27] <= 1'b0;
        n_2_reg_218[28] <= 1'b0;
        n_2_reg_218[29] <= 1'b0;
        n_2_reg_218[30] <= 1'b0;
        n_2_reg_218[31] <= 1'b0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == exitcond2_fu_438_p2))) begin
        n_reg_207 <= n_1_fu_512_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        n_reg_207 <= ap_const_lv32_80;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == exitcond2_fu_438_p2))) begin
        q_reg_186 <= q_1_fu_444_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        q_reg_186 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) & (ap_const_lv1_0 == exitcond_fu_609_p2) & (ap_const_lv1_0 == tmp_31_fu_621_p2))) begin
        wik_reg_268 <= wik_reg_268;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        wik_reg_268 <= wik_1_reg_904;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & (ap_const_lv1_0 == exitcond1_fu_588_p2) & ~(ap_const_lv1_0 == tmp_30_fu_600_p2))) begin
        wik_reg_268 <= ap_const_lv64_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond3_fu_376_p2 == ap_const_lv1_0) & ~(tmp_fu_388_p2 == ap_const_lv1_0))) begin
        c_addr_1_reg_732[8 : 1] <= tmp_26_fu_411_p1[8 : 1];
        c_addr_reg_727[8 : 1] <= tmp_24_fu_400_p1[8 : 1];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        c_addr_2_reg_737[8 : 1] <= tmp_27_fu_422_p1[8 : 1];
        c_addr_3_reg_742[8 : 1] <= tmp_29_fu_433_p1[8 : 1];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) & (ap_const_lv1_0 == exitcond_fu_609_p2) & ~(ap_const_lv1_0 == tmp_31_fu_621_p2))) begin
        c_addr_4_reg_839 <= cp_sum_cast_fu_646_p1;
        c_addr_5_reg_844 <= cp_sum9_cast_fu_667_p1;
        c_addr_6_reg_849 <= cp_sum1_cast_fu_683_p1;
        c_addr_7_reg_854 <= cp_sum2_cast_fu_700_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        j_5_reg_819 <= j_5_fu_594_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        k_3_reg_718 <= k_3_fu_382_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        k_4_reg_830 <= k_4_fu_615_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) & ~(ap_const_logic_0 == grp_fu_532_ap_done))) begin
        n_3_reg_805[31 : 2] <= n_3_fu_574_p2[31 : 2];
        nb_reg_795 <= grp_fu_532_p2;
        tmp_3_reg_800 <= {{n_2_reg_218[ap_const_lv32_1F : ap_const_lv32_1]}};
        tmp_8_reg_811[10 : 1] <= tmp_8_fu_580_p1[10 : 1];
        wi_1_reg_789 <= wi_1_fu_560_p1;
        wr_reg_783 <= cosVec_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34))) begin
        reg_339 <= c_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35))) begin
        reg_348 <= c_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34) | (ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_39) | (ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40))) begin
        reg_357 <= grp_fu_307_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34) | (ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40))) begin
        reg_365 <= grp_fu_311_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        tmp_34_reg_879 <= grp_fu_315_p2;
        tmp_35_reg_884 <= grp_fu_320_p2;
        tmp_36_reg_889 <= grp_fu_325_p2;
        tmp_37_reg_894 <= grp_fu_330_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_39)) begin
        tmp_40_reg_909 <= grp_fu_311_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        tmp_42_reg_859 <= grp_fu_315_p2;
        tmp_43_reg_864 <= grp_fu_320_p2;
        tmp_44_reg_869 <= grp_fu_325_p2;
        tmp_45_reg_874 <= grp_fu_330_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond3_fu_376_p2 == ap_const_lv1_0))) begin
        tmp_reg_723 <= tmp_fu_388_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        wik_1_reg_904 <= grp_fu_311_p2;
        wrk_reg_899 <= grp_fu_307_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st7_fsm_6 or tmp_s_fu_526_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & (ap_const_lv1_0 == tmp_s_fu_526_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or tmp_s_fu_526_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & (ap_const_lv1_0 == tmp_s_fu_526_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_63)
begin
    if (ap_sig_bdd_63) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st20_fsm_19 assign process. ///
always @ (ap_sig_bdd_203)
begin
    if (ap_sig_bdd_203) begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st21_fsm_20 assign process. ///
always @ (ap_sig_bdd_213)
begin
    if (ap_sig_bdd_213) begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st22_fsm_21 assign process. ///
always @ (ap_sig_bdd_236)
begin
    if (ap_sig_bdd_236) begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st23_fsm_22 assign process. ///
always @ (ap_sig_bdd_245)
begin
    if (ap_sig_bdd_245) begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st24_fsm_23 assign process. ///
always @ (ap_sig_bdd_108)
begin
    if (ap_sig_bdd_108) begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st25_fsm_24 assign process. ///
always @ (ap_sig_bdd_463)
begin
    if (ap_sig_bdd_463) begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st28_fsm_27 assign process. ///
always @ (ap_sig_bdd_269)
begin
    if (ap_sig_bdd_269) begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st29_fsm_28 assign process. ///
always @ (ap_sig_bdd_438)
begin
    if (ap_sig_bdd_438) begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_156)
begin
    if (ap_sig_bdd_156) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st30_fsm_29 assign process. ///
always @ (ap_sig_bdd_283)
begin
    if (ap_sig_bdd_283) begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st31_fsm_30 assign process. ///
always @ (ap_sig_bdd_445)
begin
    if (ap_sig_bdd_445) begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st33_fsm_32 assign process. ///
always @ (ap_sig_bdd_294)
begin
    if (ap_sig_bdd_294) begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st34_fsm_33 assign process. ///
always @ (ap_sig_bdd_399)
begin
    if (ap_sig_bdd_399) begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st35_fsm_34 assign process. ///
always @ (ap_sig_bdd_116)
begin
    if (ap_sig_bdd_116) begin
        ap_sig_cseq_ST_st35_fsm_34 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st35_fsm_34 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st36_fsm_35 assign process. ///
always @ (ap_sig_bdd_125)
begin
    if (ap_sig_bdd_125) begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st37_fsm_36 assign process. ///
always @ (ap_sig_bdd_452)
begin
    if (ap_sig_bdd_452) begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_101)
begin
    if (ap_sig_bdd_101) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st40_fsm_39 assign process. ///
always @ (ap_sig_bdd_135)
begin
    if (ap_sig_bdd_135) begin
        ap_sig_cseq_ST_st40_fsm_39 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st40_fsm_39 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st41_fsm_40 assign process. ///
always @ (ap_sig_bdd_143)
begin
    if (ap_sig_bdd_143) begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st42_fsm_41 assign process. ///
always @ (ap_sig_bdd_422)
begin
    if (ap_sig_bdd_422) begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st43_fsm_42 assign process. ///
always @ (ap_sig_bdd_408)
begin
    if (ap_sig_bdd_408) begin
        ap_sig_cseq_ST_st43_fsm_42 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st43_fsm_42 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st44_fsm_43 assign process. ///
always @ (ap_sig_bdd_357)
begin
    if (ap_sig_bdd_357) begin
        ap_sig_cseq_ST_st44_fsm_43 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st44_fsm_43 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st45_fsm_44 assign process. ///
always @ (ap_sig_bdd_305)
begin
    if (ap_sig_bdd_305) begin
        ap_sig_cseq_ST_st45_fsm_44 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st45_fsm_44 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_387)
begin
    if (ap_sig_bdd_387) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_323)
begin
    if (ap_sig_bdd_323) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_183)
begin
    if (ap_sig_bdd_183) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_546)
begin
    if (ap_sig_bdd_546) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// c_address0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st41_fsm_40 or ap_sig_cseq_ST_st2_fsm_1 or c_addr_reg_727 or c_addr_2_reg_737 or ap_sig_cseq_ST_st23_fsm_22 or c_addr_4_reg_839 or c_addr_6_reg_849 or ap_sig_cseq_ST_st5_fsm_4 or tmp_24_fu_400_p1 or tmp_27_fu_422_p1 or cp_sum1_cast_fu_683_p1 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st34_fsm_33 or ap_sig_cseq_ST_st43_fsm_42)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42)) begin
        c_address0 = c_addr_6_reg_849;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        c_address0 = c_addr_2_reg_737;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c_address0 = c_addr_reg_727;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40) | (ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33))) begin
        c_address0 = c_addr_4_reg_839;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        c_address0 = cp_sum1_cast_fu_683_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        c_address0 = tmp_27_fu_422_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        c_address0 = tmp_24_fu_400_p1;
    end else begin
        c_address0 = 'bx;
    end
end

/// c_address1 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st35_fsm_34 or ap_sig_cseq_ST_st2_fsm_1 or c_addr_1_reg_732 or c_addr_3_reg_742 or ap_sig_cseq_ST_st23_fsm_22 or c_addr_5_reg_844 or c_addr_7_reg_854 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st44_fsm_43 or tmp_26_fu_411_p1 or tmp_29_fu_433_p1 or cp_sum2_cast_fu_700_p1 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st42_fsm_41)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        c_address1 = c_addr_7_reg_854;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        c_address1 = c_addr_3_reg_742;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c_address1 = c_addr_1_reg_732;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34) | (ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41))) begin
        c_address1 = c_addr_5_reg_844;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        c_address1 = cp_sum2_cast_fu_700_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        c_address1 = tmp_29_fu_433_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        c_address1 = tmp_26_fu_411_p1;
    end else begin
        c_address1 = 'bx;
    end
end

/// c_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st41_fsm_40 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st23_fsm_22 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st34_fsm_33 or ap_sig_cseq_ST_st43_fsm_42)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40) | (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33) | (ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42))) begin
        c_ce0 = ap_const_logic_1;
    end else begin
        c_ce0 = ap_const_logic_0;
    end
end

/// c_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st35_fsm_34 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st23_fsm_22 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st44_fsm_43 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st42_fsm_41)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34) | (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41))) begin
        c_ce1 = ap_const_logic_1;
    end else begin
        c_ce1 = ap_const_logic_0;
    end
end

/// c_d0 assign process. ///
always @ (c_q0 or reg_339 or reg_357 or ap_sig_cseq_ST_st41_fsm_40 or tmp_40_reg_909 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st43_fsm_42)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42)) begin
        c_d0 = tmp_40_reg_909;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        c_d0 = reg_357;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        c_d0 = reg_339;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c_d0 = c_q0;
    end else begin
        c_d0 = 'bx;
    end
end

/// c_d1 assign process. ///
always @ (c_q1 or reg_348 or reg_357 or reg_365 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st44_fsm_43 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st42_fsm_41)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        c_d1 = reg_365;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        c_d1 = reg_357;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        c_d1 = reg_348;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c_d1 = c_q1;
    end else begin
        c_d1 = 'bx;
    end
end

/// c_we0 assign process. ///
always @ (ap_sig_cseq_ST_st41_fsm_40 or tmp_reg_723 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st43_fsm_42)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~(tmp_reg_723 == ap_const_lv1_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42))) begin
        c_we0 = ap_const_logic_1;
    end else begin
        c_we0 = ap_const_logic_0;
    end
end

/// c_we1 assign process. ///
always @ (tmp_reg_723 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st44_fsm_43 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st42_fsm_41)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~(tmp_reg_723 == ap_const_lv1_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41))) begin
        c_we1 = ap_const_logic_1;
    end else begin
        c_we1 = ap_const_logic_0;
    end
end

/// cosVec_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st20_fsm_19)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        cosVec_ce0 = ap_const_logic_1;
    end else begin
        cosVec_ce0 = ap_const_logic_0;
    end
end

/// grp_fu_307_opcode assign process. ///
always @ (ap_sig_cseq_ST_st36_fsm_35 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st37_fsm_36)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) | (ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30))) begin
        grp_fu_307_opcode = ap_const_lv2_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35) | (ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36))) begin
        grp_fu_307_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_307_opcode = 'bx;
    end
end

/// grp_fu_307_p0 assign process. ///
always @ (reg_339 or reg_348 or ap_sig_cseq_ST_st36_fsm_35 or tmp_42_reg_859 or tmp_34_reg_879 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st37_fsm_36)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        grp_fu_307_p0 = reg_348;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        grp_fu_307_p0 = reg_339;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        grp_fu_307_p0 = tmp_34_reg_879;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        grp_fu_307_p0 = tmp_42_reg_859;
    end else begin
        grp_fu_307_p0 = 'bx;
    end
end

/// grp_fu_307_p1 assign process. ///
always @ (ap_sig_cseq_ST_st36_fsm_35 or reg_357 or reg_365 or tmp_43_reg_864 or tmp_35_reg_884 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st37_fsm_36)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        grp_fu_307_p1 = reg_365;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        grp_fu_307_p1 = reg_357;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        grp_fu_307_p1 = tmp_35_reg_884;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        grp_fu_307_p1 = tmp_43_reg_864;
    end else begin
        grp_fu_307_p1 = 'bx;
    end
end

/// grp_fu_311_opcode assign process. ///
always @ (ap_sig_cseq_ST_st36_fsm_35 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st37_fsm_36)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35) | (ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36))) begin
        grp_fu_311_opcode = ap_const_lv2_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) | (ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30))) begin
        grp_fu_311_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_311_opcode = 'bx;
    end
end

/// grp_fu_311_p0 assign process. ///
always @ (reg_339 or reg_348 or ap_sig_cseq_ST_st36_fsm_35 or tmp_44_reg_869 or tmp_36_reg_889 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st37_fsm_36)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        grp_fu_311_p0 = reg_348;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        grp_fu_311_p0 = reg_339;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        grp_fu_311_p0 = tmp_36_reg_889;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        grp_fu_311_p0 = tmp_44_reg_869;
    end else begin
        grp_fu_311_p0 = 'bx;
    end
end

/// grp_fu_311_p1 assign process. ///
always @ (ap_sig_cseq_ST_st36_fsm_35 or reg_357 or reg_365 or tmp_45_reg_874 or tmp_37_reg_894 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st37_fsm_36)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        grp_fu_311_p1 = reg_365;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        grp_fu_311_p1 = reg_357;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        grp_fu_311_p1 = tmp_37_reg_894;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        grp_fu_311_p1 = tmp_45_reg_874;
    end else begin
        grp_fu_311_p1 = 'bx;
    end
end

/// grp_fu_315_p0 assign process. ///
always @ (wr_reg_783 or ap_sig_cseq_ST_st23_fsm_22 or d_1_reg_253 or ap_sig_cseq_ST_st25_fsm_24)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        grp_fu_315_p0 = d_1_reg_253;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_315_p0 = wr_reg_783;
    end else begin
        grp_fu_315_p0 = 'bx;
    end
end

/// grp_fu_315_p1 assign process. ///
always @ (reg_339 or ap_sig_cseq_ST_st23_fsm_22 or d_1_reg_253 or ap_sig_cseq_ST_st25_fsm_24)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        grp_fu_315_p1 = reg_339;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_315_p1 = d_1_reg_253;
    end else begin
        grp_fu_315_p1 = 'bx;
    end
end

/// grp_fu_320_p0 assign process. ///
always @ (ap_sig_cseq_ST_st23_fsm_22 or wik_phi_fu_272_p6 or wik_reg_268 or ap_sig_cseq_ST_st25_fsm_24)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        grp_fu_320_p0 = wik_reg_268;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_320_p0 = wik_phi_fu_272_p6;
    end else begin
        grp_fu_320_p0 = 'bx;
    end
end

/// grp_fu_320_p1 assign process. ///
always @ (reg_348 or wi_1_reg_789 or ap_sig_cseq_ST_st23_fsm_22 or ap_sig_cseq_ST_st25_fsm_24)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        grp_fu_320_p1 = reg_348;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_320_p1 = wi_1_reg_789;
    end else begin
        grp_fu_320_p1 = 'bx;
    end
end

/// grp_fu_325_p0 assign process. ///
always @ (wr_reg_783 or ap_sig_cseq_ST_st23_fsm_22 or d_1_reg_253 or ap_sig_cseq_ST_st25_fsm_24)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        grp_fu_325_p0 = d_1_reg_253;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_325_p0 = wr_reg_783;
    end else begin
        grp_fu_325_p0 = 'bx;
    end
end

/// grp_fu_325_p1 assign process. ///
always @ (reg_348 or ap_sig_cseq_ST_st23_fsm_22 or wik_reg_268 or ap_sig_cseq_ST_st25_fsm_24)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        grp_fu_325_p1 = reg_348;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_325_p1 = wik_reg_268;
    end else begin
        grp_fu_325_p1 = 'bx;
    end
end

/// grp_fu_330_p0 assign process. ///
always @ (ap_sig_cseq_ST_st23_fsm_22 or d_1_reg_253 or wik_reg_268 or ap_sig_cseq_ST_st25_fsm_24)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        grp_fu_330_p0 = wik_reg_268;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_330_p0 = d_1_reg_253;
    end else begin
        grp_fu_330_p0 = 'bx;
    end
end

/// grp_fu_330_p1 assign process. ///
always @ (reg_339 or wi_1_reg_789 or ap_sig_cseq_ST_st23_fsm_22 or ap_sig_cseq_ST_st25_fsm_24)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        grp_fu_330_p1 = reg_339;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_330_p1 = wi_1_reg_789;
    end else begin
        grp_fu_330_p1 = 'bx;
    end
end

/// grp_fu_532_ap_start assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or tmp_s_fu_526_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & ~(ap_const_lv1_0 == tmp_s_fu_526_p2))) begin
        grp_fu_532_ap_start = ap_const_logic_1;
    end else begin
        grp_fu_532_ap_start = ap_const_logic_0;
    end
end

/// sinVec_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st20_fsm_19)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        sinVec_ce0 = ap_const_logic_1;
    end else begin
        sinVec_ce0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or tmp_fu_388_p2 or exitcond3_fu_376_p2 or exitcond2_fu_438_p2 or grp_fu_532_ap_done or exitcond_fu_609_p2 or tmp_31_fu_621_p2 or exitcond1_fu_588_p2 or tmp_30_fu_600_p2 or tmp_s_fu_526_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (((exitcond3_fu_376_p2 == ap_const_lv1_0) & (tmp_fu_388_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else if (((exitcond3_fu_376_p2 == ap_const_lv1_0) & ~(tmp_fu_388_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            if (~(ap_const_lv1_0 == exitcond2_fu_438_p2)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st7_fsm_6 : 
        begin
            if ((ap_const_lv1_0 == tmp_s_fu_526_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            if (~(ap_const_logic_0 == grp_fu_532_ap_done)) begin
                ap_NS_fsm = ap_ST_st22_fsm_21;
            end else begin
                ap_NS_fsm = ap_ST_st21_fsm_20;
            end
        end
        ap_ST_st22_fsm_21 : 
        begin
            if (((ap_const_lv1_0 == exitcond1_fu_588_p2) & (ap_const_lv1_0 == tmp_30_fu_600_p2))) begin
                ap_NS_fsm = ap_ST_st45_fsm_44;
            end else if (((ap_const_lv1_0 == exitcond1_fu_588_p2) & ~(ap_const_lv1_0 == tmp_30_fu_600_p2))) begin
                ap_NS_fsm = ap_ST_st23_fsm_22;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st23_fsm_22 : 
        begin
            if (((ap_const_lv1_0 == exitcond_fu_609_p2) & ~(ap_const_lv1_0 == tmp_31_fu_621_p2))) begin
                ap_NS_fsm = ap_ST_st24_fsm_23;
            end else if (((ap_const_lv1_0 == exitcond_fu_609_p2) & (ap_const_lv1_0 == tmp_31_fu_621_p2))) begin
                ap_NS_fsm = ap_ST_st23_fsm_22;
            end else begin
                ap_NS_fsm = ap_ST_st45_fsm_44;
            end
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st45_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_101 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_101 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_108 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_108 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end

/// ap_sig_bdd_116 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_116 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_22]);
end

/// ap_sig_bdd_125 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_125 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_23]);
end

/// ap_sig_bdd_135 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_135 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_27]);
end

/// ap_sig_bdd_143 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_143 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_28]);
end

/// ap_sig_bdd_156 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_156 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_183 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_183 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_203 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_203 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end

/// ap_sig_bdd_213 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_213 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end

/// ap_sig_bdd_236 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_236 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_15]);
end

/// ap_sig_bdd_245 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_245 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_16]);
end

/// ap_sig_bdd_269 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_269 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1B]);
end

/// ap_sig_bdd_283 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_283 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1D]);
end

/// ap_sig_bdd_294 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_294 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_20]);
end

/// ap_sig_bdd_305 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_305 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2C]);
end

/// ap_sig_bdd_323 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_323 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_357 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_357 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2B]);
end

/// ap_sig_bdd_387 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_387 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_399 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_399 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_21]);
end

/// ap_sig_bdd_408 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_408 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2A]);
end

/// ap_sig_bdd_422 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_422 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_29]);
end

/// ap_sig_bdd_438 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_438 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1C]);
end

/// ap_sig_bdd_445 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_445 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1E]);
end

/// ap_sig_bdd_452 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_452 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_24]);
end

/// ap_sig_bdd_463 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_463 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_18]);
end

/// ap_sig_bdd_546 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_546 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_63 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_63 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end
assign cosVec_address0 = tmp_23_fu_544_p1;
assign cp_addr_rec_fu_709_p2 = ($signed(cp_cast_fu_705_p1) + $signed(cp_rec_reg_241));
assign cp_cast_fu_705_p1 = $signed(cp_s_reg_296);
assign cp_sum1_cast_fu_683_p1 = cp_sum1_fu_677_p2;
assign cp_sum1_fu_677_p2 = (tmp_13_fu_636_p1 + tmp_38_cast_fu_672_p2);
assign cp_sum2_cast_fu_700_p1 = cp_sum2_fu_694_p2;
assign cp_sum2_fu_694_p2 = (tmp_13_fu_636_p1 + tmp_40_cast_fu_688_p2);
assign cp_sum9_cast_fu_667_p1 = cp_sum9_fu_661_p2;
assign cp_sum9_fu_661_p2 = (tmp_13_fu_636_p1 + tmp_37_cast_fu_657_p1);
assign cp_sum_cast_fu_646_p1 = cp_sum_fu_640_p2;
assign cp_sum_fu_640_p2 = (tmp_13_fu_636_p1 + tmp_32_fu_632_p1);
assign exitcond1_fu_588_p2 = (j_3_reg_230 == ap_const_lv8_80? 1'b1: 1'b0);
assign exitcond2_fu_438_p2 = (q_reg_186 == ap_const_lv3_7? 1'b1: 1'b0);
assign exitcond3_fu_376_p2 = (k_reg_163 == ap_const_lv9_100? 1'b1: 1'b0);
assign exitcond_fu_609_p2 = (k_1_reg_283 == ap_const_lv8_80? 1'b1: 1'b0);
assign grp_fu_307_ce = ap_const_logic_1;
assign grp_fu_311_ce = ap_const_logic_1;
assign grp_fu_315_ce = ap_const_logic_1;
assign grp_fu_320_ce = ap_const_logic_1;
assign grp_fu_325_ce = ap_const_logic_1;
assign grp_fu_330_ce = ap_const_logic_1;
assign grp_fu_532_ce = ap_const_logic_1;
assign grp_fu_532_p0 = ap_const_lv32_100;
assign grp_fu_532_p1 = n_2_reg_218;
assign i0_1_fu_626_p2 = k_1_reg_283 << ap_const_lv8_1;
assign i0_fu_394_p2 = k_reg_163 << ap_const_lv9_1;
assign i1_fu_416_p2 = j_reg_174 << ap_const_lv32_1;
assign icmp_fu_472_p2 = ($signed(tmp_11_fu_462_p4) > $signed(31'b0000000000000000000000000000000)? 1'b1: 1'b0);
assign j_2_fu_504_p3 = ((or_cond_fu_478_p2[0:0]===1'b1)? j_6_fu_484_p2: j_1_reg_197);
assign j_3_cast2_fu_584_p1 = j_3_reg_230;
assign j_4_fu_520_p2 = (j_1_reg_197 + n_reg_207);
assign j_5_fu_594_p2 = (j_3_reg_230 + ap_const_lv8_1);
assign j_6_fu_484_p2 = (j_1_reg_197 - n_reg_207);
assign k_1_cast1_fu_605_p1 = k_1_reg_283;
assign k_3_fu_382_p2 = (k_reg_163 + ap_const_lv9_1);
assign k_4_fu_615_p2 = (k_1_reg_283 + ap_const_lv8_1);
assign k_cast3_fu_372_p1 = k_reg_163;
assign n_1_fu_512_p3 = ((or_cond_fu_478_p2[0:0]===1'b1)? n_4_fu_500_p1: n_reg_207);
assign n_3_fu_574_p2 = n_2_reg_218 << ap_const_lv32_1;
assign n_4_fu_500_p1 = tmp_5_fu_490_p4;
assign or_cond_fu_478_p2 = (rev_fu_456_p2 & icmp_fu_472_p2);
assign q_1_fu_444_p2 = (q_reg_186 + ap_const_lv3_1);
assign rev_fu_456_p2 = (slt_fu_450_p2 ^ ap_const_lv1_1);
assign sinVec_address0 = tmp_23_fu_544_p1;
assign slt_fu_450_p2 = ($signed(j_1_reg_197) < $signed(n_reg_207)? 1'b1: 1'b0);
assign tmp_11_fu_462_p4 = {{n_reg_207[ap_const_lv32_1F : ap_const_lv32_1]}};
assign tmp_13_fu_636_p1 = cp_rec_reg_241[10:0];
assign tmp_22_fu_538_p2 = ($signed(ap_const_lv32_FFFFFFFF) + $signed(n_2_reg_218));
assign tmp_23_fu_544_p1 = tmp_22_fu_538_p2;
assign tmp_24_fu_400_p1 = i0_fu_394_p2;
assign tmp_25_fu_405_p2 = (i0_fu_394_p2 | ap_const_lv9_1);
assign tmp_26_fu_411_p1 = tmp_25_fu_405_p2;
assign tmp_27_fu_422_p1 = $signed(i1_fu_416_p2);
assign tmp_28_fu_427_p2 = (i1_fu_416_p2 | ap_const_lv32_1);
assign tmp_29_fu_433_p1 = $signed(tmp_28_fu_427_p2);
assign tmp_30_fu_600_p2 = ($signed(j_3_cast2_fu_584_p1) < $signed(nb_reg_795)? 1'b1: 1'b0);
assign tmp_31_fu_621_p2 = ($signed(k_1_cast1_fu_605_p1) < $signed(tmp_3_reg_800)? 1'b1: 1'b0);
assign tmp_32_fu_632_p1 = i0_1_fu_626_p2;
assign tmp_33_fu_651_p2 = (i0_1_fu_626_p2 | ap_const_lv8_1);
assign tmp_37_cast_fu_657_p1 = tmp_33_fu_651_p2;
assign tmp_38_cast_fu_672_p2 = (tmp_8_reg_811 + tmp_32_fu_632_p1);
assign tmp_40_cast_fu_688_p2 = (tmp_38_cast_fu_672_p2 | ap_const_lv11_1);
assign tmp_5_fu_490_p4 = {{n_reg_207[ap_const_lv32_1F : ap_const_lv32_1]}};
assign tmp_8_fu_580_p1 = n_2_reg_218[10:0];
assign tmp_fu_388_p2 = ($signed(k_cast3_fu_372_p1) < $signed(j_reg_174)? 1'b1: 1'b0);
assign tmp_s_fu_526_p2 = ($signed(n_2_reg_218) < $signed(32'b100000001)? 1'b1: 1'b0);
assign wi_1_fu_560_p1 = wi_1_neg_fu_554_p2;
assign wi_1_neg_fu_554_p2 = (wi_1_to_int_fu_550_p1 ^ ap_const_lv64_8000000000000000);
assign wi_1_to_int_fu_550_p1 = sinVec_q0;
assign wik_phi_fu_272_p6 = wik_reg_268;
always @ (posedge ap_clk)
begin
    c_addr_reg_727[0] <= 1'b0;
    c_addr_1_reg_732[0] <= 1'b1;
    c_addr_2_reg_737[0] <= 1'b0;
    c_addr_3_reg_742[0] <= 1'b1;
    n_3_reg_805[1:0] <= 2'b00;
    tmp_8_reg_811[0] <= 1'b0;
    n_2_reg_218[0] <= 1'b0;
    cp_s_reg_296[1:0] <= 2'b00;
end



endmodule //voicerec_FFT

